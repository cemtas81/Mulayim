#pragma warning disable 219
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ludiq.Generated.Aot
{
	
	
	// AdsBanner.op_Equality
	// AdsBanner.op_Implicit
	// AdsBanner.op_Inequality
	// AdsInter.op_Equality
	// AdsInter.op_Implicit
	// AdsInter.op_Inequality
	// AlphaButtonClickMask.op_Equality
	// AlphaButtonClickMask.op_Implicit
	// AlphaButtonClickMask.op_Inequality
	// Bolt.AnimatorMessageListener.op_Equality
	// Bolt.AnimatorMessageListener.op_Implicit
	// Bolt.AnimatorMessageListener.op_Inequality
	// Bolt.FlowMachine.enabled
	// Bolt.FlowMachine.isActiveAndEnabled
	// Bolt.FlowMachine.op_Equality
	// Bolt.FlowMachine.op_Implicit
	// Bolt.FlowMachine.op_Inequality
	// Bolt.FlowMacro.op_Equality
	// Bolt.FlowMacro.op_Implicit
	// Bolt.FlowMacro.op_Inequality
	// Bolt.StateMachine.enabled
	// Bolt.StateMachine.op_Equality
	// Bolt.StateMachine.op_Implicit
	// Bolt.StateMachine.op_Inequality
	// Bolt.StateMacro.op_Equality
	// Bolt.StateMacro.op_Implicit
	// Bolt.StateMacro.op_Inequality
	// BoxObjectPool.op_Equality
	// BoxObjectPool.op_Implicit
	// BoxObjectPool.op_Inequality
	// ButtonAnimation.op_Equality
	// ButtonAnimation.op_Implicit
	// ButtonAnimation.op_Inequality
	// CameraCollision_1.op_Equality
	// CameraCollision_1.op_Implicit
	// CameraCollision_1.op_Inequality
	// CameraSwitch.op_Equality
	// CameraSwitch.op_Implicit
	// CameraSwitch.op_Inequality
	// Cinemachine.Cinemachine3rdPersonAim.op_Equality
	// Cinemachine.Cinemachine3rdPersonAim.op_Implicit
	// Cinemachine.Cinemachine3rdPersonAim.op_Inequality
	// Cinemachine.Cinemachine3rdPersonFollow.op_Equality
	// Cinemachine.Cinemachine3rdPersonFollow.op_Implicit
	// Cinemachine.Cinemachine3rdPersonFollow.op_Inequality
	// Cinemachine.CinemachineBasicMultiChannelPerlin.op_Equality
	// Cinemachine.CinemachineBasicMultiChannelPerlin.op_Implicit
	// Cinemachine.CinemachineBasicMultiChannelPerlin.op_Inequality
	// Cinemachine.CinemachineBlenderSettings.op_Equality
	// Cinemachine.CinemachineBlenderSettings.op_Implicit
	// Cinemachine.CinemachineBlenderSettings.op_Inequality
	// Cinemachine.CinemachineBlendListCamera.op_Equality
	// Cinemachine.CinemachineBlendListCamera.op_Implicit
	// Cinemachine.CinemachineBlendListCamera.op_Inequality
	// Cinemachine.CinemachineBrain.op_Equality
	// Cinemachine.CinemachineBrain.op_Implicit
	// Cinemachine.CinemachineBrain.op_Inequality
	// Cinemachine.CinemachineClearShot.op_Equality
	// Cinemachine.CinemachineClearShot.op_Implicit
	// Cinemachine.CinemachineClearShot.op_Inequality
	// Cinemachine.CinemachineCollider.op_Equality
	// Cinemachine.CinemachineCollider.op_Implicit
	// Cinemachine.CinemachineCollider.op_Inequality
	// Cinemachine.CinemachineCollisionImpulseSource.op_Equality
	// Cinemachine.CinemachineCollisionImpulseSource.op_Implicit
	// Cinemachine.CinemachineCollisionImpulseSource.op_Inequality
	// Cinemachine.CinemachineComposer.op_Equality
	// Cinemachine.CinemachineComposer.op_Implicit
	// Cinemachine.CinemachineComposer.op_Inequality
	// Cinemachine.CinemachineConfiner.op_Equality
	// Cinemachine.CinemachineConfiner.op_Implicit
	// Cinemachine.CinemachineConfiner.op_Inequality
	// Cinemachine.CinemachineDollyCart.op_Equality
	// Cinemachine.CinemachineDollyCart.op_Implicit
	// Cinemachine.CinemachineDollyCart.op_Inequality
	// Cinemachine.CinemachineExternalCamera.op_Equality
	// Cinemachine.CinemachineExternalCamera.op_Implicit
	// Cinemachine.CinemachineExternalCamera.op_Inequality
	// Cinemachine.CinemachineFixedSignal.op_Equality
	// Cinemachine.CinemachineFixedSignal.op_Implicit
	// Cinemachine.CinemachineFixedSignal.op_Inequality
	// Cinemachine.CinemachineFollowZoom.op_Equality
	// Cinemachine.CinemachineFollowZoom.op_Implicit
	// Cinemachine.CinemachineFollowZoom.op_Inequality
	// Cinemachine.CinemachineFramingTransposer.op_Equality
	// Cinemachine.CinemachineFramingTransposer.op_Implicit
	// Cinemachine.CinemachineFramingTransposer.op_Inequality
	// Cinemachine.CinemachineFreeLook.ForceCameraPosition
	// Cinemachine.CinemachineFreeLook.op_Equality
	// Cinemachine.CinemachineFreeLook.op_Implicit
	// Cinemachine.CinemachineFreeLook.op_Inequality
	// Cinemachine.CinemachineGroupComposer.op_Equality
	// Cinemachine.CinemachineGroupComposer.op_Implicit
	// Cinemachine.CinemachineGroupComposer.op_Inequality
	// Cinemachine.CinemachineHardLockToTarget.op_Equality
	// Cinemachine.CinemachineHardLockToTarget.op_Implicit
	// Cinemachine.CinemachineHardLockToTarget.op_Inequality
	// Cinemachine.CinemachineHardLookAt.op_Equality
	// Cinemachine.CinemachineHardLookAt.op_Implicit
	// Cinemachine.CinemachineHardLookAt.op_Inequality
	// Cinemachine.CinemachineImpulseListener.op_Equality
	// Cinemachine.CinemachineImpulseListener.op_Implicit
	// Cinemachine.CinemachineImpulseListener.op_Inequality
	// Cinemachine.CinemachineImpulseSource.op_Equality
	// Cinemachine.CinemachineImpulseSource.op_Implicit
	// Cinemachine.CinemachineImpulseSource.op_Inequality
	// Cinemachine.CinemachineIndependentImpulseListener.op_Equality
	// Cinemachine.CinemachineIndependentImpulseListener.op_Implicit
	// Cinemachine.CinemachineIndependentImpulseListener.op_Inequality
	// Cinemachine.CinemachineInputProvider.op_Equality
	// Cinemachine.CinemachineInputProvider.op_Implicit
	// Cinemachine.CinemachineInputProvider.op_Inequality
	// Cinemachine.CinemachineMixingCamera.op_Equality
	// Cinemachine.CinemachineMixingCamera.op_Implicit
	// Cinemachine.CinemachineMixingCamera.op_Inequality
	// Cinemachine.CinemachineOrbitalTransposer.op_Equality
	// Cinemachine.CinemachineOrbitalTransposer.op_Implicit
	// Cinemachine.CinemachineOrbitalTransposer.op_Inequality
	// Cinemachine.CinemachinePath.op_Equality
	// Cinemachine.CinemachinePath.op_Implicit
	// Cinemachine.CinemachinePath.op_Inequality
	// Cinemachine.CinemachinePipeline.op_Equality
	// Cinemachine.CinemachinePipeline.op_Implicit
	// Cinemachine.CinemachinePipeline.op_Inequality
	// Cinemachine.CinemachinePixelPerfect.op_Equality
	// Cinemachine.CinemachinePixelPerfect.op_Implicit
	// Cinemachine.CinemachinePixelPerfect.op_Inequality
	// Cinemachine.CinemachinePOV.op_Equality
	// Cinemachine.CinemachinePOV.op_Implicit
	// Cinemachine.CinemachinePOV.op_Inequality
	// Cinemachine.CinemachineSameAsFollowTarget.op_Equality
	// Cinemachine.CinemachineSameAsFollowTarget.op_Implicit
	// Cinemachine.CinemachineSameAsFollowTarget.op_Inequality
	// Cinemachine.CinemachineSmoothPath.op_Equality
	// Cinemachine.CinemachineSmoothPath.op_Implicit
	// Cinemachine.CinemachineSmoothPath.op_Inequality
	// Cinemachine.CinemachineStateDrivenCamera.op_Equality
	// Cinemachine.CinemachineStateDrivenCamera.op_Implicit
	// Cinemachine.CinemachineStateDrivenCamera.op_Inequality
	// Cinemachine.CinemachineStoryboard.op_Equality
	// Cinemachine.CinemachineStoryboard.op_Implicit
	// Cinemachine.CinemachineStoryboard.op_Inequality
	// Cinemachine.CinemachineTargetGroup.op_Equality
	// Cinemachine.CinemachineTargetGroup.op_Implicit
	// Cinemachine.CinemachineTargetGroup.op_Inequality
	// Cinemachine.CinemachineTrackedDolly.op_Equality
	// Cinemachine.CinemachineTrackedDolly.op_Implicit
	// Cinemachine.CinemachineTrackedDolly.op_Inequality
	// Cinemachine.CinemachineTransposer.op_Equality
	// Cinemachine.CinemachineTransposer.op_Implicit
	// Cinemachine.CinemachineTransposer.op_Inequality
	// Cinemachine.CinemachineTriggerAction.op_Equality
	// Cinemachine.CinemachineTriggerAction.op_Implicit
	// Cinemachine.CinemachineTriggerAction.op_Inequality
	// Cinemachine.CinemachineVirtualCamera..ctor
	// Cinemachine.CinemachineVirtualCamera.ForceCameraPosition
	// Cinemachine.CinemachineVirtualCamera.op_Equality
	// Cinemachine.CinemachineVirtualCamera.op_Implicit
	// Cinemachine.CinemachineVirtualCamera.op_Inequality
	// Cinemachine.GroupWeightManipulator.op_Equality
	// Cinemachine.GroupWeightManipulator.op_Implicit
	// Cinemachine.GroupWeightManipulator.op_Inequality
	// Cinemachine.NoiseSettings.op_Equality
	// Cinemachine.NoiseSettings.op_Implicit
	// Cinemachine.NoiseSettings.op_Inequality
	// Cinemachine.PostFX.CinemachinePostProcessing.op_Equality
	// Cinemachine.PostFX.CinemachinePostProcessing.op_Implicit
	// Cinemachine.PostFX.CinemachinePostProcessing.op_Inequality
	// Cinemachine.PostFX.CinemachineVolumeSettings.op_Equality
	// Cinemachine.PostFX.CinemachineVolumeSettings.op_Implicit
	// Cinemachine.PostFX.CinemachineVolumeSettings.op_Inequality
	// CinemachineCameraOffset.op_Equality
	// CinemachineCameraOffset.op_Implicit
	// CinemachineCameraOffset.op_Inequality
	// CinemachineRecomposer.op_Equality
	// CinemachineRecomposer.op_Implicit
	// CinemachineRecomposer.op_Inequality
	// CinemachineShot.op_Equality
	// CinemachineShot.op_Implicit
	// CinemachineShot.op_Inequality
	// CinemachineTouchInputMapper.op_Equality
	// CinemachineTouchInputMapper.op_Implicit
	// CinemachineTouchInputMapper.op_Inequality
	// CinemachineTrack.op_Equality
	// CinemachineTrack.op_Implicit
	// CinemachineTrack.op_Inequality
	// CountTimer.op_Equality
	// CountTimer.op_Implicit
	// CountTimer.op_Inequality
	// CustomDeviceUsages.op_Equality
	// CustomDeviceUsages.op_Implicit
	// CustomDeviceUsages.op_Inequality
	// DayAndNightControl.op_Equality
	// DayAndNightControl.op_Implicit
	// DayAndNightControl.op_Inequality
	// Demo.op_Equality
	// Demo.op_Implicit
	// Demo.op_Inequality
	// Doublsb.Dialog.Character.op_Equality
	// Doublsb.Dialog.Character.op_Implicit
	// Doublsb.Dialog.Character.op_Inequality
	// Doublsb.Dialog.DialogManager.op_Equality
	// Doublsb.Dialog.DialogManager.op_Implicit
	// Doublsb.Dialog.DialogManager.op_Inequality
	// DynamicJoystick.op_Equality
	// DynamicJoystick.op_Implicit
	// DynamicJoystick.op_Inequality
	// EventSystemChecker.op_Equality
	// EventSystemChecker.op_Implicit
	// EventSystemChecker.op_Inequality
	// ExamplePlayerController.op_Equality
	// ExamplePlayerController.op_Implicit
	// ExamplePlayerController.op_Inequality
	// ExampleSceneFree.op_Equality
	// ExampleSceneFree.op_Implicit
	// ExampleSceneFree.op_Inequality
	// ExtendedFlycam.op_Equality
	// ExtendedFlycam.op_Implicit
	// ExtendedFlycam.op_Inequality
	// FillRound.op_Equality
	// FillRound.op_Implicit
	// FillRound.op_Inequality
	// FixedJoystick.op_Equality
	// FixedJoystick.op_Implicit
	// FixedJoystick.op_Inequality
	// float.op_Equality
	// float.op_GreaterThan
	// float.op_GreaterThanOrEqual
	// float.op_Inequality
	// float.op_LessThan
	// float.op_LessThanOrEqual
	// float.ToString
	// FloatingJoystick.op_Equality
	// FloatingJoystick.op_Implicit
	// FloatingJoystick.op_Inequality
	// ForcedReset.op_Equality
	// ForcedReset.op_Implicit
	// ForcedReset.op_Inequality
	// ImgsFillDynamic.op_Equality
	// ImgsFillDynamic.op_Implicit
	// ImgsFillDynamic.op_Inequality
	// Indicator.op_Equality
	// Indicator.op_Implicit
	// Indicator.op_Inequality
	// IntersititialAd.op_Equality
	// IntersititialAd.op_Implicit
	// IntersititialAd.op_Inequality
	// int.ToString
	// intersial.op_Equality
	// intersial.op_Implicit
	// intersial.op_Inequality
	// Joystick.op_Equality
	// Joystick.op_Implicit
	// Joystick.op_Inequality
	// JoystickFree.op_Equality
	// JoystickFree.op_Implicit
	// JoystickFree.op_Inequality
	// JoystickPlayerExample.op_Equality
	// JoystickPlayerExample.op_Implicit
	// JoystickPlayerExample.op_Inequality
	// JoystickSetterExample.op_Equality
	// JoystickSetterExample.op_Implicit
	// JoystickSetterExample.op_Inequality
	// Lean.Common.Editor.LeanDestroy_Editor.op_Equality
	// Lean.Common.Editor.LeanDestroy_Editor.op_Implicit
	// Lean.Common.Editor.LeanDestroy_Editor.op_Inequality
	// Lean.Common.Editor.LeanFormatString_Editor.op_Equality
	// Lean.Common.Editor.LeanFormatString_Editor.op_Implicit
	// Lean.Common.Editor.LeanFormatString_Editor.op_Inequality
	// Lean.Common.Editor.LeanGuide_Editor.op_Equality
	// Lean.Common.Editor.LeanGuide_Editor.op_Implicit
	// Lean.Common.Editor.LeanGuide_Editor.op_Inequality
	// Lean.Common.Editor.LeanPlane_Editor.op_Equality
	// Lean.Common.Editor.LeanPlane_Editor.op_Implicit
	// Lean.Common.Editor.LeanPlane_Editor.op_Inequality
	// Lean.Common.Editor.LeanRoll_Editor.op_Equality
	// Lean.Common.Editor.LeanRoll_Editor.op_Implicit
	// Lean.Common.Editor.LeanRoll_Editor.op_Inequality
	// Lean.Common.Editor.LeanSelect_Editor.op_Equality
	// Lean.Common.Editor.LeanSelect_Editor.op_Implicit
	// Lean.Common.Editor.LeanSelect_Editor.op_Inequality
	// Lean.Common.Editor.LeanSelectable_Editor.op_Equality
	// Lean.Common.Editor.LeanSelectable_Editor.op_Implicit
	// Lean.Common.Editor.LeanSelectable_Editor.op_Inequality
	// Lean.Common.Editor.LeanSelectableGraphicColor_Editor.op_Equality
	// Lean.Common.Editor.LeanSelectableGraphicColor_Editor.op_Implicit
	// Lean.Common.Editor.LeanSelectableGraphicColor_Editor.op_Inequality
	// Lean.Common.Editor.LeanSelectableRendererColor_Editor.op_Equality
	// Lean.Common.Editor.LeanSelectableRendererColor_Editor.op_Implicit
	// Lean.Common.Editor.LeanSelectableRendererColor_Editor.op_Inequality
	// Lean.Common.Editor.LeanSelectableSpriteRendererColor_Editor.op_Equality
	// Lean.Common.Editor.LeanSelectableSpriteRendererColor_Editor.op_Implicit
	// Lean.Common.Editor.LeanSelectableSpriteRendererColor_Editor.op_Inequality
	// Lean.Common.Editor.LeanSpawn_Editor.op_Equality
	// Lean.Common.Editor.LeanSpawn_Editor.op_Implicit
	// Lean.Common.Editor.LeanSpawn_Editor.op_Inequality
	// Lean.Common.Examples.Editor.LeanDemo_Editor.op_Equality
	// Lean.Common.Examples.Editor.LeanDemo_Editor.op_Implicit
	// Lean.Common.Examples.Editor.LeanDemo_Editor.op_Inequality
	// Lean.Common.Examples.Editor.LeanLinkTo_Editor.op_Equality
	// Lean.Common.Examples.Editor.LeanLinkTo_Editor.op_Implicit
	// Lean.Common.Examples.Editor.LeanLinkTo_Editor.op_Inequality
	// Lean.Common.Examples.LeanDemo.op_Equality
	// Lean.Common.Examples.LeanDemo.op_Implicit
	// Lean.Common.Examples.LeanDemo.op_Inequality
	// Lean.Common.Examples.LeanLinkTo.op_Equality
	// Lean.Common.Examples.LeanLinkTo.op_Implicit
	// Lean.Common.Examples.LeanLinkTo.op_Inequality
	// Lean.Common.LeanDestroy.op_Equality
	// Lean.Common.LeanDestroy.op_Implicit
	// Lean.Common.LeanDestroy.op_Inequality
	// Lean.Common.LeanFormatString.op_Equality
	// Lean.Common.LeanFormatString.op_Implicit
	// Lean.Common.LeanFormatString.op_Inequality
	// Lean.Common.LeanGuide.op_Equality
	// Lean.Common.LeanGuide.op_Implicit
	// Lean.Common.LeanGuide.op_Inequality
	// Lean.Common.LeanPath.op_Equality
	// Lean.Common.LeanPath.op_Implicit
	// Lean.Common.LeanPath.op_Inequality
	// Lean.Common.LeanPlane.op_Equality
	// Lean.Common.LeanPlane.op_Implicit
	// Lean.Common.LeanPlane.op_Inequality
	// Lean.Common.LeanRoll.op_Equality
	// Lean.Common.LeanRoll.op_Implicit
	// Lean.Common.LeanRoll.op_Inequality
	// Lean.Common.LeanSelect.op_Equality
	// Lean.Common.LeanSelect.op_Implicit
	// Lean.Common.LeanSelect.op_Inequality
	// Lean.Common.LeanSelectable.op_Equality
	// Lean.Common.LeanSelectable.op_Implicit
	// Lean.Common.LeanSelectable.op_Inequality
	// Lean.Common.LeanSelectableGraphicColor.op_Equality
	// Lean.Common.LeanSelectableGraphicColor.op_Implicit
	// Lean.Common.LeanSelectableGraphicColor.op_Inequality
	// Lean.Common.LeanSelectableRendererColor.op_Equality
	// Lean.Common.LeanSelectableRendererColor.op_Implicit
	// Lean.Common.LeanSelectableRendererColor.op_Inequality
	// Lean.Common.LeanSelectableSpriteRendererColor.op_Equality
	// Lean.Common.LeanSelectableSpriteRendererColor.op_Implicit
	// Lean.Common.LeanSelectableSpriteRendererColor.op_Inequality
	// Lean.Common.LeanSpawn.op_Equality
	// Lean.Common.LeanSpawn.op_Implicit
	// Lean.Common.LeanSpawn.op_Inequality
	// Lean.Touch.Editor.LeanDragCamera_Editor.op_Equality
	// Lean.Touch.Editor.LeanDragCamera_Editor.op_Implicit
	// Lean.Touch.Editor.LeanDragCamera_Editor.op_Inequality
	// Lean.Touch.Editor.LeanDragTrail_Editor.op_Equality
	// Lean.Touch.Editor.LeanDragTrail_Editor.op_Implicit
	// Lean.Touch.Editor.LeanDragTrail_Editor.op_Inequality
	// Lean.Touch.Editor.LeanDragTranslate_Editor.op_Equality
	// Lean.Touch.Editor.LeanDragTranslate_Editor.op_Implicit
	// Lean.Touch.Editor.LeanDragTranslate_Editor.op_Inequality
	// Lean.Touch.Editor.LeanFingerDown_Editor.op_Equality
	// Lean.Touch.Editor.LeanFingerDown_Editor.op_Implicit
	// Lean.Touch.Editor.LeanFingerDown_Editor.op_Inequality
	// Lean.Touch.Editor.LeanFingerOld_Editor.op_Equality
	// Lean.Touch.Editor.LeanFingerOld_Editor.op_Implicit
	// Lean.Touch.Editor.LeanFingerOld_Editor.op_Inequality
	// Lean.Touch.Editor.LeanFingerSwipe_Editor.op_Equality
	// Lean.Touch.Editor.LeanFingerSwipe_Editor.op_Implicit
	// Lean.Touch.Editor.LeanFingerSwipe_Editor.op_Inequality
	// Lean.Touch.Editor.LeanFingerTap_Editor.op_Equality
	// Lean.Touch.Editor.LeanFingerTap_Editor.op_Implicit
	// Lean.Touch.Editor.LeanFingerTap_Editor.op_Inequality
	// Lean.Touch.Editor.LeanFingerUp_Editor.op_Equality
	// Lean.Touch.Editor.LeanFingerUp_Editor.op_Implicit
	// Lean.Touch.Editor.LeanFingerUp_Editor.op_Inequality
	// Lean.Touch.Editor.LeanFingerUpdate_Editor.op_Equality
	// Lean.Touch.Editor.LeanFingerUpdate_Editor.op_Implicit
	// Lean.Touch.Editor.LeanFingerUpdate_Editor.op_Inequality
	// Lean.Touch.Editor.LeanPinchScale_Editor.op_Equality
	// Lean.Touch.Editor.LeanPinchScale_Editor.op_Implicit
	// Lean.Touch.Editor.LeanPinchScale_Editor.op_Inequality
	// Lean.Touch.Editor.LeanPulseScale_Editor.op_Equality
	// Lean.Touch.Editor.LeanPulseScale_Editor.op_Implicit
	// Lean.Touch.Editor.LeanPulseScale_Editor.op_Inequality
	// Lean.Touch.Editor.LeanSelectableByFinger_Editor.op_Equality
	// Lean.Touch.Editor.LeanSelectableByFinger_Editor.op_Implicit
	// Lean.Touch.Editor.LeanSelectableByFinger_Editor.op_Inequality
	// Lean.Touch.Editor.LeanSelectByFinger_Editor.op_Equality
	// Lean.Touch.Editor.LeanSelectByFinger_Editor.op_Implicit
	// Lean.Touch.Editor.LeanSelectByFinger_Editor.op_Inequality
	// Lean.Touch.Editor.LeanTouch_Editor.op_Equality
	// Lean.Touch.Editor.LeanTouch_Editor.op_Implicit
	// Lean.Touch.Editor.LeanTouch_Editor.op_Inequality
	// Lean.Touch.Editor.LeanTouchSimulator_Editor.op_Equality
	// Lean.Touch.Editor.LeanTouchSimulator_Editor.op_Implicit
	// Lean.Touch.Editor.LeanTouchSimulator_Editor.op_Inequality
	// Lean.Touch.Editor.LeanTwistRotate_Editor.op_Equality
	// Lean.Touch.Editor.LeanTwistRotate_Editor.op_Implicit
	// Lean.Touch.Editor.LeanTwistRotate_Editor.op_Inequality
	// Lean.Touch.Editor.LeanTwistRotateAxis_Editor.op_Equality
	// Lean.Touch.Editor.LeanTwistRotateAxis_Editor.op_Implicit
	// Lean.Touch.Editor.LeanTwistRotateAxis_Editor.op_Inequality
	// Lean.Touch.LeanDragCamera.op_Equality
	// Lean.Touch.LeanDragCamera.op_Implicit
	// Lean.Touch.LeanDragCamera.op_Inequality
	// Lean.Touch.LeanDragTrail.op_Equality
	// Lean.Touch.LeanDragTrail.op_Implicit
	// Lean.Touch.LeanDragTrail.op_Inequality
	// Lean.Touch.LeanDragTranslate.op_Equality
	// Lean.Touch.LeanDragTranslate.op_Implicit
	// Lean.Touch.LeanDragTranslate.op_Inequality
	// Lean.Touch.LeanFingerDown.op_Equality
	// Lean.Touch.LeanFingerDown.op_Implicit
	// Lean.Touch.LeanFingerDown.op_Inequality
	// Lean.Touch.LeanFingerOld.op_Equality
	// Lean.Touch.LeanFingerOld.op_Implicit
	// Lean.Touch.LeanFingerOld.op_Inequality
	// Lean.Touch.LeanFingerSwipe.op_Equality
	// Lean.Touch.LeanFingerSwipe.op_Implicit
	// Lean.Touch.LeanFingerSwipe.op_Inequality
	// Lean.Touch.LeanFingerTap.op_Equality
	// Lean.Touch.LeanFingerTap.op_Implicit
	// Lean.Touch.LeanFingerTap.op_Inequality
	// Lean.Touch.LeanFingerUp.op_Equality
	// Lean.Touch.LeanFingerUp.op_Implicit
	// Lean.Touch.LeanFingerUp.op_Inequality
	// Lean.Touch.LeanFingerUpdate.op_Equality
	// Lean.Touch.LeanFingerUpdate.op_Implicit
	// Lean.Touch.LeanFingerUpdate.op_Inequality
	// Lean.Touch.LeanPinchScale.op_Equality
	// Lean.Touch.LeanPinchScale.op_Implicit
	// Lean.Touch.LeanPinchScale.op_Inequality
	// Lean.Touch.LeanPulseScale.op_Equality
	// Lean.Touch.LeanPulseScale.op_Implicit
	// Lean.Touch.LeanPulseScale.op_Inequality
	// Lean.Touch.LeanSelectableByFinger.op_Equality
	// Lean.Touch.LeanSelectableByFinger.op_Implicit
	// Lean.Touch.LeanSelectableByFinger.op_Inequality
	// Lean.Touch.LeanSelectByFinger.op_Equality
	// Lean.Touch.LeanSelectByFinger.op_Implicit
	// Lean.Touch.LeanSelectByFinger.op_Inequality
	// Lean.Touch.LeanTouch.op_Equality
	// Lean.Touch.LeanTouch.op_Implicit
	// Lean.Touch.LeanTouch.op_Inequality
	// Lean.Touch.LeanTouchEvents.op_Equality
	// Lean.Touch.LeanTouchEvents.op_Implicit
	// Lean.Touch.LeanTouchEvents.op_Inequality
	// Lean.Touch.LeanTouchSimulator.op_Equality
	// Lean.Touch.LeanTouchSimulator.op_Implicit
	// Lean.Touch.LeanTouchSimulator.op_Inequality
	// Lean.Touch.LeanTwistRotate.op_Equality
	// Lean.Touch.LeanTwistRotate.op_Implicit
	// Lean.Touch.LeanTwistRotate.op_Inequality
	// Lean.Touch.LeanTwistRotateAxis.op_Equality
	// Lean.Touch.LeanTwistRotateAxis.op_Implicit
	// Lean.Touch.LeanTwistRotateAxis.op_Inequality
	// LevelReset.op_Equality
	// LevelReset.op_Implicit
	// LevelReset.op_Inequality
	// Ludiq.AotList..ctor
	// Ludiq.AotList.Clear
	// MenuSceneLoader.op_Equality
	// MenuSceneLoader.op_Implicit
	// MenuSceneLoader.op_Inequality
	// MeshCombiner.op_Equality
	// MeshCombiner.op_Implicit
	// MeshCombiner.op_Inequality
	// mobile.op_Equality
	// mobile.op_Implicit
	// mobile.op_Inequality
	// MSButtonFree.op_Equality
	// MSButtonFree.op_Implicit
	// MSButtonFree.op_Inequality
	// MSFPSControllerFree.op_Equality
	// MSFPSControllerFree.op_Implicit
	// MSFPSControllerFree.op_Inequality
	// MSOpenURL.op_Equality
	// MSOpenURL.op_Implicit
	// MSOpenURL.op_Inequality
	// MSSceneControllerFree.op_Equality
	// MSSceneControllerFree.op_Implicit
	// MSSceneControllerFree.op_Inequality
	// MSVehicleControllerFree.op_Equality
	// MSVehicleControllerFree.op_Implicit
	// MSVehicleControllerFree.op_Inequality
	// MulayimStandardT.op_Equality
	// MulayimStandardT.op_Implicit
	// MulayimStandardT.op_Inequality
	// navmeshsurface.op_Equality
	// navmeshsurface.op_Implicit
	// navmeshsurface.op_Inequality
	// NewAd.op_Equality
	// NewAd.op_Implicit
	// NewAd.op_Inequality
	// NewAd.ShowInterstitial
	// OffScreenIndicator.op_Equality
	// OffScreenIndicator.op_Implicit
	// OffScreenIndicator.op_Inequality
	// PathCreation.Examples.GeneratePathExample.op_Equality
	// PathCreation.Examples.GeneratePathExample.op_Implicit
	// PathCreation.Examples.GeneratePathExample.op_Inequality
	// PathCreation.Examples.PathFollower.op_Equality
	// PathCreation.Examples.PathFollower.op_Implicit
	// PathCreation.Examples.PathFollower.op_Inequality
	// PathCreation.Examples.PathPlacer.op_Equality
	// PathCreation.Examples.PathPlacer.op_Implicit
	// PathCreation.Examples.PathPlacer.op_Inequality
	// PathCreation.Examples.PathSpawner.op_Equality
	// PathCreation.Examples.PathSpawner.op_Implicit
	// PathCreation.Examples.PathSpawner.op_Inequality
	// PathCreation.Examples.RoadMeshCreator.op_Equality
	// PathCreation.Examples.RoadMeshCreator.op_Implicit
	// PathCreation.Examples.RoadMeshCreator.op_Inequality
	// PauseMenu.op_Equality
	// PauseMenu.op_Implicit
	// PauseMenu.op_Inequality
	// PreviewGenerator.PostProcessMergeComponent.op_Equality
	// PreviewGenerator.PostProcessMergeComponent.op_Implicit
	// PreviewGenerator.PostProcessMergeComponent.op_Inequality
	// PreviewGeneratorComponent.op_Equality
	// PreviewGeneratorComponent.op_Implicit
	// PreviewGeneratorComponent.op_Inequality
	// ProgressBar.op_Equality
	// ProgressBar.op_Implicit
	// ProgressBar.op_Inequality
	// ProgressBarCircle.op_Equality
	// ProgressBarCircle.op_Implicit
	// ProgressBarCircle.op_Inequality
	// PromotionalMSVS.op_Equality
	// PromotionalMSVS.op_Implicit
	// PromotionalMSVS.op_Inequality
	// Readme.op_Equality
	// Readme.op_Implicit
	// Readme.op_Inequality
	// SaykoMove.op_Equality
	// SaykoMove.op_Implicit
	// SaykoMove.op_Inequality
	// SceneAndURLLoader.op_Equality
	// SceneAndURLLoader.op_Implicit
	// SceneAndURLLoader.op_Inequality
	// scri.op_Equality
	// scri.op_Implicit
	// scri.op_Inequality
	// SimpleInput.GetAxis
	// SimpleInput.GetAxisRaw
	// SimpleInput.GetAxisSensitivity
	// SimpleInput.op_Equality
	// SimpleInput.op_Implicit
	// SimpleInput.op_Inequality
	// SimpleInputNamespace.AxisInputKeyboard.op_Equality
	// SimpleInputNamespace.AxisInputKeyboard.op_Implicit
	// SimpleInputNamespace.AxisInputKeyboard.op_Inequality
	// SimpleInputNamespace.AxisInputMouse.op_Equality
	// SimpleInputNamespace.AxisInputMouse.op_Implicit
	// SimpleInputNamespace.AxisInputMouse.op_Inequality
	// SimpleInputNamespace.AxisInputMoveGesture.op_Equality
	// SimpleInputNamespace.AxisInputMoveGesture.op_Implicit
	// SimpleInputNamespace.AxisInputMoveGesture.op_Inequality
	// SimpleInputNamespace.AxisInputPinchGesture.op_Equality
	// SimpleInputNamespace.AxisInputPinchGesture.op_Implicit
	// SimpleInputNamespace.AxisInputPinchGesture.op_Inequality
	// SimpleInputNamespace.AxisInputRotateGesture.op_Equality
	// SimpleInputNamespace.AxisInputRotateGesture.op_Implicit
	// SimpleInputNamespace.AxisInputRotateGesture.op_Inequality
	// SimpleInputNamespace.AxisInputSwipeGesture.op_Equality
	// SimpleInputNamespace.AxisInputSwipeGesture.op_Implicit
	// SimpleInputNamespace.AxisInputSwipeGesture.op_Inequality
	// SimpleInputNamespace.AxisInputUI.op_Equality
	// SimpleInputNamespace.AxisInputUI.op_Implicit
	// SimpleInputNamespace.AxisInputUI.op_Inequality
	// SimpleInputNamespace.AxisInputUIArrows.op_Equality
	// SimpleInputNamespace.AxisInputUIArrows.op_Implicit
	// SimpleInputNamespace.AxisInputUIArrows.op_Inequality
	// SimpleInputNamespace.ButtonInputKeyboard.op_Equality
	// SimpleInputNamespace.ButtonInputKeyboard.op_Implicit
	// SimpleInputNamespace.ButtonInputKeyboard.op_Inequality
	// SimpleInputNamespace.ButtonInputSwipeGesture.op_Equality
	// SimpleInputNamespace.ButtonInputSwipeGesture.op_Implicit
	// SimpleInputNamespace.ButtonInputSwipeGesture.op_Inequality
	// SimpleInputNamespace.ButtonInputUI.op_Equality
	// SimpleInputNamespace.ButtonInputUI.op_Implicit
	// SimpleInputNamespace.ButtonInputUI.op_Inequality
	// SimpleInputNamespace.Dpad.op_Equality
	// SimpleInputNamespace.Dpad.op_Implicit
	// SimpleInputNamespace.Dpad.op_Inequality
	// SimpleInputNamespace.Joystick.op_Equality
	// SimpleInputNamespace.Joystick.op_Implicit
	// SimpleInputNamespace.Joystick.op_Inequality
	// SimpleInputNamespace.KeyInputKeyboard.op_Equality
	// SimpleInputNamespace.KeyInputKeyboard.op_Implicit
	// SimpleInputNamespace.KeyInputKeyboard.op_Inequality
	// SimpleInputNamespace.KeyInputSwipeGesture.op_Equality
	// SimpleInputNamespace.KeyInputSwipeGesture.op_Implicit
	// SimpleInputNamespace.KeyInputSwipeGesture.op_Inequality
	// SimpleInputNamespace.KeyInputUI.op_Equality
	// SimpleInputNamespace.KeyInputUI.op_Implicit
	// SimpleInputNamespace.KeyInputUI.op_Inequality
	// SimpleInputNamespace.MouseButtonInputKeyboard.op_Equality
	// SimpleInputNamespace.MouseButtonInputKeyboard.op_Implicit
	// SimpleInputNamespace.MouseButtonInputKeyboard.op_Inequality
	// SimpleInputNamespace.MouseButtonInputSwipeGesture.op_Equality
	// SimpleInputNamespace.MouseButtonInputSwipeGesture.op_Implicit
	// SimpleInputNamespace.MouseButtonInputSwipeGesture.op_Inequality
	// SimpleInputNamespace.MouseButtonInputUI.op_Equality
	// SimpleInputNamespace.MouseButtonInputUI.op_Implicit
	// SimpleInputNamespace.MouseButtonInputUI.op_Inequality
	// SimpleInputNamespace.NonDrawingGraphic.op_Equality
	// SimpleInputNamespace.NonDrawingGraphic.op_Implicit
	// SimpleInputNamespace.NonDrawingGraphic.op_Inequality
	// SimpleInputNamespace.SimpleInputDragListener.op_Equality
	// SimpleInputNamespace.SimpleInputDragListener.op_Implicit
	// SimpleInputNamespace.SimpleInputDragListener.op_Inequality
	// SimpleInputNamespace.SimpleInputMultiDragListener.op_Equality
	// SimpleInputNamespace.SimpleInputMultiDragListener.op_Implicit
	// SimpleInputNamespace.SimpleInputMultiDragListener.op_Inequality
	// SimpleInputNamespace.SteeringWheel.op_Equality
	// SimpleInputNamespace.SteeringWheel.op_Implicit
	// SimpleInputNamespace.SteeringWheel.op_Inequality
	// SimpleInputNamespace.Touchpad.op_Equality
	// SimpleInputNamespace.Touchpad.op_Implicit
	// SimpleInputNamespace.Touchpad.op_Inequality
	// SimpleInputNamespace.UnityInputProvider.op_Equality
	// SimpleInputNamespace.UnityInputProvider.op_Implicit
	// SimpleInputNamespace.UnityInputProvider.op_Inequality
	// SircleCar.op_Equality
	// SircleCar.op_Implicit
	// SircleCar.op_Inequality
	// SpikeTrapDemo.op_Equality
	// SpikeTrapDemo.op_Implicit
	// SpikeTrapDemo.op_Inequality
	// SpriteRenderTexture.op_Equality
	// SpriteRenderTexture.op_Implicit
	// SpriteRenderTexture.op_Inequality
	// string.Concat
	// string.Equals
	// string.op_Equality
	// string.op_Inequality
	// System.Guid.NewGuid
	// System.Guid.op_Equality
	// System.Guid.op_Inequality
	// System.Guid.ToString
	// Target..ctor
	// Target.enabled
	// Target.op_Equality
	// Target.op_Implicit
	// Target.op_Inequality
	// TekneHareket.op_Equality
	// TekneHareket.op_Implicit
	// TekneHareket.op_Inequality
	// TestMessage.op_Equality
	// TestMessage.op_Implicit
	// TestMessage.op_Inequality
	// TestMessage_Selection.op_Equality
	// TestMessage_Selection.op_Implicit
	// TestMessage_Selection.op_Inequality
	// TestScript.op_Equality
	// TestScript.op_Implicit
	// TestScript.op_Inequality
	// TMPro.TextContainer.op_Equality
	// TMPro.TextContainer.op_Implicit
	// TMPro.TextContainer.op_Inequality
	// TMPro.TextMeshPro.op_Equality
	// TMPro.TextMeshPro.op_Implicit
	// TMPro.TextMeshPro.op_Inequality
	// TMPro.TextMeshProUGUI.op_Equality
	// TMPro.TextMeshProUGUI.op_Implicit
	// TMPro.TextMeshProUGUI.op_Inequality
	// TMPro.TMP_ColorGradient.op_Equality
	// TMPro.TMP_ColorGradient.op_Implicit
	// TMPro.TMP_ColorGradient.op_Inequality
	// TMPro.TMP_Dropdown.op_Equality
	// TMPro.TMP_Dropdown.op_Implicit
	// TMPro.TMP_Dropdown.op_Inequality
	// TMPro.TMP_FontAsset.op_Equality
	// TMPro.TMP_FontAsset.op_Implicit
	// TMPro.TMP_FontAsset.op_Inequality
	// TMPro.TMP_InputField.op_Equality
	// TMPro.TMP_InputField.op_Implicit
	// TMPro.TMP_InputField.op_Inequality
	// TMPro.TMP_PackageResourceImporterWindow.op_Equality
	// TMPro.TMP_PackageResourceImporterWindow.op_Implicit
	// TMPro.TMP_PackageResourceImporterWindow.op_Inequality
	// TMPro.TMP_ScrollbarEventHandler.op_Equality
	// TMPro.TMP_ScrollbarEventHandler.op_Implicit
	// TMPro.TMP_ScrollbarEventHandler.op_Inequality
	// TMPro.TMP_SelectionCaret.op_Equality
	// TMPro.TMP_SelectionCaret.op_Implicit
	// TMPro.TMP_SelectionCaret.op_Inequality
	// TMPro.TMP_Settings.op_Equality
	// TMPro.TMP_Settings.op_Implicit
	// TMPro.TMP_Settings.op_Inequality
	// TMPro.TMP_SpriteAnimator.op_Equality
	// TMPro.TMP_SpriteAnimator.op_Implicit
	// TMPro.TMP_SpriteAnimator.op_Inequality
	// TMPro.TMP_SpriteAsset.op_Equality
	// TMPro.TMP_SpriteAsset.op_Implicit
	// TMPro.TMP_SpriteAsset.op_Inequality
	// TMPro.TMP_StyleSheet.op_Equality
	// TMPro.TMP_StyleSheet.op_Implicit
	// TMPro.TMP_StyleSheet.op_Inequality
	// TMPro.TMP_SubMesh.op_Equality
	// TMPro.TMP_SubMesh.op_Implicit
	// TMPro.TMP_SubMesh.op_Inequality
	// TMPro.TMP_SubMeshUI.op_Equality
	// TMPro.TMP_SubMeshUI.op_Implicit
	// TMPro.TMP_SubMeshUI.op_Inequality
	// TrapDoorDemo.op_Equality
	// TrapDoorDemo.op_Implicit
	// TrapDoorDemo.op_Inequality
	// UIParticleSystem.op_Equality
	// UIParticleSystem.op_Implicit
	// UIParticleSystem.op_Inequality
	// UnityEngine.Advertisements.Platform.Editor.BannerPlaceholder.op_Equality
	// UnityEngine.Advertisements.Platform.Editor.BannerPlaceholder.op_Implicit
	// UnityEngine.Advertisements.Platform.Editor.BannerPlaceholder.op_Inequality
	// UnityEngine.AI.NavMesh.Raycast
	// UnityEngine.AI.NavMesh.SamplePosition
	// UnityEngine.AI.NavMeshAgent.areaMask
	// UnityEngine.AI.NavMeshAgent.enabled
	// UnityEngine.AI.NavMeshAgent.isStopped
	// UnityEngine.AI.NavMeshAgent.obstacleAvoidanceType
	// UnityEngine.AI.NavMeshAgent.op_Equality
	// UnityEngine.AI.NavMeshAgent.op_Implicit
	// UnityEngine.AI.NavMeshAgent.op_Inequality
	// UnityEngine.AI.NavMeshAgent.pathPending
	// UnityEngine.AI.NavMeshAgent.remainingDistance
	// UnityEngine.AI.NavMeshAgent.SetDestination
	// UnityEngine.AI.NavMeshAgent.SetPath
	// UnityEngine.AI.NavMeshAgent.speed
	// UnityEngine.AI.NavMeshAgent.steeringTarget
	// UnityEngine.AI.NavMeshAgent.updateRotation
	// UnityEngine.AI.NavMeshAgent.velocity
	// UnityEngine.AI.NavMeshAgent.Warp
	// UnityEngine.AI.NavMeshData.op_Equality
	// UnityEngine.AI.NavMeshData.op_Implicit
	// UnityEngine.AI.NavMeshData.op_Inequality
	// UnityEngine.AI.NavMeshHit.position
	// UnityEngine.AI.NavMeshObstacle.op_Equality
	// UnityEngine.AI.NavMeshObstacle.op_Implicit
	// UnityEngine.AI.NavMeshObstacle.op_Inequality
	// UnityEngine.AI.OffMeshLink.op_Equality
	// UnityEngine.AI.OffMeshLink.op_Implicit
	// UnityEngine.AI.OffMeshLink.op_Inequality
	// UnityEngine.AnchoredJoint2D.op_Equality
	// UnityEngine.AnchoredJoint2D.op_Implicit
	// UnityEngine.AnchoredJoint2D.op_Inequality
	// UnityEngine.Animation.op_Equality
	// UnityEngine.Animation.op_Implicit
	// UnityEngine.Animation.op_Inequality
	// UnityEngine.Animation.Play
	// UnityEngine.AnimationClip.op_Equality
	// UnityEngine.AnimationClip.op_Implicit
	// UnityEngine.AnimationClip.op_Inequality
	// UnityEngine.Animations.AimConstraint.op_Equality
	// UnityEngine.Animations.AimConstraint.op_Implicit
	// UnityEngine.Animations.AimConstraint.op_Inequality
	// UnityEngine.Animations.LookAtConstraint.op_Equality
	// UnityEngine.Animations.LookAtConstraint.op_Implicit
	// UnityEngine.Animations.LookAtConstraint.op_Inequality
	// UnityEngine.Animations.ParentConstraint.op_Equality
	// UnityEngine.Animations.ParentConstraint.op_Implicit
	// UnityEngine.Animations.ParentConstraint.op_Inequality
	// UnityEngine.Animations.PositionConstraint.op_Equality
	// UnityEngine.Animations.PositionConstraint.op_Implicit
	// UnityEngine.Animations.PositionConstraint.op_Inequality
	// UnityEngine.Animations.RotationConstraint.op_Equality
	// UnityEngine.Animations.RotationConstraint.op_Implicit
	// UnityEngine.Animations.RotationConstraint.op_Inequality
	// UnityEngine.Animations.ScaleConstraint.op_Equality
	// UnityEngine.Animations.ScaleConstraint.op_Implicit
	// UnityEngine.Animations.ScaleConstraint.op_Inequality
	// UnityEngine.Animator.op_Equality
	// UnityEngine.Animator.op_Implicit
	// UnityEngine.Animator.op_Inequality
	// UnityEngine.Animator.Play
	// UnityEngine.Animator.ResetTrigger
	// UnityEngine.Animator.SetBool
	// UnityEngine.Animator.SetFloat
	// UnityEngine.Animator.SetTrigger
	// UnityEngine.AnimatorOverrideController.op_Equality
	// UnityEngine.AnimatorOverrideController.op_Implicit
	// UnityEngine.AnimatorOverrideController.op_Inequality
	// UnityEngine.Application.Quit
	// UnityEngine.Application.targetFrameRate
	// UnityEngine.AreaEffector2D.op_Equality
	// UnityEngine.AreaEffector2D.op_Implicit
	// UnityEngine.AreaEffector2D.op_Inequality
	// UnityEngine.AssetBundle.op_Equality
	// UnityEngine.AssetBundle.op_Implicit
	// UnityEngine.AssetBundle.op_Inequality
	// UnityEngine.AssetBundleManifest.op_Equality
	// UnityEngine.AssetBundleManifest.op_Implicit
	// UnityEngine.AssetBundleManifest.op_Inequality
	// UnityEngine.Audio.AudioMixer.op_Equality
	// UnityEngine.Audio.AudioMixer.op_Implicit
	// UnityEngine.Audio.AudioMixer.op_Inequality
	// UnityEngine.Audio.AudioMixerGroup.op_Equality
	// UnityEngine.Audio.AudioMixerGroup.op_Implicit
	// UnityEngine.Audio.AudioMixerGroup.op_Inequality
	// UnityEngine.Audio.AudioMixerSnapshot.op_Equality
	// UnityEngine.Audio.AudioMixerSnapshot.op_Implicit
	// UnityEngine.Audio.AudioMixerSnapshot.op_Inequality
	// UnityEngine.AudioBehaviour.op_Equality
	// UnityEngine.AudioBehaviour.op_Implicit
	// UnityEngine.AudioBehaviour.op_Inequality
	// UnityEngine.AudioChorusFilter.op_Equality
	// UnityEngine.AudioChorusFilter.op_Implicit
	// UnityEngine.AudioChorusFilter.op_Inequality
	// UnityEngine.AudioClip.op_Equality
	// UnityEngine.AudioClip.op_Implicit
	// UnityEngine.AudioClip.op_Inequality
	// UnityEngine.AudioDistortionFilter.op_Equality
	// UnityEngine.AudioDistortionFilter.op_Implicit
	// UnityEngine.AudioDistortionFilter.op_Inequality
	// UnityEngine.AudioEchoFilter.op_Equality
	// UnityEngine.AudioEchoFilter.op_Implicit
	// UnityEngine.AudioEchoFilter.op_Inequality
	// UnityEngine.AudioHighPassFilter.op_Equality
	// UnityEngine.AudioHighPassFilter.op_Implicit
	// UnityEngine.AudioHighPassFilter.op_Inequality
	// UnityEngine.AudioListener.op_Equality
	// UnityEngine.AudioListener.op_Implicit
	// UnityEngine.AudioListener.op_Inequality
	// UnityEngine.AudioLowPassFilter.op_Equality
	// UnityEngine.AudioLowPassFilter.op_Implicit
	// UnityEngine.AudioLowPassFilter.op_Inequality
	// UnityEngine.AudioReverbFilter.op_Equality
	// UnityEngine.AudioReverbFilter.op_Implicit
	// UnityEngine.AudioReverbFilter.op_Inequality
	// UnityEngine.AudioReverbZone.op_Equality
	// UnityEngine.AudioReverbZone.op_Implicit
	// UnityEngine.AudioReverbZone.op_Inequality
	// UnityEngine.AudioSource..ctor
	// UnityEngine.AudioSource.op_Equality
	// UnityEngine.AudioSource.op_Implicit
	// UnityEngine.AudioSource.op_Inequality
	// UnityEngine.AudioSource.Pause
	// UnityEngine.AudioSource.pitch
	// UnityEngine.AudioSource.Play
	// UnityEngine.AudioSource.PlayOneShot
	// UnityEngine.AudioSource.PlayOneShot
	// UnityEngine.AudioSource.Stop
	// UnityEngine.Avatar.op_Equality
	// UnityEngine.Avatar.op_Implicit
	// UnityEngine.Avatar.op_Inequality
	// UnityEngine.AvatarMask.op_Equality
	// UnityEngine.AvatarMask.op_Implicit
	// UnityEngine.AvatarMask.op_Inequality
	// UnityEngine.Behaviour.enabled
	// UnityEngine.Behaviour.op_Equality
	// UnityEngine.Behaviour.op_Implicit
	// UnityEngine.Behaviour.op_Inequality
	// UnityEngine.BillboardAsset.op_Equality
	// UnityEngine.BillboardAsset.op_Implicit
	// UnityEngine.BillboardAsset.op_Inequality
	// UnityEngine.BillboardRenderer.op_Equality
	// UnityEngine.BillboardRenderer.op_Implicit
	// UnityEngine.BillboardRenderer.op_Inequality
	// UnityEngine.Bounds.op_Equality
	// UnityEngine.Bounds.op_Inequality
	// UnityEngine.BoxCollider..ctor
	// UnityEngine.BoxCollider.enabled
	// UnityEngine.BoxCollider.isTrigger
	// UnityEngine.BoxCollider.op_Equality
	// UnityEngine.BoxCollider.op_Implicit
	// UnityEngine.BoxCollider.op_Inequality
	// UnityEngine.BoxCollider2D.op_Equality
	// UnityEngine.BoxCollider2D.op_Implicit
	// UnityEngine.BoxCollider2D.op_Inequality
	// UnityEngine.BuoyancyEffector2D.op_Equality
	// UnityEngine.BuoyancyEffector2D.op_Implicit
	// UnityEngine.BuoyancyEffector2D.op_Inequality
	// UnityEngine.Camera..ctor
	// UnityEngine.Camera.fieldOfView
	// UnityEngine.Camera.main
	// UnityEngine.Camera.op_Equality
	// UnityEngine.Camera.op_Implicit
	// UnityEngine.Camera.op_Inequality
	// UnityEngine.Camera.ScreenPointToRay
	// UnityEngine.Camera.ScreenToWorldPoint
	// UnityEngine.Canvas..ctor
	// UnityEngine.Canvas.enabled
	// UnityEngine.Canvas.op_Equality
	// UnityEngine.Canvas.op_Implicit
	// UnityEngine.Canvas.op_Inequality
	// UnityEngine.CanvasGroup..ctor
	// UnityEngine.CanvasGroup.alpha
	// UnityEngine.CanvasGroup.blocksRaycasts
	// UnityEngine.CanvasGroup.interactable
	// UnityEngine.CanvasGroup.op_Equality
	// UnityEngine.CanvasGroup.op_Implicit
	// UnityEngine.CanvasGroup.op_Inequality
	// UnityEngine.CanvasRenderer.op_Equality
	// UnityEngine.CanvasRenderer.op_Implicit
	// UnityEngine.CanvasRenderer.op_Inequality
	// UnityEngine.CapsuleCollider.op_Equality
	// UnityEngine.CapsuleCollider.op_Implicit
	// UnityEngine.CapsuleCollider.op_Inequality
	// UnityEngine.CapsuleCollider2D.op_Equality
	// UnityEngine.CapsuleCollider2D.op_Implicit
	// UnityEngine.CapsuleCollider2D.op_Inequality
	// UnityEngine.CharacterController.enabled
	// UnityEngine.CharacterController.isGrounded
	// UnityEngine.CharacterController.Move
	// UnityEngine.CharacterController.op_Equality
	// UnityEngine.CharacterController.op_Implicit
	// UnityEngine.CharacterController.op_Inequality
	// UnityEngine.CharacterController.velocity
	// UnityEngine.CharacterJoint.op_Equality
	// UnityEngine.CharacterJoint.op_Implicit
	// UnityEngine.CharacterJoint.op_Inequality
	// UnityEngine.CircleCollider2D.op_Equality
	// UnityEngine.CircleCollider2D.op_Implicit
	// UnityEngine.CircleCollider2D.op_Inequality
	// UnityEngine.Cloth.op_Equality
	// UnityEngine.Cloth.op_Implicit
	// UnityEngine.Cloth.op_Inequality
	// UnityEngine.Collider.attachedRigidbody
	// UnityEngine.Collider.bounds
	// UnityEngine.Collider.contactOffset
	// UnityEngine.Collider.enabled
	// UnityEngine.Collider.gameObject
	// UnityEngine.Collider.hideFlags
	// UnityEngine.Collider.isTrigger
	// UnityEngine.Collider.material
	// UnityEngine.Collider.name
	// UnityEngine.Collider.op_Equality
	// UnityEngine.Collider.op_Implicit
	// UnityEngine.Collider.op_Inequality
	// UnityEngine.Collider.sharedMaterial
	// UnityEngine.Collider.tag
	// UnityEngine.Collider.transform
	// UnityEngine.Collider2D.op_Equality
	// UnityEngine.Collider2D.op_Implicit
	// UnityEngine.Collider2D.op_Inequality
	// UnityEngine.Color.op_Addition
	// UnityEngine.Color.op_Division
	// UnityEngine.Color.op_Equality
	// UnityEngine.Color.op_Implicit
	// UnityEngine.Color.op_Implicit
	// UnityEngine.Color.op_Inequality
	// UnityEngine.Color.op_Multiply
	// UnityEngine.Color.op_Multiply
	// UnityEngine.Color.op_Multiply
	// UnityEngine.Color.op_Subtraction
	// UnityEngine.Component.gameObject
	// UnityEngine.Component.GetComponent
	// UnityEngine.Component.op_Equality
	// UnityEngine.Component.op_Implicit
	// UnityEngine.Component.op_Inequality
	// UnityEngine.CompositeCollider2D.op_Equality
	// UnityEngine.CompositeCollider2D.op_Implicit
	// UnityEngine.CompositeCollider2D.op_Inequality
	// UnityEngine.ComputeShader.op_Equality
	// UnityEngine.ComputeShader.op_Implicit
	// UnityEngine.ComputeShader.op_Inequality
	// UnityEngine.ConfigurableJoint.op_Equality
	// UnityEngine.ConfigurableJoint.op_Implicit
	// UnityEngine.ConfigurableJoint.op_Inequality
	// UnityEngine.ConstantForce.op_Equality
	// UnityEngine.ConstantForce.op_Implicit
	// UnityEngine.ConstantForce.op_Inequality
	// UnityEngine.ConstantForce2D.op_Equality
	// UnityEngine.ConstantForce2D.op_Implicit
	// UnityEngine.ConstantForce2D.op_Inequality
	// UnityEngine.Cubemap.op_Equality
	// UnityEngine.Cubemap.op_Implicit
	// UnityEngine.Cubemap.op_Inequality
	// UnityEngine.CubemapArray.op_Equality
	// UnityEngine.CubemapArray.op_Implicit
	// UnityEngine.CubemapArray.op_Inequality
	// UnityEngine.CustomRenderTexture.op_Equality
	// UnityEngine.CustomRenderTexture.op_Implicit
	// UnityEngine.CustomRenderTexture.op_Inequality
	// UnityEngine.Debug.DrawRay
	// UnityEngine.DistanceJoint2D.op_Equality
	// UnityEngine.DistanceJoint2D.op_Implicit
	// UnityEngine.DistanceJoint2D.op_Inequality
	// UnityEngine.EdgeCollider2D.op_Equality
	// UnityEngine.EdgeCollider2D.op_Implicit
	// UnityEngine.EdgeCollider2D.op_Inequality
	// UnityEngine.Effector2D.op_Equality
	// UnityEngine.Effector2D.op_Implicit
	// UnityEngine.Effector2D.op_Inequality
	// UnityEngine.EventSystems.BaseInput.op_Equality
	// UnityEngine.EventSystems.BaseInput.op_Implicit
	// UnityEngine.EventSystems.BaseInput.op_Inequality
	// UnityEngine.EventSystems.EventSystem.op_Equality
	// UnityEngine.EventSystems.EventSystem.op_Implicit
	// UnityEngine.EventSystems.EventSystem.op_Inequality
	// UnityEngine.EventSystems.EventTrigger.op_Equality
	// UnityEngine.EventSystems.EventTrigger.op_Implicit
	// UnityEngine.EventSystems.EventTrigger.op_Inequality
	// UnityEngine.EventSystems.Physics2DRaycaster.op_Equality
	// UnityEngine.EventSystems.Physics2DRaycaster.op_Implicit
	// UnityEngine.EventSystems.Physics2DRaycaster.op_Inequality
	// UnityEngine.EventSystems.PhysicsRaycaster.op_Equality
	// UnityEngine.EventSystems.PhysicsRaycaster.op_Implicit
	// UnityEngine.EventSystems.PhysicsRaycaster.op_Inequality
	// UnityEngine.EventSystems.StandaloneInputModule.op_Equality
	// UnityEngine.EventSystems.StandaloneInputModule.op_Implicit
	// UnityEngine.EventSystems.StandaloneInputModule.op_Inequality
	// UnityEngine.Experimental.Rendering.RayTracingShader.op_Equality
	// UnityEngine.Experimental.Rendering.RayTracingShader.op_Implicit
	// UnityEngine.Experimental.Rendering.RayTracingShader.op_Inequality
	// UnityEngine.FixedJoint.op_Equality
	// UnityEngine.FixedJoint.op_Implicit
	// UnityEngine.FixedJoint.op_Inequality
	// UnityEngine.FixedJoint2D.op_Equality
	// UnityEngine.FixedJoint2D.op_Implicit
	// UnityEngine.FixedJoint2D.op_Inequality
	// UnityEngine.Flare.op_Equality
	// UnityEngine.Flare.op_Implicit
	// UnityEngine.Flare.op_Inequality
	// UnityEngine.FlareLayer.op_Equality
	// UnityEngine.FlareLayer.op_Implicit
	// UnityEngine.FlareLayer.op_Inequality
	// UnityEngine.Font.op_Equality
	// UnityEngine.Font.op_Implicit
	// UnityEngine.Font.op_Inequality
	// UnityEngine.FrictionJoint2D.op_Equality
	// UnityEngine.FrictionJoint2D.op_Implicit
	// UnityEngine.FrictionJoint2D.op_Inequality
	// UnityEngine.GameObject..ctor
	// UnityEngine.GameObject.activeSelf
	// UnityEngine.GameObject.CompareTag
	// UnityEngine.GameObject.Destroy
	// UnityEngine.GameObject.Destroy
	// UnityEngine.GameObject.FindGameObjectWithTag
	// UnityEngine.GameObject.FindWithTag
	// UnityEngine.GameObject.gameObject
	// UnityEngine.GameObject.Instantiate
	// UnityEngine.GameObject.Instantiate
	// UnityEngine.GameObject.layer
	// UnityEngine.GameObject.name
	// UnityEngine.GameObject.op_Equality
	// UnityEngine.GameObject.op_Implicit
	// UnityEngine.GameObject.op_Inequality
	// UnityEngine.GameObject.SetActive
	// UnityEngine.GameObject.tag
	// UnityEngine.GUISkin.op_Equality
	// UnityEngine.GUISkin.op_Implicit
	// UnityEngine.GUISkin.op_Inequality
	// UnityEngine.Gyroscope.enabled
	// UnityEngine.Gyroscope.rotationRateUnbiased
	// UnityEngine.HingeJoint.op_Equality
	// UnityEngine.HingeJoint.op_Implicit
	// UnityEngine.HingeJoint.op_Inequality
	// UnityEngine.HingeJoint2D.op_Equality
	// UnityEngine.HingeJoint2D.op_Implicit
	// UnityEngine.HingeJoint2D.op_Inequality
	// UnityEngine.Input.acceleration
	// UnityEngine.Input.GetTouch
	// UnityEngine.Input.gyro
	// UnityEngine.Input.mousePosition
	// UnityEngine.Input.touchCount
	// UnityEngine.Joint.op_Equality
	// UnityEngine.Joint.op_Implicit
	// UnityEngine.Joint.op_Inequality
	// UnityEngine.Joint2D.op_Equality
	// UnityEngine.Joint2D.op_Implicit
	// UnityEngine.Joint2D.op_Inequality
	// UnityEngine.LayerMask.NameToLayer
	// UnityEngine.LayerMask.op_Implicit
	// UnityEngine.LayerMask.op_Implicit
	// UnityEngine.LensFlare.op_Equality
	// UnityEngine.LensFlare.op_Implicit
	// UnityEngine.LensFlare.op_Inequality
	// UnityEngine.Light.op_Equality
	// UnityEngine.Light.op_Implicit
	// UnityEngine.Light.op_Inequality
	// UnityEngine.LightmapSettings.op_Equality
	// UnityEngine.LightmapSettings.op_Implicit
	// UnityEngine.LightmapSettings.op_Inequality
	// UnityEngine.LightProbeGroup.op_Equality
	// UnityEngine.LightProbeGroup.op_Implicit
	// UnityEngine.LightProbeGroup.op_Inequality
	// UnityEngine.LightProbeProxyVolume.op_Equality
	// UnityEngine.LightProbeProxyVolume.op_Implicit
	// UnityEngine.LightProbeProxyVolume.op_Inequality
	// UnityEngine.LightProbes.op_Equality
	// UnityEngine.LightProbes.op_Implicit
	// UnityEngine.LightProbes.op_Inequality
	// UnityEngine.LineRenderer.op_Equality
	// UnityEngine.LineRenderer.op_Implicit
	// UnityEngine.LineRenderer.op_Inequality
	// UnityEngine.LineRenderer.SetPosition
	// UnityEngine.LODGroup.op_Equality
	// UnityEngine.LODGroup.op_Implicit
	// UnityEngine.LODGroup.op_Inequality
	// UnityEngine.Material.op_Equality
	// UnityEngine.Material.op_Implicit
	// UnityEngine.Material.op_Inequality
	// UnityEngine.Mathf.Clamp
	// UnityEngine.Mathf.Clamp
	// UnityEngine.Mathf.RoundToInt
	// UnityEngine.Matrix4x4.op_Equality
	// UnityEngine.Matrix4x4.op_Inequality
	// UnityEngine.Matrix4x4.op_Multiply
	// UnityEngine.Matrix4x4.op_Multiply
	// UnityEngine.Mesh.op_Equality
	// UnityEngine.Mesh.op_Implicit
	// UnityEngine.Mesh.op_Inequality
	// UnityEngine.MeshCollider..ctor
	// UnityEngine.MeshCollider.convex
	// UnityEngine.MeshCollider.enabled
	// UnityEngine.MeshCollider.isTrigger
	// UnityEngine.MeshCollider.op_Equality
	// UnityEngine.MeshCollider.op_Implicit
	// UnityEngine.MeshCollider.op_Inequality
	// UnityEngine.MeshFilter.op_Equality
	// UnityEngine.MeshFilter.op_Implicit
	// UnityEngine.MeshFilter.op_Inequality
	// UnityEngine.MeshRenderer.op_Equality
	// UnityEngine.MeshRenderer.op_Implicit
	// UnityEngine.MeshRenderer.op_Inequality
	// UnityEngine.MonoBehaviour.op_Equality
	// UnityEngine.MonoBehaviour.op_Implicit
	// UnityEngine.MonoBehaviour.op_Inequality
	// UnityEngine.MonoBehaviour.StopAllCoroutines
	// UnityEngine.Motion.op_Equality
	// UnityEngine.Motion.op_Implicit
	// UnityEngine.Motion.op_Inequality
	// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Equality
	// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Implicit
	// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Inequality
	// UnityEngine.Object..ctor
	// UnityEngine.Object.Destroy
	// UnityEngine.Object.Destroy
	// UnityEngine.Object.Instantiate
	// UnityEngine.Object.Instantiate
	// UnityEngine.Object.op_Equality
	// UnityEngine.Object.op_Implicit
	// UnityEngine.Object.op_Inequality
	// UnityEngine.OcclusionArea.op_Equality
	// UnityEngine.OcclusionArea.op_Implicit
	// UnityEngine.OcclusionArea.op_Inequality
	// UnityEngine.OcclusionPortal.op_Equality
	// UnityEngine.OcclusionPortal.op_Implicit
	// UnityEngine.OcclusionPortal.op_Inequality
	// UnityEngine.ParticleSystem..ctor
	// UnityEngine.ParticleSystem.op_Equality
	// UnityEngine.ParticleSystem.op_Implicit
	// UnityEngine.ParticleSystem.op_Inequality
	// UnityEngine.ParticleSystem.Play
	// UnityEngine.ParticleSystem.Play
	// UnityEngine.ParticleSystem.Stop
	// UnityEngine.ParticleSystem.Stop
	// UnityEngine.ParticleSystemForceField.op_Equality
	// UnityEngine.ParticleSystemForceField.op_Implicit
	// UnityEngine.ParticleSystemForceField.op_Inequality
	// UnityEngine.ParticleSystemRenderer.op_Equality
	// UnityEngine.ParticleSystemRenderer.op_Implicit
	// UnityEngine.ParticleSystemRenderer.op_Inequality
	// UnityEngine.PhysicMaterial.op_Equality
	// UnityEngine.PhysicMaterial.op_Implicit
	// UnityEngine.PhysicMaterial.op_Inequality
	// UnityEngine.Physics.BoxCast
	// UnityEngine.Physics.gravity
	// UnityEngine.Physics.Raycast
	// UnityEngine.Physics.Raycast
	// UnityEngine.Physics.Raycast
	// UnityEngine.Physics.Raycast
	// UnityEngine.Physics.SphereCast
	// UnityEngine.PhysicsMaterial2D.op_Equality
	// UnityEngine.PhysicsMaterial2D.op_Implicit
	// UnityEngine.PhysicsMaterial2D.op_Inequality
	// UnityEngine.PhysicsUpdateBehaviour2D.op_Equality
	// UnityEngine.PhysicsUpdateBehaviour2D.op_Implicit
	// UnityEngine.PhysicsUpdateBehaviour2D.op_Inequality
	// UnityEngine.PlatformEffector2D.op_Equality
	// UnityEngine.PlatformEffector2D.op_Implicit
	// UnityEngine.PlatformEffector2D.op_Inequality
	// UnityEngine.Playables.PlayableDirector.op_Equality
	// UnityEngine.Playables.PlayableDirector.op_Implicit
	// UnityEngine.Playables.PlayableDirector.op_Inequality
	// UnityEngine.PointEffector2D.op_Equality
	// UnityEngine.PointEffector2D.op_Implicit
	// UnityEngine.PointEffector2D.op_Inequality
	// UnityEngine.PolygonCollider2D.op_Equality
	// UnityEngine.PolygonCollider2D.op_Implicit
	// UnityEngine.PolygonCollider2D.op_Inequality
	// UnityEngine.Projector.op_Equality
	// UnityEngine.Projector.op_Implicit
	// UnityEngine.Projector.op_Inequality
	// UnityEngine.QualitySettings.op_Equality
	// UnityEngine.QualitySettings.op_Implicit
	// UnityEngine.QualitySettings.op_Inequality
	// UnityEngine.Quaternion.Euler
	// UnityEngine.Quaternion.Euler
	// UnityEngine.Quaternion.eulerAngles
	// UnityEngine.Quaternion.FromToRotation
	// UnityEngine.Quaternion.LookRotation
	// UnityEngine.Quaternion.op_Equality
	// UnityEngine.Quaternion.op_Inequality
	// UnityEngine.Quaternion.op_Multiply
	// UnityEngine.Quaternion.op_Multiply
	// UnityEngine.Quaternion.Slerp
	// UnityEngine.Random.insideUnitCircle
	// UnityEngine.Random.Range
	// UnityEngine.Random.Range
	// UnityEngine.RaycastHit.barycentricCoordinate
	// UnityEngine.RaycastHit.collider
	// UnityEngine.RaycastHit.distance
	// UnityEngine.RaycastHit.lightmapCoord
	// UnityEngine.RaycastHit.normal
	// UnityEngine.RaycastHit.point
	// UnityEngine.RaycastHit.rigidbody
	// UnityEngine.RaycastHit.textureCoord
	// UnityEngine.RaycastHit.textureCoord2
	// UnityEngine.RaycastHit.transform
	// UnityEngine.RaycastHit.triangleIndex
	// UnityEngine.RaycastHit2D.op_Implicit
	// UnityEngine.Rect.op_Equality
	// UnityEngine.Rect.op_Inequality
	// UnityEngine.RectTransform.op_Equality
	// UnityEngine.RectTransform.op_Implicit
	// UnityEngine.RectTransform.op_Inequality
	// UnityEngine.ReflectionProbe.op_Equality
	// UnityEngine.ReflectionProbe.op_Implicit
	// UnityEngine.ReflectionProbe.op_Inequality
	// UnityEngine.RelativeJoint2D.op_Equality
	// UnityEngine.RelativeJoint2D.op_Implicit
	// UnityEngine.RelativeJoint2D.op_Inequality
	// UnityEngine.Renderer.op_Equality
	// UnityEngine.Renderer.op_Implicit
	// UnityEngine.Renderer.op_Inequality
	// UnityEngine.Rendering.GraphicsSettings.op_Equality
	// UnityEngine.Rendering.GraphicsSettings.op_Implicit
	// UnityEngine.Rendering.GraphicsSettings.op_Inequality
	// UnityEngine.Rendering.SortingGroup.op_Equality
	// UnityEngine.Rendering.SortingGroup.op_Implicit
	// UnityEngine.Rendering.SortingGroup.op_Inequality
	// UnityEngine.RenderSettings.op_Equality
	// UnityEngine.RenderSettings.op_Implicit
	// UnityEngine.RenderSettings.op_Inequality
	// UnityEngine.RenderTexture.op_Equality
	// UnityEngine.RenderTexture.op_Implicit
	// UnityEngine.RenderTexture.op_Inequality
	// UnityEngine.Rigidbody.AddForce
	// UnityEngine.Rigidbody.AddForce
	// UnityEngine.Rigidbody.AddForce
	// UnityEngine.Rigidbody.AddRelativeForce
	// UnityEngine.Rigidbody.AddRelativeForce
	// UnityEngine.Rigidbody.angularVelocity
	// UnityEngine.Rigidbody.centerOfMass
	// UnityEngine.Rigidbody.freezeRotation
	// UnityEngine.Rigidbody.GetRelativePointVelocity
	// UnityEngine.Rigidbody.isKinematic
	// UnityEngine.Rigidbody.mass
	// UnityEngine.Rigidbody.MovePosition
	// UnityEngine.Rigidbody.op_Equality
	// UnityEngine.Rigidbody.op_Implicit
	// UnityEngine.Rigidbody.op_Inequality
	// UnityEngine.Rigidbody.position
	// UnityEngine.Rigidbody.rotation
	// UnityEngine.Rigidbody.useGravity
	// UnityEngine.Rigidbody.velocity
	// UnityEngine.Rigidbody2D.op_Equality
	// UnityEngine.Rigidbody2D.op_Implicit
	// UnityEngine.Rigidbody2D.op_Inequality
	// UnityEngine.RuntimeAnimatorController.op_Equality
	// UnityEngine.RuntimeAnimatorController.op_Implicit
	// UnityEngine.RuntimeAnimatorController.op_Inequality
	// UnityEngine.SceneManagement.Scene.op_Equality
	// UnityEngine.SceneManagement.Scene.op_Inequality
	// UnityEngine.SceneManagement.SceneManager.LoadScene
	// UnityEngine.SceneManagement.SceneManager.LoadScene
	// UnityEngine.ScriptableObject.op_Equality
	// UnityEngine.ScriptableObject.op_Implicit
	// UnityEngine.ScriptableObject.op_Inequality
	// UnityEngine.Shader.op_Equality
	// UnityEngine.Shader.op_Implicit
	// UnityEngine.Shader.op_Inequality
	// UnityEngine.ShaderVariantCollection.op_Equality
	// UnityEngine.ShaderVariantCollection.op_Implicit
	// UnityEngine.ShaderVariantCollection.op_Inequality
	// UnityEngine.SkinnedMeshRenderer.op_Equality
	// UnityEngine.SkinnedMeshRenderer.op_Implicit
	// UnityEngine.SkinnedMeshRenderer.op_Inequality
	// UnityEngine.Skybox.op_Equality
	// UnityEngine.Skybox.op_Implicit
	// UnityEngine.Skybox.op_Inequality
	// UnityEngine.SliderJoint2D.op_Equality
	// UnityEngine.SliderJoint2D.op_Implicit
	// UnityEngine.SliderJoint2D.op_Inequality
	// UnityEngine.SparseTexture.op_Equality
	// UnityEngine.SparseTexture.op_Implicit
	// UnityEngine.SparseTexture.op_Inequality
	// UnityEngine.SphereCollider..ctor
	// UnityEngine.SphereCollider.op_Equality
	// UnityEngine.SphereCollider.op_Implicit
	// UnityEngine.SphereCollider.op_Inequality
	// UnityEngine.SpringJoint.op_Equality
	// UnityEngine.SpringJoint.op_Implicit
	// UnityEngine.SpringJoint.op_Inequality
	// UnityEngine.SpringJoint2D.op_Equality
	// UnityEngine.SpringJoint2D.op_Implicit
	// UnityEngine.SpringJoint2D.op_Inequality
	// UnityEngine.Sprite.op_Equality
	// UnityEngine.Sprite.op_Implicit
	// UnityEngine.Sprite.op_Inequality
	// UnityEngine.SpriteMask.op_Equality
	// UnityEngine.SpriteMask.op_Implicit
	// UnityEngine.SpriteMask.op_Inequality
	// UnityEngine.SpriteRenderer..ctor
	// UnityEngine.SpriteRenderer.color
	// UnityEngine.SpriteRenderer.enabled
	// UnityEngine.SpriteRenderer.op_Equality
	// UnityEngine.SpriteRenderer.op_Implicit
	// UnityEngine.SpriteRenderer.op_Inequality
	// UnityEngine.SpriteRenderer.sprite
	// UnityEngine.SurfaceEffector2D.op_Equality
	// UnityEngine.SurfaceEffector2D.op_Implicit
	// UnityEngine.SurfaceEffector2D.op_Inequality
	// UnityEngine.TargetJoint2D.op_Equality
	// UnityEngine.TargetJoint2D.op_Implicit
	// UnityEngine.TargetJoint2D.op_Inequality
	// UnityEngine.Terrain.op_Equality
	// UnityEngine.Terrain.op_Implicit
	// UnityEngine.Terrain.op_Inequality
	// UnityEngine.TerrainCollider.op_Equality
	// UnityEngine.TerrainCollider.op_Implicit
	// UnityEngine.TerrainCollider.op_Inequality
	// UnityEngine.TerrainData.op_Equality
	// UnityEngine.TerrainData.op_Implicit
	// UnityEngine.TerrainData.op_Inequality
	// UnityEngine.TerrainLayer.op_Equality
	// UnityEngine.TerrainLayer.op_Implicit
	// UnityEngine.TerrainLayer.op_Inequality
	// UnityEngine.TextAsset.op_Equality
	// UnityEngine.TextAsset.op_Implicit
	// UnityEngine.TextAsset.op_Inequality
	// UnityEngine.TextMesh.op_Equality
	// UnityEngine.TextMesh.op_Implicit
	// UnityEngine.TextMesh.op_Inequality
	// UnityEngine.Texture.op_Equality
	// UnityEngine.Texture.op_Implicit
	// UnityEngine.Texture.op_Inequality
	// UnityEngine.Texture2D.op_Equality
	// UnityEngine.Texture2D.op_Implicit
	// UnityEngine.Texture2D.op_Inequality
	// UnityEngine.Texture2DArray.op_Equality
	// UnityEngine.Texture2DArray.op_Implicit
	// UnityEngine.Texture2DArray.op_Inequality
	// UnityEngine.Texture3D.op_Equality
	// UnityEngine.Texture3D.op_Implicit
	// UnityEngine.Texture3D.op_Inequality
	// UnityEngine.Tilemaps.Tile.op_Equality
	// UnityEngine.Tilemaps.Tile.op_Implicit
	// UnityEngine.Tilemaps.Tile.op_Inequality
	// UnityEngine.Tilemaps.Tilemap.op_Equality
	// UnityEngine.Tilemaps.Tilemap.op_Implicit
	// UnityEngine.Tilemaps.Tilemap.op_Inequality
	// UnityEngine.Tilemaps.TilemapCollider2D.op_Equality
	// UnityEngine.Tilemaps.TilemapCollider2D.op_Implicit
	// UnityEngine.Tilemaps.TilemapCollider2D.op_Inequality
	// UnityEngine.Tilemaps.TilemapRenderer.op_Equality
	// UnityEngine.Tilemaps.TilemapRenderer.op_Implicit
	// UnityEngine.Tilemaps.TilemapRenderer.op_Inequality
	// UnityEngine.Time.deltaTime
	// UnityEngine.Time.fixedDeltaTime
	// UnityEngine.Time.timeScale
	// UnityEngine.Touch.deltaPosition
	// UnityEngine.Touch.phase
	// UnityEngine.TrailRenderer.op_Equality
	// UnityEngine.TrailRenderer.op_Implicit
	// UnityEngine.TrailRenderer.op_Inequality
	// UnityEngine.Transform.eulerAngles
	// UnityEngine.Transform.forward
	// UnityEngine.Transform.localEulerAngles
	// UnityEngine.Transform.localRotation
	// UnityEngine.Transform.LookAt
	// UnityEngine.Transform.LookAt
	// UnityEngine.Transform.LookAt
	// UnityEngine.Transform.op_Equality
	// UnityEngine.Transform.op_Implicit
	// UnityEngine.Transform.op_Inequality
	// UnityEngine.Transform.parent
	// UnityEngine.Transform.position
	// UnityEngine.Transform.Rotate
	// UnityEngine.Transform.Rotate
	// UnityEngine.Transform.Rotate
	// UnityEngine.Transform.rotation
	// UnityEngine.Transform.SetPositionAndRotation
	// UnityEngine.Transform.transform
	// UnityEngine.Transform.TransformDirection
	// UnityEngine.Transform.TransformVector
	// UnityEngine.Transform.Translate
	// UnityEngine.Transform.Translate
	// UnityEngine.Transform.Translate
	// UnityEngine.Transform.Translate
	// UnityEngine.Transform.up
	// UnityEngine.Tree.op_Equality
	// UnityEngine.Tree.op_Implicit
	// UnityEngine.Tree.op_Inequality
	// UnityEngine.U2D.SpriteAtlas.op_Equality
	// UnityEngine.U2D.SpriteAtlas.op_Implicit
	// UnityEngine.U2D.SpriteAtlas.op_Inequality
	// UnityEngine.UI.AspectRatioFitter.op_Equality
	// UnityEngine.UI.AspectRatioFitter.op_Implicit
	// UnityEngine.UI.AspectRatioFitter.op_Inequality
	// UnityEngine.UI.Button.op_Equality
	// UnityEngine.UI.Button.op_Implicit
	// UnityEngine.UI.Button.op_Inequality
	// UnityEngine.UI.CanvasScaler.op_Equality
	// UnityEngine.UI.CanvasScaler.op_Implicit
	// UnityEngine.UI.CanvasScaler.op_Inequality
	// UnityEngine.UI.ContentSizeFitter.op_Equality
	// UnityEngine.UI.ContentSizeFitter.op_Implicit
	// UnityEngine.UI.ContentSizeFitter.op_Inequality
	// UnityEngine.UI.Dropdown.op_Equality
	// UnityEngine.UI.Dropdown.op_Implicit
	// UnityEngine.UI.Dropdown.op_Inequality
	// UnityEngine.UI.GraphicRaycaster.op_Equality
	// UnityEngine.UI.GraphicRaycaster.op_Implicit
	// UnityEngine.UI.GraphicRaycaster.op_Inequality
	// UnityEngine.UI.GridLayoutGroup.op_Equality
	// UnityEngine.UI.GridLayoutGroup.op_Implicit
	// UnityEngine.UI.GridLayoutGroup.op_Inequality
	// UnityEngine.UI.HorizontalLayoutGroup.op_Equality
	// UnityEngine.UI.HorizontalLayoutGroup.op_Implicit
	// UnityEngine.UI.HorizontalLayoutGroup.op_Inequality
	// UnityEngine.UI.Image.color
	// UnityEngine.UI.Image.fillAmount
	// UnityEngine.UI.Image.op_Equality
	// UnityEngine.UI.Image.op_Implicit
	// UnityEngine.UI.Image.op_Inequality
	// UnityEngine.UI.Image.sprite
	// UnityEngine.UI.InputField.op_Equality
	// UnityEngine.UI.InputField.op_Implicit
	// UnityEngine.UI.InputField.op_Inequality
	// UnityEngine.UI.InputField.text
	// UnityEngine.UI.LayoutElement.op_Equality
	// UnityEngine.UI.LayoutElement.op_Implicit
	// UnityEngine.UI.LayoutElement.op_Inequality
	// UnityEngine.UI.Mask.op_Equality
	// UnityEngine.UI.Mask.op_Implicit
	// UnityEngine.UI.Mask.op_Inequality
	// UnityEngine.UI.Outline.op_Equality
	// UnityEngine.UI.Outline.op_Implicit
	// UnityEngine.UI.Outline.op_Inequality
	// UnityEngine.UI.PositionAsUV1.op_Equality
	// UnityEngine.UI.PositionAsUV1.op_Implicit
	// UnityEngine.UI.PositionAsUV1.op_Inequality
	// UnityEngine.UI.RawImage.op_Equality
	// UnityEngine.UI.RawImage.op_Implicit
	// UnityEngine.UI.RawImage.op_Inequality
	// UnityEngine.UI.RectMask2D.op_Equality
	// UnityEngine.UI.RectMask2D.op_Implicit
	// UnityEngine.UI.RectMask2D.op_Inequality
	// UnityEngine.UI.Scrollbar.op_Equality
	// UnityEngine.UI.Scrollbar.op_Implicit
	// UnityEngine.UI.Scrollbar.op_Inequality
	// UnityEngine.UI.ScrollRect.op_Equality
	// UnityEngine.UI.ScrollRect.op_Implicit
	// UnityEngine.UI.ScrollRect.op_Inequality
	// UnityEngine.UI.Selectable.op_Equality
	// UnityEngine.UI.Selectable.op_Implicit
	// UnityEngine.UI.Selectable.op_Inequality
	// UnityEngine.UI.Shadow.op_Equality
	// UnityEngine.UI.Shadow.op_Implicit
	// UnityEngine.UI.Shadow.op_Inequality
	// UnityEngine.UI.Slider.op_Equality
	// UnityEngine.UI.Slider.op_Implicit
	// UnityEngine.UI.Slider.op_Inequality
	// UnityEngine.UI.Text.op_Equality
	// UnityEngine.UI.Text.op_Implicit
	// UnityEngine.UI.Text.op_Inequality
	// UnityEngine.UI.Text.text
	// UnityEngine.UI.Toggle.op_Equality
	// UnityEngine.UI.Toggle.op_Implicit
	// UnityEngine.UI.Toggle.op_Inequality
	// UnityEngine.UI.ToggleGroup.op_Equality
	// UnityEngine.UI.ToggleGroup.op_Implicit
	// UnityEngine.UI.ToggleGroup.op_Inequality
	// UnityEngine.UI.VerticalLayoutGroup.op_Equality
	// UnityEngine.UI.VerticalLayoutGroup.op_Implicit
	// UnityEngine.UI.VerticalLayoutGroup.op_Inequality
	// UnityEngine.UIElements.StyleSheet.op_Equality
	// UnityEngine.UIElements.StyleSheet.op_Implicit
	// UnityEngine.UIElements.StyleSheet.op_Inequality
	// UnityEngine.UIElements.VectorImage.op_Equality
	// UnityEngine.UIElements.VectorImage.op_Implicit
	// UnityEngine.UIElements.VectorImage.op_Inequality
	// UnityEngine.UIElements.VisualTreeAsset.op_Equality
	// UnityEngine.UIElements.VisualTreeAsset.op_Implicit
	// UnityEngine.UIElements.VisualTreeAsset.op_Inequality
	// UnityEngine.Vector2.op_Addition
	// UnityEngine.Vector2.op_Division
	// UnityEngine.Vector2.op_Division
	// UnityEngine.Vector2.op_Equality
	// UnityEngine.Vector2.op_Implicit
	// UnityEngine.Vector2.op_Implicit
	// UnityEngine.Vector2.op_Inequality
	// UnityEngine.Vector2.op_Multiply
	// UnityEngine.Vector2.op_Multiply
	// UnityEngine.Vector2.op_Multiply
	// UnityEngine.Vector2.op_Subtraction
	// UnityEngine.Vector2.op_UnaryNegation
	// UnityEngine.Vector2.x
	// UnityEngine.Vector2.y
	// UnityEngine.Vector3..ctor
	// UnityEngine.Vector3.Distance
	// UnityEngine.Vector3.Magnitude
	// UnityEngine.Vector3.normalized
	// UnityEngine.Vector3.op_Addition
	// UnityEngine.Vector3.op_Division
	// UnityEngine.Vector3.op_Equality
	// UnityEngine.Vector3.op_Inequality
	// UnityEngine.Vector3.op_Multiply
	// UnityEngine.Vector3.op_Multiply
	// UnityEngine.Vector3.op_Subtraction
	// UnityEngine.Vector3.op_UnaryNegation
	// UnityEngine.Vector3.Set
	// UnityEngine.Vector3.Slerp
	// UnityEngine.Vector3.x
	// UnityEngine.Vector3.y
	// UnityEngine.Vector3.z
	// UnityEngine.Vector4.op_Addition
	// UnityEngine.Vector4.op_Division
	// UnityEngine.Vector4.op_Equality
	// UnityEngine.Vector4.op_Implicit
	// UnityEngine.Vector4.op_Implicit
	// UnityEngine.Vector4.op_Implicit
	// UnityEngine.Vector4.op_Inequality
	// UnityEngine.Vector4.op_Multiply
	// UnityEngine.Vector4.op_Multiply
	// UnityEngine.Vector4.op_Subtraction
	// UnityEngine.Vector4.op_UnaryNegation
	// UnityEngine.Video.VideoClip.op_Equality
	// UnityEngine.Video.VideoClip.op_Implicit
	// UnityEngine.Video.VideoClip.op_Inequality
	// UnityEngine.Video.VideoPlayer.op_Equality
	// UnityEngine.Video.VideoPlayer.op_Implicit
	// UnityEngine.Video.VideoPlayer.op_Inequality
	// UnityEngine.WebCamTexture.op_Equality
	// UnityEngine.WebCamTexture.op_Implicit
	// UnityEngine.WebCamTexture.op_Inequality
	// UnityEngine.WheelCollider..ctor
	// UnityEngine.WheelCollider.brakeTorque
	// UnityEngine.WheelCollider.GetWorldPose
	// UnityEngine.WheelCollider.motorTorque
	// UnityEngine.WheelCollider.op_Equality
	// UnityEngine.WheelCollider.op_Implicit
	// UnityEngine.WheelCollider.op_Inequality
	// UnityEngine.WheelCollider.rpm
	// UnityEngine.WheelCollider.steerAngle
	// UnityEngine.WheelJoint2D.op_Equality
	// UnityEngine.WheelJoint2D.op_Implicit
	// UnityEngine.WheelJoint2D.op_Inequality
	// UnityEngine.WindZone.op_Equality
	// UnityEngine.WindZone.op_Implicit
	// UnityEngine.WindZone.op_Inequality
	// UnityEngine.XR.WSA.WorldAnchor.op_Equality
	// UnityEngine.XR.WSA.WorldAnchor.op_Implicit
	// UnityEngine.XR.WSA.WorldAnchor.op_Inequality
	// UnityStandardAssets._2D.Camera2DFollow.op_Equality
	// UnityStandardAssets._2D.Camera2DFollow.op_Implicit
	// UnityStandardAssets._2D.Camera2DFollow.op_Inequality
	// UnityStandardAssets._2D.CameraFollow.op_Equality
	// UnityStandardAssets._2D.CameraFollow.op_Implicit
	// UnityStandardAssets._2D.CameraFollow.op_Inequality
	// UnityStandardAssets._2D.Platformer2DUserControl.op_Equality
	// UnityStandardAssets._2D.Platformer2DUserControl.op_Implicit
	// UnityStandardAssets._2D.Platformer2DUserControl.op_Inequality
	// UnityStandardAssets._2D.PlatformerCharacter2D.op_Equality
	// UnityStandardAssets._2D.PlatformerCharacter2D.op_Implicit
	// UnityStandardAssets._2D.PlatformerCharacter2D.op_Inequality
	// UnityStandardAssets._2D.Restarter.op_Equality
	// UnityStandardAssets._2D.Restarter.op_Implicit
	// UnityStandardAssets._2D.Restarter.op_Inequality
	// UnityStandardAssets.Cameras.AutoCam.op_Equality
	// UnityStandardAssets.Cameras.AutoCam.op_Implicit
	// UnityStandardAssets.Cameras.AutoCam.op_Inequality
	// UnityStandardAssets.Cameras.FreeLookCam.op_Equality
	// UnityStandardAssets.Cameras.FreeLookCam.op_Implicit
	// UnityStandardAssets.Cameras.FreeLookCam.op_Inequality
	// UnityStandardAssets.Cameras.HandHeldCam.op_Equality
	// UnityStandardAssets.Cameras.HandHeldCam.op_Implicit
	// UnityStandardAssets.Cameras.HandHeldCam.op_Inequality
	// UnityStandardAssets.Cameras.LookatTarget.op_Equality
	// UnityStandardAssets.Cameras.LookatTarget.op_Implicit
	// UnityStandardAssets.Cameras.LookatTarget.op_Inequality
	// UnityStandardAssets.Cameras.ProtectCameraFromWallClip.op_Equality
	// UnityStandardAssets.Cameras.ProtectCameraFromWallClip.op_Implicit
	// UnityStandardAssets.Cameras.ProtectCameraFromWallClip.op_Inequality
	// UnityStandardAssets.Cameras.TargetFieldOfView.op_Equality
	// UnityStandardAssets.Cameras.TargetFieldOfView.op_Implicit
	// UnityStandardAssets.Cameras.TargetFieldOfView.op_Inequality
	// UnityStandardAssets.Characters.FirstPerson.FirstPersonController.op_Equality
	// UnityStandardAssets.Characters.FirstPerson.FirstPersonController.op_Implicit
	// UnityStandardAssets.Characters.FirstPerson.FirstPersonController.op_Inequality
	// UnityStandardAssets.Characters.FirstPerson.HeadBob.op_Equality
	// UnityStandardAssets.Characters.FirstPerson.HeadBob.op_Implicit
	// UnityStandardAssets.Characters.FirstPerson.HeadBob.op_Inequality
	// UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.op_Equality
	// UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.op_Implicit
	// UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.op_Inequality
	// UnityStandardAssets.Characters.ThirdPerson.AICharacterControl.op_Equality
	// UnityStandardAssets.Characters.ThirdPerson.AICharacterControl.op_Implicit
	// UnityStandardAssets.Characters.ThirdPerson.AICharacterControl.op_Inequality
	// UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.op_Equality
	// UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.op_Implicit
	// UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.op_Inequality
	// UnityStandardAssets.Characters.ThirdPerson.ThirdPersonUserControl.op_Equality
	// UnityStandardAssets.Characters.ThirdPerson.ThirdPersonUserControl.op_Implicit
	// UnityStandardAssets.Characters.ThirdPerson.ThirdPersonUserControl.op_Inequality
	// UnityStandardAssets.CrossPlatformInput.AxisTouchButton.op_Equality
	// UnityStandardAssets.CrossPlatformInput.AxisTouchButton.op_Implicit
	// UnityStandardAssets.CrossPlatformInput.AxisTouchButton.op_Inequality
	// UnityStandardAssets.CrossPlatformInput.ButtonHandler.op_Equality
	// UnityStandardAssets.CrossPlatformInput.ButtonHandler.op_Implicit
	// UnityStandardAssets.CrossPlatformInput.ButtonHandler.op_Inequality
	// UnityStandardAssets.CrossPlatformInput.InputAxisScrollbar.op_Equality
	// UnityStandardAssets.CrossPlatformInput.InputAxisScrollbar.op_Implicit
	// UnityStandardAssets.CrossPlatformInput.InputAxisScrollbar.op_Inequality
	// UnityStandardAssets.CrossPlatformInput.Joystick.op_Equality
	// UnityStandardAssets.CrossPlatformInput.Joystick.op_Implicit
	// UnityStandardAssets.CrossPlatformInput.Joystick.op_Inequality
	// UnityStandardAssets.CrossPlatformInput.MobileControlRig.op_Equality
	// UnityStandardAssets.CrossPlatformInput.MobileControlRig.op_Implicit
	// UnityStandardAssets.CrossPlatformInput.MobileControlRig.op_Inequality
	// UnityStandardAssets.CrossPlatformInput.TiltInput.op_Equality
	// UnityStandardAssets.CrossPlatformInput.TiltInput.op_Implicit
	// UnityStandardAssets.CrossPlatformInput.TiltInput.op_Inequality
	// UnityStandardAssets.CrossPlatformInput.TouchPad.op_Equality
	// UnityStandardAssets.CrossPlatformInput.TouchPad.op_Implicit
	// UnityStandardAssets.CrossPlatformInput.TouchPad.op_Inequality
	// UnityStandardAssets.Effects.AfterburnerPhysicsForce.op_Equality
	// UnityStandardAssets.Effects.AfterburnerPhysicsForce.op_Implicit
	// UnityStandardAssets.Effects.AfterburnerPhysicsForce.op_Inequality
	// UnityStandardAssets.Effects.ExplosionFireAndDebris.op_Equality
	// UnityStandardAssets.Effects.ExplosionFireAndDebris.op_Implicit
	// UnityStandardAssets.Effects.ExplosionFireAndDebris.op_Inequality
	// UnityStandardAssets.Effects.ExplosionPhysicsForce.op_Equality
	// UnityStandardAssets.Effects.ExplosionPhysicsForce.op_Implicit
	// UnityStandardAssets.Effects.ExplosionPhysicsForce.op_Inequality
	// UnityStandardAssets.Effects.Explosive.op_Equality
	// UnityStandardAssets.Effects.Explosive.op_Implicit
	// UnityStandardAssets.Effects.Explosive.op_Inequality
	// UnityStandardAssets.Effects.ExtinguishableParticleSystem.op_Equality
	// UnityStandardAssets.Effects.ExtinguishableParticleSystem.op_Implicit
	// UnityStandardAssets.Effects.ExtinguishableParticleSystem.op_Inequality
	// UnityStandardAssets.Effects.FireLight.op_Equality
	// UnityStandardAssets.Effects.FireLight.op_Implicit
	// UnityStandardAssets.Effects.FireLight.op_Inequality
	// UnityStandardAssets.Effects.Hose.op_Equality
	// UnityStandardAssets.Effects.Hose.op_Implicit
	// UnityStandardAssets.Effects.Hose.op_Inequality
	// UnityStandardAssets.Effects.ParticleSystemMultiplier.op_Equality
	// UnityStandardAssets.Effects.ParticleSystemMultiplier.op_Implicit
	// UnityStandardAssets.Effects.ParticleSystemMultiplier.op_Inequality
	// UnityStandardAssets.Effects.SmokeParticles.op_Equality
	// UnityStandardAssets.Effects.SmokeParticles.op_Implicit
	// UnityStandardAssets.Effects.SmokeParticles.op_Inequality
	// UnityStandardAssets.Effects.WaterHoseParticles.op_Equality
	// UnityStandardAssets.Effects.WaterHoseParticles.op_Implicit
	// UnityStandardAssets.Effects.WaterHoseParticles.op_Inequality
	// UnityStandardAssets.SceneUtils.ParticleSceneControls.op_Equality
	// UnityStandardAssets.SceneUtils.ParticleSceneControls.op_Implicit
	// UnityStandardAssets.SceneUtils.ParticleSceneControls.op_Inequality
	// UnityStandardAssets.SceneUtils.PlaceTargetWithMouse.op_Equality
	// UnityStandardAssets.SceneUtils.PlaceTargetWithMouse.op_Implicit
	// UnityStandardAssets.SceneUtils.PlaceTargetWithMouse.op_Inequality
	// UnityStandardAssets.SceneUtils.SlowMoButton.op_Equality
	// UnityStandardAssets.SceneUtils.SlowMoButton.op_Implicit
	// UnityStandardAssets.SceneUtils.SlowMoButton.op_Inequality
	// UnityStandardAssets.Utility.ActivateTrigger.op_Equality
	// UnityStandardAssets.Utility.ActivateTrigger.op_Implicit
	// UnityStandardAssets.Utility.ActivateTrigger.op_Inequality
	// UnityStandardAssets.Utility.AutoMobileShaderSwitch.op_Equality
	// UnityStandardAssets.Utility.AutoMobileShaderSwitch.op_Implicit
	// UnityStandardAssets.Utility.AutoMobileShaderSwitch.op_Inequality
	// UnityStandardAssets.Utility.AutoMoveAndRotate.op_Equality
	// UnityStandardAssets.Utility.AutoMoveAndRotate.op_Implicit
	// UnityStandardAssets.Utility.AutoMoveAndRotate.op_Inequality
	// UnityStandardAssets.Utility.DragRigidbody.op_Equality
	// UnityStandardAssets.Utility.DragRigidbody.op_Implicit
	// UnityStandardAssets.Utility.DragRigidbody.op_Inequality
	// UnityStandardAssets.Utility.DynamicShadowSettings.op_Equality
	// UnityStandardAssets.Utility.DynamicShadowSettings.op_Implicit
	// UnityStandardAssets.Utility.DynamicShadowSettings.op_Inequality
	// UnityStandardAssets.Utility.FollowTarget.op_Equality
	// UnityStandardAssets.Utility.FollowTarget.op_Implicit
	// UnityStandardAssets.Utility.FollowTarget.op_Inequality
	// UnityStandardAssets.Utility.FPSCounter.op_Equality
	// UnityStandardAssets.Utility.FPSCounter.op_Implicit
	// UnityStandardAssets.Utility.FPSCounter.op_Inequality
	// UnityStandardAssets.Utility.ObjectResetter.op_Equality
	// UnityStandardAssets.Utility.ObjectResetter.op_Implicit
	// UnityStandardAssets.Utility.ObjectResetter.op_Inequality
	// UnityStandardAssets.Utility.ParticleSystemDestroyer.op_Equality
	// UnityStandardAssets.Utility.ParticleSystemDestroyer.op_Implicit
	// UnityStandardAssets.Utility.ParticleSystemDestroyer.op_Inequality
	// UnityStandardAssets.Utility.PlatformSpecificContent.op_Equality
	// UnityStandardAssets.Utility.PlatformSpecificContent.op_Implicit
	// UnityStandardAssets.Utility.PlatformSpecificContent.op_Inequality
	// UnityStandardAssets.Utility.SimpleActivatorMenu.op_Equality
	// UnityStandardAssets.Utility.SimpleActivatorMenu.op_Implicit
	// UnityStandardAssets.Utility.SimpleActivatorMenu.op_Inequality
	// UnityStandardAssets.Utility.SimpleMouseRotator.op_Equality
	// UnityStandardAssets.Utility.SimpleMouseRotator.op_Implicit
	// UnityStandardAssets.Utility.SimpleMouseRotator.op_Inequality
	// UnityStandardAssets.Utility.SmoothFollow.op_Equality
	// UnityStandardAssets.Utility.SmoothFollow.op_Implicit
	// UnityStandardAssets.Utility.SmoothFollow.op_Inequality
	// UnityStandardAssets.Utility.TimedObjectActivator.op_Equality
	// UnityStandardAssets.Utility.TimedObjectActivator.op_Implicit
	// UnityStandardAssets.Utility.TimedObjectActivator.op_Inequality
	// UnityStandardAssets.Utility.TimedObjectDestructor.op_Equality
	// UnityStandardAssets.Utility.TimedObjectDestructor.op_Implicit
	// UnityStandardAssets.Utility.TimedObjectDestructor.op_Inequality
	// UnityStandardAssets.Utility.WaypointCircuit.op_Equality
	// UnityStandardAssets.Utility.WaypointCircuit.op_Implicit
	// UnityStandardAssets.Utility.WaypointCircuit.op_Inequality
	// UnityStandardAssets.Utility.WaypointCircuit.waypointList
	// UnityStandardAssets.Utility.WaypointProgressTracker.op_Equality
	// UnityStandardAssets.Utility.WaypointProgressTracker.op_Implicit
	// UnityStandardAssets.Utility.WaypointProgressTracker.op_Inequality
	// UnityStandardAssets.Utility.WaypointProgressTracker.Reset
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAiControl.op_Equality
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAiControl.op_Implicit
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAiControl.op_Inequality
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAudio.op_Equality
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAudio.op_Implicit
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAudio.op_Inequality
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.op_Equality
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.op_Implicit
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.op_Inequality
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.op_Equality
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.op_Implicit
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.op_Inequality
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplanePropellerAnimator.op_Equality
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplanePropellerAnimator.op_Implicit
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplanePropellerAnimator.op_Inequality
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl2Axis.op_Equality
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl2Axis.op_Implicit
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl2Axis.op_Inequality
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl4Axis.op_Equality
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl4Axis.op_Implicit
	// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl4Axis.op_Inequality
	// UnityStandardAssets.Vehicles.Aeroplane.JetParticleEffect.op_Equality
	// UnityStandardAssets.Vehicles.Aeroplane.JetParticleEffect.op_Implicit
	// UnityStandardAssets.Vehicles.Aeroplane.JetParticleEffect.op_Inequality
	// UnityStandardAssets.Vehicles.Aeroplane.LandingGear.op_Equality
	// UnityStandardAssets.Vehicles.Aeroplane.LandingGear.op_Implicit
	// UnityStandardAssets.Vehicles.Aeroplane.LandingGear.op_Inequality
	// UnityStandardAssets.Vehicles.Ball.Ball.op_Equality
	// UnityStandardAssets.Vehicles.Ball.Ball.op_Implicit
	// UnityStandardAssets.Vehicles.Ball.Ball.op_Inequality
	// UnityStandardAssets.Vehicles.Ball.BallUserControl.op_Equality
	// UnityStandardAssets.Vehicles.Ball.BallUserControl.op_Implicit
	// UnityStandardAssets.Vehicles.Ball.BallUserControl.op_Inequality
	// UnityStandardAssets.Vehicles.Car.BrakeLight.op_Equality
	// UnityStandardAssets.Vehicles.Car.BrakeLight.op_Implicit
	// UnityStandardAssets.Vehicles.Car.BrakeLight.op_Inequality
	// UnityStandardAssets.Vehicles.Car.CarAIControl.enabled
	// UnityStandardAssets.Vehicles.Car.CarAIControl.op_Equality
	// UnityStandardAssets.Vehicles.Car.CarAIControl.op_Implicit
	// UnityStandardAssets.Vehicles.Car.CarAIControl.op_Inequality
	// UnityStandardAssets.Vehicles.Car.CarAudio.op_Equality
	// UnityStandardAssets.Vehicles.Car.CarAudio.op_Implicit
	// UnityStandardAssets.Vehicles.Car.CarAudio.op_Inequality
	// UnityStandardAssets.Vehicles.Car.CarController.op_Equality
	// UnityStandardAssets.Vehicles.Car.CarController.op_Implicit
	// UnityStandardAssets.Vehicles.Car.CarController.op_Inequality
	// UnityStandardAssets.Vehicles.Car.CarSelfRighting.op_Equality
	// UnityStandardAssets.Vehicles.Car.CarSelfRighting.op_Implicit
	// UnityStandardAssets.Vehicles.Car.CarSelfRighting.op_Inequality
	// UnityStandardAssets.Vehicles.Car.CarUserControl.op_Equality
	// UnityStandardAssets.Vehicles.Car.CarUserControl.op_Implicit
	// UnityStandardAssets.Vehicles.Car.CarUserControl.op_Inequality
	// UnityStandardAssets.Vehicles.Car.Mudguard.op_Equality
	// UnityStandardAssets.Vehicles.Car.Mudguard.op_Implicit
	// UnityStandardAssets.Vehicles.Car.Mudguard.op_Inequality
	// UnityStandardAssets.Vehicles.Car.SkidTrail.op_Equality
	// UnityStandardAssets.Vehicles.Car.SkidTrail.op_Implicit
	// UnityStandardAssets.Vehicles.Car.SkidTrail.op_Inequality
	// UnityStandardAssets.Vehicles.Car.Suspension.op_Equality
	// UnityStandardAssets.Vehicles.Car.Suspension.op_Implicit
	// UnityStandardAssets.Vehicles.Car.Suspension.op_Inequality
	// UnityStandardAssets.Vehicles.Car.WheelEffects.op_Equality
	// UnityStandardAssets.Vehicles.Car.WheelEffects.op_Implicit
	// UnityStandardAssets.Vehicles.Car.WheelEffects.op_Inequality
	// UnityStandardAssets.Water.Displace.op_Equality
	// UnityStandardAssets.Water.Displace.op_Implicit
	// UnityStandardAssets.Water.Displace.op_Inequality
	// UnityStandardAssets.Water.GerstnerDisplace.op_Equality
	// UnityStandardAssets.Water.GerstnerDisplace.op_Implicit
	// UnityStandardAssets.Water.GerstnerDisplace.op_Inequality
	// UnityStandardAssets.Water.PlanarReflection.op_Equality
	// UnityStandardAssets.Water.PlanarReflection.op_Implicit
	// UnityStandardAssets.Water.PlanarReflection.op_Inequality
	// UnityStandardAssets.Water.SpecularLighting.op_Equality
	// UnityStandardAssets.Water.SpecularLighting.op_Implicit
	// UnityStandardAssets.Water.SpecularLighting.op_Inequality
	// UnityStandardAssets.Water.Water.op_Equality
	// UnityStandardAssets.Water.Water.op_Implicit
	// UnityStandardAssets.Water.Water.op_Inequality
	// UnityStandardAssets.Water.WaterBase.op_Equality
	// UnityStandardAssets.Water.WaterBase.op_Implicit
	// UnityStandardAssets.Water.WaterBase.op_Inequality
	// UnityStandardAssets.Water.WaterBasic.op_Equality
	// UnityStandardAssets.Water.WaterBasic.op_Implicit
	// UnityStandardAssets.Water.WaterBasic.op_Inequality
	// UnityStandardAssets.Water.WaterTile.op_Equality
	// UnityStandardAssets.Water.WaterTile.op_Implicit
	// UnityStandardAssets.Water.WaterTile.op_Inequality
	// UnityTemplateProjects.SimpleCameraController.op_Equality
	// UnityTemplateProjects.SimpleCameraController.op_Implicit
	// UnityTemplateProjects.SimpleCameraController.op_Inequality
	// VariableJoystick.op_Equality
	// VariableJoystick.op_Implicit
	// VariableJoystick.op_Inequality
	// VariableJoystick.Vertical
	// VisualClockController.op_Equality
	// VisualClockController.op_Implicit
	// VisualClockController.op_Inequality
	// Visyde.V_SMC_Camera.op_Equality
	// Visyde.V_SMC_Camera.op_Implicit
	// Visyde.V_SMC_Camera.op_Inequality
	// Visyde.V_SMC_Handler.op_Equality
	// Visyde.V_SMC_Handler.op_Implicit
	// Visyde.V_SMC_Handler.op_Inequality
	// Visyde.V_Text.op_Equality
	// Visyde.V_Text.op_Implicit
	// Visyde.V_Text.op_Inequality
	// WayPointsRenamer.op_Equality
	// WayPointsRenamer.op_Implicit
	// WayPointsRenamer.op_Inequality
	// WheelMeshes.op_Equality
	// WheelMeshes.op_Implicit
	// WheelMeshes.op_Inequality
	// WpPatrol.enabled
	// WpPatrol.op_Equality
	// WpPatrol.op_Implicit
	// WpPatrol.op_Inequality
	// YineTop.op_Equality
	// YineTop.op_Implicit
	// YineTop.op_Inequality
	[UnityEngine.Scripting.PreserveAttribute()]
	public class AotStubs
	{
		
		// AdsBanner.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AdsBanner_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AdsBanner.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AdsBanner_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// AdsBanner.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AdsBanner_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AdsInter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AdsInter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AdsInter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AdsInter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// AdsInter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AdsInter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AlphaButtonClickMask.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AlphaButtonClickMask_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AlphaButtonClickMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AlphaButtonClickMask_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// AlphaButtonClickMask.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AlphaButtonClickMask_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.AnimatorMessageListener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_AnimatorMessageListener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.AnimatorMessageListener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_AnimatorMessageListener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.AnimatorMessageListener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_AnimatorMessageListener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMachine.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMachine_enabled()
		{
			global::UnityEngine.Behaviour target = default(global::UnityEngine.Behaviour);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Behaviour));
			optimized.SetValue(default(global::UnityEngine.Behaviour), default(bool));
		}
		
		// Bolt.FlowMachine.isActiveAndEnabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMachine_isActiveAndEnabled()
		{
			global::UnityEngine.Behaviour target = default(global::UnityEngine.Behaviour);
			bool accessor = target.isActiveAndEnabled;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Behaviour));
		}
		
		// Bolt.FlowMachine.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMachine_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMachine.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMachine_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMachine.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMachine_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMacro.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMacro_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMacro.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMacro_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMacro.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMacro_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMachine.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMachine_enabled()
		{
			global::UnityEngine.Behaviour target = default(global::UnityEngine.Behaviour);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Behaviour));
			optimized.SetValue(default(global::UnityEngine.Behaviour), default(bool));
		}
		
		// Bolt.StateMachine.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMachine_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMachine.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMachine_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMachine.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMachine_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMacro.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMacro_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMacro.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMacro_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMacro.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMacro_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BoxObjectPool.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BoxObjectPool_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BoxObjectPool.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BoxObjectPool_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// BoxObjectPool.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BoxObjectPool_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ButtonAnimation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ButtonAnimation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ButtonAnimation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ButtonAnimation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ButtonAnimation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ButtonAnimation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CameraCollision_1.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraCollision_1_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CameraCollision_1.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraCollision_1_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CameraCollision_1.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraCollision_1_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CameraSwitch.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraSwitch_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CameraSwitch.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraSwitch_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CameraSwitch.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraSwitch_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.Cinemachine3rdPersonAim.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_Cinemachine3rdPersonAim_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.Cinemachine3rdPersonAim.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_Cinemachine3rdPersonAim_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.Cinemachine3rdPersonAim.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_Cinemachine3rdPersonAim_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.Cinemachine3rdPersonFollow.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_Cinemachine3rdPersonFollow_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.Cinemachine3rdPersonFollow.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_Cinemachine3rdPersonFollow_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.Cinemachine3rdPersonFollow.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_Cinemachine3rdPersonFollow_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineBasicMultiChannelPerlin.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineBasicMultiChannelPerlin_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineBasicMultiChannelPerlin.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineBasicMultiChannelPerlin_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineBasicMultiChannelPerlin.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineBasicMultiChannelPerlin_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineBlenderSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineBlenderSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineBlenderSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineBlenderSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineBlenderSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineBlenderSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineBlendListCamera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineBlendListCamera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineBlendListCamera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineBlendListCamera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineBlendListCamera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineBlendListCamera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineBrain.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineBrain_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineBrain.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineBrain_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineBrain.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineBrain_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineClearShot.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineClearShot_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineClearShot.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineClearShot_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineClearShot.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineClearShot_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineCollisionImpulseSource.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineCollisionImpulseSource_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineCollisionImpulseSource.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineCollisionImpulseSource_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineCollisionImpulseSource.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineCollisionImpulseSource_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineComposer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineComposer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineComposer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineComposer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineComposer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineComposer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineConfiner.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineConfiner_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineConfiner.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineConfiner_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineConfiner.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineConfiner_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineDollyCart.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineDollyCart_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineDollyCart.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineDollyCart_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineDollyCart.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineDollyCart_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineExternalCamera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineExternalCamera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineExternalCamera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineExternalCamera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineExternalCamera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineExternalCamera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineFixedSignal.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineFixedSignal_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineFixedSignal.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineFixedSignal_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineFixedSignal.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineFixedSignal_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineFollowZoom.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineFollowZoom_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineFollowZoom.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineFollowZoom_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineFollowZoom.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineFollowZoom_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineFramingTransposer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineFramingTransposer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineFramingTransposer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineFramingTransposer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineFramingTransposer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineFramingTransposer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineFreeLook.ForceCameraPosition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineFreeLook_ForceCameraPosition()
		{
			global::Cinemachine.CinemachineFreeLook target = default(global::Cinemachine.CinemachineFreeLook);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			target.ForceCameraPosition(arg0, arg1);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::Cinemachine.CinemachineFreeLook), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineFreeLook.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineFreeLook_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineFreeLook.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineFreeLook_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineFreeLook.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineFreeLook_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineGroupComposer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineGroupComposer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineGroupComposer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineGroupComposer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineGroupComposer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineGroupComposer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineHardLockToTarget.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineHardLockToTarget_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineHardLockToTarget.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineHardLockToTarget_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineHardLockToTarget.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineHardLockToTarget_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineHardLookAt.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineHardLookAt_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineHardLookAt.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineHardLookAt_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineHardLookAt.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineHardLookAt_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineImpulseListener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineImpulseListener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineImpulseListener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineImpulseListener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineImpulseListener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineImpulseListener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineImpulseSource.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineImpulseSource_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineImpulseSource.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineImpulseSource_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineImpulseSource.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineImpulseSource_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineIndependentImpulseListener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineIndependentImpulseListener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineIndependentImpulseListener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineIndependentImpulseListener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineIndependentImpulseListener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineIndependentImpulseListener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineInputProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineInputProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineInputProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineInputProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineInputProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineInputProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineMixingCamera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineMixingCamera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineMixingCamera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineMixingCamera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineMixingCamera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineMixingCamera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineOrbitalTransposer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineOrbitalTransposer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineOrbitalTransposer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineOrbitalTransposer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineOrbitalTransposer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineOrbitalTransposer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachinePath.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachinePath_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachinePath.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachinePath_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachinePath.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachinePath_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachinePipeline.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachinePipeline_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachinePipeline.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachinePipeline_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachinePipeline.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachinePipeline_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachinePixelPerfect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachinePixelPerfect_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachinePixelPerfect.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachinePixelPerfect_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachinePixelPerfect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachinePixelPerfect_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachinePOV.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachinePOV_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachinePOV.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachinePOV_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachinePOV.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachinePOV_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineSameAsFollowTarget.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineSameAsFollowTarget_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineSameAsFollowTarget.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineSameAsFollowTarget_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineSameAsFollowTarget.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineSameAsFollowTarget_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineSmoothPath.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineSmoothPath_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineSmoothPath.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineSmoothPath_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineSmoothPath.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineSmoothPath_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineStateDrivenCamera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineStateDrivenCamera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineStateDrivenCamera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineStateDrivenCamera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineStateDrivenCamera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineStateDrivenCamera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineStoryboard.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineStoryboard_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineStoryboard.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineStoryboard_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineStoryboard.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineStoryboard_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineTargetGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineTargetGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineTargetGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineTargetGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineTargetGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineTargetGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineTrackedDolly.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineTrackedDolly_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineTrackedDolly.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineTrackedDolly_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineTrackedDolly.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineTrackedDolly_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineTransposer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineTransposer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineTransposer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineTransposer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineTransposer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineTransposer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineTriggerAction.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineTriggerAction_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineTriggerAction.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineTriggerAction_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineTriggerAction.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineTriggerAction_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineVirtualCamera..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineVirtualCamera_ctor()
		{
			new Cinemachine.CinemachineVirtualCamera();
		}
		
		// Cinemachine.CinemachineVirtualCamera.ForceCameraPosition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineVirtualCamera_ForceCameraPosition()
		{
			global::Cinemachine.CinemachineVirtualCamera target = default(global::Cinemachine.CinemachineVirtualCamera);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			target.ForceCameraPosition(arg0, arg1);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::Cinemachine.CinemachineVirtualCamera), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineVirtualCamera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineVirtualCamera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineVirtualCamera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineVirtualCamera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.CinemachineVirtualCamera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_CinemachineVirtualCamera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.GroupWeightManipulator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_GroupWeightManipulator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.GroupWeightManipulator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_GroupWeightManipulator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.GroupWeightManipulator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_GroupWeightManipulator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.NoiseSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_NoiseSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.NoiseSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_NoiseSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.NoiseSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_NoiseSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.PostFX.CinemachinePostProcessing.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_PostFX_CinemachinePostProcessing_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.PostFX.CinemachinePostProcessing.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_PostFX_CinemachinePostProcessing_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.PostFX.CinemachinePostProcessing.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_PostFX_CinemachinePostProcessing_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.PostFX.CinemachineVolumeSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_PostFX_CinemachineVolumeSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.PostFX.CinemachineVolumeSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_PostFX_CinemachineVolumeSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Cinemachine.PostFX.CinemachineVolumeSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Cinemachine_PostFX_CinemachineVolumeSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CinemachineCameraOffset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CinemachineCameraOffset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CinemachineCameraOffset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CinemachineCameraOffset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CinemachineCameraOffset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CinemachineCameraOffset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CinemachineRecomposer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CinemachineRecomposer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CinemachineRecomposer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CinemachineRecomposer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CinemachineRecomposer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CinemachineRecomposer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CinemachineShot.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CinemachineShot_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CinemachineShot.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CinemachineShot_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CinemachineShot.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CinemachineShot_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CinemachineTouchInputMapper.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CinemachineTouchInputMapper_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CinemachineTouchInputMapper.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CinemachineTouchInputMapper_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CinemachineTouchInputMapper.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CinemachineTouchInputMapper_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CinemachineTrack.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CinemachineTrack_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CinemachineTrack.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CinemachineTrack_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CinemachineTrack.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CinemachineTrack_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CountTimer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CountTimer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CountTimer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CountTimer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CountTimer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CountTimer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CustomDeviceUsages.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomDeviceUsages_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CustomDeviceUsages.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomDeviceUsages_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CustomDeviceUsages.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CustomDeviceUsages_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DayAndNightControl.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DayAndNightControl_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DayAndNightControl.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DayAndNightControl_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// DayAndNightControl.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DayAndNightControl_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Demo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Demo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Demo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Demo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Demo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Demo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Doublsb.Dialog.Character.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Doublsb_Dialog_Character_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Doublsb.Dialog.Character.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Doublsb_Dialog_Character_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Doublsb.Dialog.Character.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Doublsb_Dialog_Character_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Doublsb.Dialog.DialogManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Doublsb_Dialog_DialogManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Doublsb.Dialog.DialogManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Doublsb_Dialog_DialogManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Doublsb.Dialog.DialogManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Doublsb_Dialog_DialogManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DynamicJoystick.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DynamicJoystick_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DynamicJoystick.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DynamicJoystick_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// DynamicJoystick.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DynamicJoystick_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// EventSystemChecker.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void EventSystemChecker_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// EventSystemChecker.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void EventSystemChecker_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// EventSystemChecker.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void EventSystemChecker_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ExamplePlayerController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ExamplePlayerController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ExamplePlayerController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ExamplePlayerController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ExamplePlayerController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ExamplePlayerController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ExampleSceneFree.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ExampleSceneFree_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ExampleSceneFree.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ExampleSceneFree_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ExampleSceneFree.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ExampleSceneFree_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ExtendedFlycam.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ExtendedFlycam_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ExtendedFlycam.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ExtendedFlycam_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ExtendedFlycam.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ExtendedFlycam_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FillRound.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FillRound_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FillRound.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FillRound_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// FillRound.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FillRound_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FixedJoystick.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FixedJoystick_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FixedJoystick.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FixedJoystick_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// FixedJoystick.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FixedJoystick_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_Equality()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_GreaterThan
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_GreaterThan()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 > arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_GreaterThanOrEqual
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_GreaterThanOrEqual()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 >= arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_Inequality()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_LessThan
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_LessThan()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 < arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_LessThanOrEqual
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_LessThanOrEqual()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 <= arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.ToString
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_ToString()
		{
			float target = default(float);
			target.ToString();
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(float));
			optimized.Invoke(default(object[]));
		}
		
		// FloatingJoystick.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FloatingJoystick_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// FloatingJoystick.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FloatingJoystick_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// FloatingJoystick.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void FloatingJoystick_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ForcedReset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ForcedReset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ForcedReset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ForcedReset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ForcedReset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ForcedReset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ImgsFillDynamic.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ImgsFillDynamic_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ImgsFillDynamic.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ImgsFillDynamic_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ImgsFillDynamic.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ImgsFillDynamic_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Indicator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Indicator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Indicator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Indicator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Indicator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Indicator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// IntersititialAd.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void IntersititialAd_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// IntersititialAd.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void IntersititialAd_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// IntersititialAd.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void IntersititialAd_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// int.ToString
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void int_ToString()
		{
			int target = default(int);
			target.ToString();
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(int));
			optimized.Invoke(default(object[]));
		}
		
		// intersial.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void intersial_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// intersial.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void intersial_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// intersial.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void intersial_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Joystick.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Joystick_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Joystick.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Joystick_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Joystick.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Joystick_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// JoystickFree.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void JoystickFree_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// JoystickFree.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void JoystickFree_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// JoystickFree.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void JoystickFree_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// JoystickPlayerExample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void JoystickPlayerExample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// JoystickPlayerExample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void JoystickPlayerExample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// JoystickPlayerExample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void JoystickPlayerExample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// JoystickSetterExample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void JoystickSetterExample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// JoystickSetterExample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void JoystickSetterExample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// JoystickSetterExample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void JoystickSetterExample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanDestroy_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanDestroy_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanDestroy_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanDestroy_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanDestroy_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanDestroy_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanFormatString_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanFormatString_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanFormatString_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanFormatString_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanFormatString_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanFormatString_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanGuide_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanGuide_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanGuide_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanGuide_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanGuide_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanGuide_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanPlane_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanPlane_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanPlane_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanPlane_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanPlane_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanPlane_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanRoll_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanRoll_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanRoll_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanRoll_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanRoll_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanRoll_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSelect_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSelect_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSelect_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSelect_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSelect_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSelect_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSelectable_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSelectable_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSelectable_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSelectable_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSelectable_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSelectable_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSelectableGraphicColor_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSelectableGraphicColor_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSelectableGraphicColor_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSelectableGraphicColor_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSelectableGraphicColor_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSelectableGraphicColor_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSelectableRendererColor_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSelectableRendererColor_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSelectableRendererColor_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSelectableRendererColor_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSelectableRendererColor_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSelectableRendererColor_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSelectableSpriteRendererColor_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSelectableSpriteRendererColor_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSelectableSpriteRendererColor_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSelectableSpriteRendererColor_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSelectableSpriteRendererColor_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSelectableSpriteRendererColor_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSpawn_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSpawn_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSpawn_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSpawn_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Editor.LeanSpawn_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Editor_LeanSpawn_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Examples.Editor.LeanDemo_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Examples_Editor_LeanDemo_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Examples.Editor.LeanDemo_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Examples_Editor_LeanDemo_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Examples.Editor.LeanDemo_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Examples_Editor_LeanDemo_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Examples.Editor.LeanLinkTo_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Examples_Editor_LeanLinkTo_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Examples.Editor.LeanLinkTo_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Examples_Editor_LeanLinkTo_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Examples.Editor.LeanLinkTo_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Examples_Editor_LeanLinkTo_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Examples.LeanDemo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Examples_LeanDemo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Examples.LeanDemo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Examples_LeanDemo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Examples.LeanDemo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Examples_LeanDemo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Examples.LeanLinkTo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Examples_LeanLinkTo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Examples.LeanLinkTo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Examples_LeanLinkTo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.Examples.LeanLinkTo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_Examples_LeanLinkTo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanDestroy.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanDestroy_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanDestroy.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanDestroy_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanDestroy.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanDestroy_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanFormatString.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanFormatString_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanFormatString.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanFormatString_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanFormatString.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanFormatString_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanGuide.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanGuide_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanGuide.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanGuide_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanGuide.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanGuide_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanPath.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanPath_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanPath.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanPath_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanPath.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanPath_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanPlane.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanPlane_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanPlane.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanPlane_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanPlane.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanPlane_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanRoll.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanRoll_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanRoll.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanRoll_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanRoll.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanRoll_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSelect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSelect_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSelect.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSelect_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSelect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSelect_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSelectable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSelectable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSelectable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSelectable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSelectable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSelectable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSelectableGraphicColor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSelectableGraphicColor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSelectableGraphicColor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSelectableGraphicColor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSelectableGraphicColor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSelectableGraphicColor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSelectableRendererColor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSelectableRendererColor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSelectableRendererColor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSelectableRendererColor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSelectableRendererColor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSelectableRendererColor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSelectableSpriteRendererColor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSelectableSpriteRendererColor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSelectableSpriteRendererColor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSelectableSpriteRendererColor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSelectableSpriteRendererColor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSelectableSpriteRendererColor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSpawn.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSpawn_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSpawn.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSpawn_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Common.LeanSpawn.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Common_LeanSpawn_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanDragCamera_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanDragCamera_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanDragCamera_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanDragCamera_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanDragCamera_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanDragCamera_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanDragTrail_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanDragTrail_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanDragTrail_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanDragTrail_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanDragTrail_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanDragTrail_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanDragTranslate_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanDragTranslate_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanDragTranslate_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanDragTranslate_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanDragTranslate_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanDragTranslate_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerDown_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerDown_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerDown_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerDown_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerDown_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerDown_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerOld_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerOld_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerOld_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerOld_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerOld_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerOld_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerSwipe_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerSwipe_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerSwipe_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerSwipe_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerSwipe_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerSwipe_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerTap_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerTap_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerTap_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerTap_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerTap_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerTap_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerUp_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerUp_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerUp_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerUp_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerUp_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerUp_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerUpdate_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerUpdate_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerUpdate_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerUpdate_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanFingerUpdate_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanFingerUpdate_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanPinchScale_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanPinchScale_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanPinchScale_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanPinchScale_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanPinchScale_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanPinchScale_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanPulseScale_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanPulseScale_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanPulseScale_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanPulseScale_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanPulseScale_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanPulseScale_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanSelectableByFinger_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanSelectableByFinger_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanSelectableByFinger_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanSelectableByFinger_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanSelectableByFinger_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanSelectableByFinger_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanSelectByFinger_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanSelectByFinger_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanSelectByFinger_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanSelectByFinger_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanSelectByFinger_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanSelectByFinger_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanTouch_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanTouch_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanTouch_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanTouch_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanTouch_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanTouch_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanTouchSimulator_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanTouchSimulator_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanTouchSimulator_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanTouchSimulator_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanTouchSimulator_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanTouchSimulator_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanTwistRotate_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanTwistRotate_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanTwistRotate_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanTwistRotate_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanTwistRotate_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanTwistRotate_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanTwistRotateAxis_Editor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanTwistRotateAxis_Editor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanTwistRotateAxis_Editor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanTwistRotateAxis_Editor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.Editor.LeanTwistRotateAxis_Editor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_Editor_LeanTwistRotateAxis_Editor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanDragCamera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanDragCamera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanDragCamera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanDragCamera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanDragCamera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanDragCamera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanDragTrail.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanDragTrail_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanDragTrail.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanDragTrail_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanDragTrail.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanDragTrail_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanDragTranslate.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanDragTranslate_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanDragTranslate.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanDragTranslate_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanDragTranslate.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanDragTranslate_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerDown.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerDown_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerDown.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerDown_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerDown.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerDown_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerOld.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerOld_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerOld.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerOld_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerOld.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerOld_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerSwipe.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerSwipe_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerSwipe.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerSwipe_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerSwipe.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerSwipe_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerTap.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerTap_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerTap.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerTap_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerTap.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerTap_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerUp.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerUp_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerUp.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerUp_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerUp.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerUp_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerUpdate.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerUpdate_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerUpdate.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerUpdate_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanFingerUpdate.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanFingerUpdate_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanPinchScale.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanPinchScale_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanPinchScale.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanPinchScale_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanPinchScale.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanPinchScale_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanPulseScale.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanPulseScale_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanPulseScale.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanPulseScale_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanPulseScale.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanPulseScale_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanSelectableByFinger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanSelectableByFinger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanSelectableByFinger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanSelectableByFinger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanSelectableByFinger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanSelectableByFinger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanSelectByFinger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanSelectByFinger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanSelectByFinger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanSelectByFinger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanSelectByFinger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanSelectByFinger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanTouch.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanTouch_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanTouch.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanTouch_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanTouch.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanTouch_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanTouchEvents.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanTouchEvents_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanTouchEvents.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanTouchEvents_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanTouchEvents.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanTouchEvents_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanTouchSimulator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanTouchSimulator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanTouchSimulator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanTouchSimulator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanTouchSimulator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanTouchSimulator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanTwistRotate.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanTwistRotate_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanTwistRotate.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanTwistRotate_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanTwistRotate.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanTwistRotate_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanTwistRotateAxis.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanTwistRotateAxis_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanTwistRotateAxis.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanTwistRotateAxis_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Lean.Touch.LeanTwistRotateAxis.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Lean_Touch_LeanTwistRotateAxis_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LevelReset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelReset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LevelReset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelReset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LevelReset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelReset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Ludiq.AotList..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Ludiq_AotList_ctor()
		{
			new Ludiq.AotList();
		}
		
		// Ludiq.AotList.Clear
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Ludiq_AotList_Clear()
		{
			global::System.Collections.ArrayList target = default(global::System.Collections.ArrayList);
			target.Clear();
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::System.Collections.ArrayList));
			optimized.Invoke(default(object[]));
		}
		
		// MenuSceneLoader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MenuSceneLoader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MenuSceneLoader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MenuSceneLoader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MenuSceneLoader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MenuSceneLoader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MeshCombiner.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshCombiner_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MeshCombiner.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshCombiner_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MeshCombiner.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MeshCombiner_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// mobile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void mobile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// mobile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void mobile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// mobile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void mobile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MSButtonFree.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MSButtonFree_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MSButtonFree.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MSButtonFree_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MSButtonFree.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MSButtonFree_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MSFPSControllerFree.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MSFPSControllerFree_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MSFPSControllerFree.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MSFPSControllerFree_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MSFPSControllerFree.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MSFPSControllerFree_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MSOpenURL.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MSOpenURL_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MSOpenURL.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MSOpenURL_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MSOpenURL.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MSOpenURL_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MSSceneControllerFree.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MSSceneControllerFree_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MSSceneControllerFree.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MSSceneControllerFree_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MSSceneControllerFree.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MSSceneControllerFree_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MSVehicleControllerFree.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MSVehicleControllerFree_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MSVehicleControllerFree.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MSVehicleControllerFree_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MSVehicleControllerFree.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MSVehicleControllerFree_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MulayimStandardT.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MulayimStandardT_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// MulayimStandardT.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MulayimStandardT_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// MulayimStandardT.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void MulayimStandardT_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// navmeshsurface.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void navmeshsurface_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// navmeshsurface.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void navmeshsurface_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// navmeshsurface.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void navmeshsurface_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// NewAd.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NewAd_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// NewAd.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NewAd_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// NewAd.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NewAd_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// NewAd.ShowInterstitial
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NewAd_ShowInterstitial()
		{
			global::NewAd target = default(global::NewAd);
			target.ShowInterstitial();
			global::Ludiq.InstanceActionInvoker<NewAd> optimized = new global::Ludiq.InstanceActionInvoker<NewAd>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::NewAd));
			optimized.Invoke(default(object[]));
		}
		
		// OffScreenIndicator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OffScreenIndicator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// OffScreenIndicator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OffScreenIndicator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// OffScreenIndicator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void OffScreenIndicator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PathCreation.Examples.GeneratePathExample.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PathCreation_Examples_GeneratePathExample_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PathCreation.Examples.GeneratePathExample.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PathCreation_Examples_GeneratePathExample_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PathCreation.Examples.GeneratePathExample.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PathCreation_Examples_GeneratePathExample_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PathCreation.Examples.PathFollower.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PathCreation_Examples_PathFollower_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PathCreation.Examples.PathFollower.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PathCreation_Examples_PathFollower_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PathCreation.Examples.PathFollower.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PathCreation_Examples_PathFollower_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PathCreation.Examples.PathPlacer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PathCreation_Examples_PathPlacer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PathCreation.Examples.PathPlacer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PathCreation_Examples_PathPlacer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PathCreation.Examples.PathPlacer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PathCreation_Examples_PathPlacer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PathCreation.Examples.PathSpawner.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PathCreation_Examples_PathSpawner_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PathCreation.Examples.PathSpawner.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PathCreation_Examples_PathSpawner_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PathCreation.Examples.PathSpawner.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PathCreation_Examples_PathSpawner_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PathCreation.Examples.RoadMeshCreator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PathCreation_Examples_RoadMeshCreator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PathCreation.Examples.RoadMeshCreator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PathCreation_Examples_RoadMeshCreator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PathCreation.Examples.RoadMeshCreator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PathCreation_Examples_RoadMeshCreator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PauseMenu.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PauseMenu_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PauseMenu.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PauseMenu_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PauseMenu.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PauseMenu_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PreviewGenerator.PostProcessMergeComponent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PreviewGenerator_PostProcessMergeComponent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PreviewGenerator.PostProcessMergeComponent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PreviewGenerator_PostProcessMergeComponent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PreviewGenerator.PostProcessMergeComponent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PreviewGenerator_PostProcessMergeComponent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PreviewGeneratorComponent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PreviewGeneratorComponent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PreviewGeneratorComponent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PreviewGeneratorComponent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PreviewGeneratorComponent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PreviewGeneratorComponent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ProgressBar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ProgressBar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ProgressBar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ProgressBar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ProgressBar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ProgressBar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ProgressBarCircle.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ProgressBarCircle_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ProgressBarCircle.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ProgressBarCircle_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ProgressBarCircle.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ProgressBarCircle_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PromotionalMSVS.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PromotionalMSVS_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PromotionalMSVS.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PromotionalMSVS_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PromotionalMSVS.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PromotionalMSVS_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Readme.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Readme_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Readme.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Readme_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Readme.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Readme_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SaykoMove.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SaykoMove_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SaykoMove.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SaykoMove_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SaykoMove.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SaykoMove_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SceneAndURLLoader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SceneAndURLLoader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SceneAndURLLoader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SceneAndURLLoader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SceneAndURLLoader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SceneAndURLLoader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// scri.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void scri_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// scri.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void scri_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// scri.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void scri_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInput.GetAxis
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInput_GetAxis()
		{
			string arg0 = default(string);
			global::SimpleInput.GetAxis(arg0);
			global::Ludiq.StaticFunctionInvoker<string, float> optimized = new global::Ludiq.StaticFunctionInvoker<string, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInput.GetAxisRaw
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInput_GetAxisRaw()
		{
			string arg0 = default(string);
			global::SimpleInput.GetAxisRaw(arg0);
			global::Ludiq.StaticFunctionInvoker<string, float> optimized = new global::Ludiq.StaticFunctionInvoker<string, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInput.GetAxisSensitivity
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInput_GetAxisSensitivity()
		{
			float accessor = global::SimpleInput.GetAxisSensitivity;
			global::SimpleInput.GetAxisSensitivity = default(float);
			global::Ludiq.StaticFieldAccessor<float> optimized = new global::Ludiq.StaticFieldAccessor<float>(default(global::System.Reflection.FieldInfo));
			optimized.GetValue(null);
			optimized.SetValue(null, default(float));
		}
		
		// SimpleInput.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInput_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInput.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInput_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInput.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInput_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputKeyboard.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputKeyboard_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputKeyboard.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputKeyboard_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputKeyboard.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputKeyboard_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputMouse.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputMouse_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputMouse.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputMouse_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputMouse.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputMouse_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputMoveGesture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputMoveGesture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputMoveGesture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputMoveGesture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputMoveGesture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputMoveGesture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputPinchGesture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputPinchGesture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputPinchGesture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputPinchGesture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputPinchGesture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputPinchGesture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputRotateGesture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputRotateGesture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputRotateGesture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputRotateGesture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputRotateGesture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputRotateGesture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputSwipeGesture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputSwipeGesture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputSwipeGesture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputSwipeGesture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputSwipeGesture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputSwipeGesture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputUIArrows.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputUIArrows_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputUIArrows.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputUIArrows_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.AxisInputUIArrows.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_AxisInputUIArrows_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.ButtonInputKeyboard.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_ButtonInputKeyboard_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.ButtonInputKeyboard.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_ButtonInputKeyboard_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.ButtonInputKeyboard.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_ButtonInputKeyboard_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.ButtonInputSwipeGesture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_ButtonInputSwipeGesture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.ButtonInputSwipeGesture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_ButtonInputSwipeGesture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.ButtonInputSwipeGesture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_ButtonInputSwipeGesture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.ButtonInputUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_ButtonInputUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.ButtonInputUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_ButtonInputUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.ButtonInputUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_ButtonInputUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.Dpad.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_Dpad_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.Dpad.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_Dpad_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.Dpad.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_Dpad_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.Joystick.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_Joystick_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.Joystick.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_Joystick_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.Joystick.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_Joystick_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.KeyInputKeyboard.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_KeyInputKeyboard_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.KeyInputKeyboard.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_KeyInputKeyboard_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.KeyInputKeyboard.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_KeyInputKeyboard_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.KeyInputSwipeGesture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_KeyInputSwipeGesture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.KeyInputSwipeGesture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_KeyInputSwipeGesture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.KeyInputSwipeGesture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_KeyInputSwipeGesture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.KeyInputUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_KeyInputUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.KeyInputUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_KeyInputUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.KeyInputUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_KeyInputUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.MouseButtonInputKeyboard.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_MouseButtonInputKeyboard_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.MouseButtonInputKeyboard.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_MouseButtonInputKeyboard_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.MouseButtonInputKeyboard.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_MouseButtonInputKeyboard_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.MouseButtonInputSwipeGesture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_MouseButtonInputSwipeGesture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.MouseButtonInputSwipeGesture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_MouseButtonInputSwipeGesture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.MouseButtonInputSwipeGesture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_MouseButtonInputSwipeGesture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.MouseButtonInputUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_MouseButtonInputUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.MouseButtonInputUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_MouseButtonInputUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.MouseButtonInputUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_MouseButtonInputUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.NonDrawingGraphic.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_NonDrawingGraphic_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.NonDrawingGraphic.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_NonDrawingGraphic_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.NonDrawingGraphic.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_NonDrawingGraphic_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.SimpleInputDragListener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_SimpleInputDragListener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.SimpleInputDragListener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_SimpleInputDragListener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.SimpleInputDragListener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_SimpleInputDragListener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.SimpleInputMultiDragListener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_SimpleInputMultiDragListener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.SimpleInputMultiDragListener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_SimpleInputMultiDragListener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.SimpleInputMultiDragListener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_SimpleInputMultiDragListener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.SteeringWheel.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_SteeringWheel_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.SteeringWheel.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_SteeringWheel_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.SteeringWheel.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_SteeringWheel_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.Touchpad.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_Touchpad_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.Touchpad.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_Touchpad_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.Touchpad.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_Touchpad_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.UnityInputProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_UnityInputProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.UnityInputProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_UnityInputProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SimpleInputNamespace.UnityInputProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SimpleInputNamespace_UnityInputProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SircleCar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SircleCar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SircleCar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SircleCar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SircleCar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SircleCar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SpikeTrapDemo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SpikeTrapDemo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SpikeTrapDemo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SpikeTrapDemo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SpikeTrapDemo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SpikeTrapDemo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SpriteRenderTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SpriteRenderTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SpriteRenderTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SpriteRenderTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SpriteRenderTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SpriteRenderTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// string.Concat
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_Concat()
		{
			object arg0 = default(object);
			object arg1 = default(object);
			string.Concat(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<object, object, string> optimized = new global::Ludiq.StaticFunctionInvoker<object, object, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// string.Equals
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_Equals()
		{
			string arg0 = default(string);
			string arg1 = default(string);
			string.Equals(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<string, string, bool> optimized = new global::Ludiq.StaticFunctionInvoker<string, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// string.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_op_Equality()
		{
			string arg0 = default(string);
			string arg1 = default(string);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<string, string, bool> optimized = new global::Ludiq.StaticFunctionInvoker<string, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// string.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_op_Inequality()
		{
			string arg0 = default(string);
			string arg1 = default(string);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<string, string, bool> optimized = new global::Ludiq.StaticFunctionInvoker<string, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// System.Guid.NewGuid
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void System_Guid_NewGuid()
		{
			global::System.Guid.NewGuid();
			global::Ludiq.StaticFunctionInvoker<System.Guid> optimized = new global::Ludiq.StaticFunctionInvoker<System.Guid>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null);
			optimized.Invoke(default(object[]));
		}
		
		// System.Guid.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void System_Guid_op_Equality()
		{
			global::System.Guid arg0 = default(global::System.Guid);
			global::System.Guid arg1 = default(global::System.Guid);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<System.Guid, System.Guid, bool> optimized = new global::Ludiq.StaticFunctionInvoker<System.Guid, System.Guid, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// System.Guid.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void System_Guid_op_Inequality()
		{
			global::System.Guid arg0 = default(global::System.Guid);
			global::System.Guid arg1 = default(global::System.Guid);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<System.Guid, System.Guid, bool> optimized = new global::Ludiq.StaticFunctionInvoker<System.Guid, System.Guid, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// System.Guid.ToString
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void System_Guid_ToString()
		{
			global::System.Guid target = default(global::System.Guid);
			target.ToString();
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::System.Guid));
			optimized.Invoke(default(object[]));
		}
		
		// Target..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Target_ctor()
		{
			new Target();
		}
		
		// Target.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Target_enabled()
		{
			global::UnityEngine.Behaviour target = default(global::UnityEngine.Behaviour);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Behaviour));
			optimized.SetValue(default(global::UnityEngine.Behaviour), default(bool));
		}
		
		// Target.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Target_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Target.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Target_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Target.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Target_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TekneHareket.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TekneHareket_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TekneHareket.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TekneHareket_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TekneHareket.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TekneHareket_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TestMessage.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TestMessage_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TestMessage.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TestMessage_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TestMessage.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TestMessage_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TestMessage_Selection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TestMessage_Selection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TestMessage_Selection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TestMessage_Selection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TestMessage_Selection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TestMessage_Selection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TestScript.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TestScript_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TestScript.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TestScript_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TestScript.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TestScript_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextContainer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextContainer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextContainer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextContainer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextContainer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextContainer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshPro.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshPro_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshPro.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshPro_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshPro.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshPro_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshProUGUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshProUGUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshProUGUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshProUGUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshProUGUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshProUGUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ColorGradient.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ColorGradient_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ColorGradient.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ColorGradient_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ColorGradient.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ColorGradient_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Dropdown.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Dropdown_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Dropdown.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Dropdown_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Dropdown.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Dropdown_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_FontAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_FontAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_FontAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_FontAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_FontAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_FontAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PackageResourceImporterWindow.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PackageResourceImporterWindow_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PackageResourceImporterWindow.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PackageResourceImporterWindow_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PackageResourceImporterWindow.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PackageResourceImporterWindow_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ScrollbarEventHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ScrollbarEventHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ScrollbarEventHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ScrollbarEventHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ScrollbarEventHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ScrollbarEventHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SelectionCaret.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SelectionCaret_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SelectionCaret.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SelectionCaret_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SelectionCaret.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SelectionCaret_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Settings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Settings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Settings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Settings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Settings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Settings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAnimator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAnimator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAnimator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAnimator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAnimator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAnimator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_StyleSheet.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_StyleSheet_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_StyleSheet.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_StyleSheet_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_StyleSheet.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_StyleSheet_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMeshUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMeshUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMeshUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMeshUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMeshUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMeshUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TrapDoorDemo.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TrapDoorDemo_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TrapDoorDemo.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TrapDoorDemo_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TrapDoorDemo.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TrapDoorDemo_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UIParticleSystem.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIParticleSystem_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UIParticleSystem.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIParticleSystem_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UIParticleSystem.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UIParticleSystem_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Advertisements.Platform.Editor.BannerPlaceholder.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Advertisements_Platform_Editor_BannerPlaceholder_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Advertisements.Platform.Editor.BannerPlaceholder.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Advertisements_Platform_Editor_BannerPlaceholder_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Advertisements.Platform.Editor.BannerPlaceholder.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Advertisements_Platform_Editor_BannerPlaceholder_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMesh.Raycast
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMesh_Raycast()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			global::UnityEngine.AI.NavMeshHit arg2 = default(global::UnityEngine.AI.NavMeshHit);
			global::UnityEngine.AI.NavMeshQueryFilter arg3 = default(global::UnityEngine.AI.NavMeshQueryFilter);
			global::UnityEngine.AI.NavMesh.Raycast(arg0, arg1, out arg2, arg3);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMesh.SamplePosition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMesh_SamplePosition()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.AI.NavMeshHit arg1 = default(global::UnityEngine.AI.NavMeshHit);
			float arg2 = default(float);
			int arg3 = default(int);
			global::UnityEngine.AI.NavMesh.SamplePosition(arg0, out arg1, arg2, arg3);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshAgent.areaMask
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_areaMask()
		{
			global::UnityEngine.AI.NavMeshAgent target = default(global::UnityEngine.AI.NavMeshAgent);
			int accessor = target.areaMask;
			target.areaMask = default(int);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, int> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, int>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.AI.NavMeshAgent));
			optimized.SetValue(default(global::UnityEngine.AI.NavMeshAgent), default(int));
		}
		
		// UnityEngine.AI.NavMeshAgent.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_enabled()
		{
			global::UnityEngine.Behaviour target = default(global::UnityEngine.Behaviour);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Behaviour));
			optimized.SetValue(default(global::UnityEngine.Behaviour), default(bool));
		}
		
		// UnityEngine.AI.NavMeshAgent.isStopped
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_isStopped()
		{
			global::UnityEngine.AI.NavMeshAgent target = default(global::UnityEngine.AI.NavMeshAgent);
			bool accessor = target.isStopped;
			target.isStopped = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.AI.NavMeshAgent));
			optimized.SetValue(default(global::UnityEngine.AI.NavMeshAgent), default(bool));
		}
		
		// UnityEngine.AI.NavMeshAgent.obstacleAvoidanceType
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_obstacleAvoidanceType()
		{
			global::UnityEngine.AI.NavMeshAgent target = default(global::UnityEngine.AI.NavMeshAgent);
			global::UnityEngine.AI.ObstacleAvoidanceType accessor = target.obstacleAvoidanceType;
			target.obstacleAvoidanceType = default(global::UnityEngine.AI.ObstacleAvoidanceType);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, UnityEngine.AI.ObstacleAvoidanceType> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, UnityEngine.AI.ObstacleAvoidanceType>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.AI.NavMeshAgent));
			optimized.SetValue(default(global::UnityEngine.AI.NavMeshAgent), default(global::UnityEngine.AI.ObstacleAvoidanceType));
		}
		
		// UnityEngine.AI.NavMeshAgent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshAgent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshAgent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshAgent.pathPending
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_pathPending()
		{
			global::UnityEngine.AI.NavMeshAgent target = default(global::UnityEngine.AI.NavMeshAgent);
			bool accessor = target.pathPending;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.AI.NavMeshAgent));
		}
		
		// UnityEngine.AI.NavMeshAgent.remainingDistance
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_remainingDistance()
		{
			global::UnityEngine.AI.NavMeshAgent target = default(global::UnityEngine.AI.NavMeshAgent);
			float accessor = target.remainingDistance;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, float> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.AI.NavMeshAgent));
		}
		
		// UnityEngine.AI.NavMeshAgent.SetDestination
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_SetDestination()
		{
			global::UnityEngine.AI.NavMeshAgent target = default(global::UnityEngine.AI.NavMeshAgent);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.SetDestination(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.AI.NavMeshAgent, UnityEngine.Vector3, bool> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.AI.NavMeshAgent, UnityEngine.Vector3, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.AI.NavMeshAgent), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshAgent.SetPath
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_SetPath()
		{
			global::UnityEngine.AI.NavMeshAgent target = default(global::UnityEngine.AI.NavMeshAgent);
			global::UnityEngine.AI.NavMeshPath arg0 = default(global::UnityEngine.AI.NavMeshPath);
			target.SetPath(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.AI.NavMeshAgent, UnityEngine.AI.NavMeshPath, bool> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.AI.NavMeshAgent, UnityEngine.AI.NavMeshPath, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.AI.NavMeshAgent), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshAgent.speed
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_speed()
		{
			global::UnityEngine.AI.NavMeshAgent target = default(global::UnityEngine.AI.NavMeshAgent);
			float accessor = target.speed;
			target.speed = default(float);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, float> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.AI.NavMeshAgent));
			optimized.SetValue(default(global::UnityEngine.AI.NavMeshAgent), default(float));
		}
		
		// UnityEngine.AI.NavMeshAgent.steeringTarget
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_steeringTarget()
		{
			global::UnityEngine.AI.NavMeshAgent target = default(global::UnityEngine.AI.NavMeshAgent);
			global::UnityEngine.Vector3 accessor = target.steeringTarget;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.AI.NavMeshAgent));
		}
		
		// UnityEngine.AI.NavMeshAgent.updateRotation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_updateRotation()
		{
			global::UnityEngine.AI.NavMeshAgent target = default(global::UnityEngine.AI.NavMeshAgent);
			bool accessor = target.updateRotation;
			target.updateRotation = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.AI.NavMeshAgent));
			optimized.SetValue(default(global::UnityEngine.AI.NavMeshAgent), default(bool));
		}
		
		// UnityEngine.AI.NavMeshAgent.velocity
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_velocity()
		{
			global::UnityEngine.AI.NavMeshAgent target = default(global::UnityEngine.AI.NavMeshAgent);
			global::UnityEngine.Vector3 accessor = target.velocity;
			target.velocity = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.AI.NavMeshAgent, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.AI.NavMeshAgent));
			optimized.SetValue(default(global::UnityEngine.AI.NavMeshAgent), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.AI.NavMeshAgent.Warp
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshAgent_Warp()
		{
			global::UnityEngine.AI.NavMeshAgent target = default(global::UnityEngine.AI.NavMeshAgent);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.Warp(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.AI.NavMeshAgent, UnityEngine.Vector3, bool> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.AI.NavMeshAgent, UnityEngine.Vector3, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.AI.NavMeshAgent), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshData.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshData_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshData.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshData_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshData.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshData_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshHit.position
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshHit_position()
		{
			global::UnityEngine.AI.NavMeshHit target = default(global::UnityEngine.AI.NavMeshHit);
			global::UnityEngine.Vector3 accessor = target.position;
			target.position = default(global::UnityEngine.Vector3);
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.AI.NavMeshHit));
			optimized.SetValue(default(global::UnityEngine.AI.NavMeshHit), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.AI.NavMeshObstacle.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshObstacle_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshObstacle.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshObstacle_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.NavMeshObstacle.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_NavMeshObstacle_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.OffMeshLink.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_OffMeshLink_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.OffMeshLink.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_OffMeshLink_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AI.OffMeshLink.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AI_OffMeshLink_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnchoredJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnchoredJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnchoredJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnchoredJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnchoredJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnchoredJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animation.Play
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animation_Play()
		{
			global::UnityEngine.Animation target = default(global::UnityEngine.Animation);
			target.Play();
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Animation, bool> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Animation, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Animation));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimationClip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimationClip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimationClip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimationClip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimationClip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimationClip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.AimConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.AimConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.AimConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.LookAtConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_LookAtConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.LookAtConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_LookAtConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.LookAtConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_LookAtConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ParentConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ParentConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ParentConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.PositionConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.PositionConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.PositionConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.RotationConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_RotationConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.RotationConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_RotationConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.RotationConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_RotationConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ScaleConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ScaleConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ScaleConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ScaleConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ScaleConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ScaleConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.Play
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_Play()
		{
			global::UnityEngine.Animator target = default(global::UnityEngine.Animator);
			string arg0 = default(string);
			target.Play(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Animator), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.ResetTrigger
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_ResetTrigger()
		{
			global::UnityEngine.Animator target = default(global::UnityEngine.Animator);
			string arg0 = default(string);
			target.ResetTrigger(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Animator), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.SetBool
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_SetBool()
		{
			global::UnityEngine.Animator target = default(global::UnityEngine.Animator);
			string arg0 = default(string);
			bool arg1 = default(bool);
			target.SetBool(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string, bool> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Animator), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.SetFloat
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_SetFloat()
		{
			global::UnityEngine.Animator target = default(global::UnityEngine.Animator);
			string arg0 = default(string);
			float arg1 = default(float);
			target.SetFloat(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string, float> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Animator), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.SetTrigger
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_SetTrigger()
		{
			global::UnityEngine.Animator target = default(global::UnityEngine.Animator);
			string arg0 = default(string);
			target.SetTrigger(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Animator), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimatorOverrideController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimatorOverrideController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimatorOverrideController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimatorOverrideController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimatorOverrideController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimatorOverrideController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Application.Quit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Application_Quit()
		{
			global::UnityEngine.Application.Quit();
			global::Ludiq.StaticActionInvoker optimized = new global::Ludiq.StaticActionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Application.targetFrameRate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Application_targetFrameRate()
		{
			int accessor = global::UnityEngine.Application.targetFrameRate;
			global::UnityEngine.Application.targetFrameRate = default(int);
			global::Ludiq.StaticPropertyAccessor<int> optimized = new global::Ludiq.StaticPropertyAccessor<int>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
			optimized.SetValue(null, default(int));
		}
		
		// UnityEngine.AreaEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AreaEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AreaEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AreaEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AreaEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AreaEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundle.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundle_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundle.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundle_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundle.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundle_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundleManifest.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundleManifest_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundleManifest.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundleManifest_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AssetBundleManifest.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AssetBundleManifest_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerSnapshot.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerSnapshot.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerSnapshot.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioBehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioBehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioBehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioBehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioBehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioBehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioChorusFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioChorusFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioChorusFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioChorusFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioChorusFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioChorusFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioClip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioClip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioClip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioClip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioClip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioClip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioDistortionFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioDistortionFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioDistortionFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioDistortionFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioDistortionFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioDistortionFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioEchoFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioEchoFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioEchoFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioEchoFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioEchoFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioEchoFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioHighPassFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioHighPassFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioHighPassFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioHighPassFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioHighPassFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioHighPassFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioListener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioListener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioListener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioListener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioListener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioListener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioLowPassFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioLowPassFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioLowPassFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioLowPassFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioLowPassFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioLowPassFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbZone.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbZone_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbZone.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbZone_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbZone.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbZone_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_ctor()
		{
			new UnityEngine.AudioSource();
		}
		
		// UnityEngine.AudioSource.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.Pause
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_Pause()
		{
			global::UnityEngine.AudioSource target = default(global::UnityEngine.AudioSource);
			target.Pause();
			global::Ludiq.InstanceActionInvoker<UnityEngine.AudioSource> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.AudioSource>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.AudioSource));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.pitch
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_pitch()
		{
			global::UnityEngine.AudioSource target = default(global::UnityEngine.AudioSource);
			float accessor = target.pitch;
			target.pitch = default(float);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.AudioSource, float> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.AudioSource, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.AudioSource));
			optimized.SetValue(default(global::UnityEngine.AudioSource), default(float));
		}
		
		// UnityEngine.AudioSource.Play
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_Play()
		{
			global::UnityEngine.AudioSource target = default(global::UnityEngine.AudioSource);
			target.Play();
			global::Ludiq.InstanceActionInvoker<UnityEngine.AudioSource> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.AudioSource>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.AudioSource));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.PlayOneShot
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_PlayOneShot()
		{
			global::UnityEngine.AudioSource target = default(global::UnityEngine.AudioSource);
			global::UnityEngine.AudioClip arg0 = default(global::UnityEngine.AudioClip);
			target.PlayOneShot(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.AudioSource, UnityEngine.AudioClip> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.AudioSource, UnityEngine.AudioClip>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.AudioSource), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.PlayOneShot
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_PlayOneShot_0()
		{
			global::UnityEngine.AudioSource target = default(global::UnityEngine.AudioSource);
			global::UnityEngine.AudioClip arg0 = default(global::UnityEngine.AudioClip);
			float arg1 = default(float);
			target.PlayOneShot(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.AudioSource, UnityEngine.AudioClip, float> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.AudioSource, UnityEngine.AudioClip, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.AudioSource), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.Stop
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_Stop()
		{
			global::UnityEngine.AudioSource target = default(global::UnityEngine.AudioSource);
			target.Stop();
			global::Ludiq.InstanceActionInvoker<UnityEngine.AudioSource> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.AudioSource>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.AudioSource));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Avatar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Avatar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Avatar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Avatar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Avatar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Avatar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AvatarMask.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AvatarMask_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AvatarMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AvatarMask_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AvatarMask.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AvatarMask_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Behaviour.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Behaviour_enabled()
		{
			global::UnityEngine.Behaviour target = default(global::UnityEngine.Behaviour);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Behaviour));
			optimized.SetValue(default(global::UnityEngine.Behaviour), default(bool));
		}
		
		// UnityEngine.Behaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Behaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Behaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Behaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Behaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Behaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Bounds.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Bounds_op_Equality()
		{
			global::UnityEngine.Bounds arg0 = default(global::UnityEngine.Bounds);
			global::UnityEngine.Bounds arg1 = default(global::UnityEngine.Bounds);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Bounds.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Bounds_op_Inequality()
		{
			global::UnityEngine.Bounds arg0 = default(global::UnityEngine.Bounds);
			global::UnityEngine.Bounds arg1 = default(global::UnityEngine.Bounds);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_ctor()
		{
			new UnityEngine.BoxCollider();
		}
		
		// UnityEngine.BoxCollider.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_enabled()
		{
			global::UnityEngine.Collider target = default(global::UnityEngine.Collider);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Collider));
			optimized.SetValue(default(global::UnityEngine.Collider), default(bool));
		}
		
		// UnityEngine.BoxCollider.isTrigger
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_isTrigger()
		{
			global::UnityEngine.Collider target = default(global::UnityEngine.Collider);
			bool accessor = target.isTrigger;
			target.isTrigger = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Collider));
			optimized.SetValue(default(global::UnityEngine.Collider), default(bool));
		}
		
		// UnityEngine.BoxCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BoxCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BoxCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BuoyancyEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BuoyancyEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BuoyancyEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BuoyancyEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BuoyancyEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BuoyancyEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_ctor()
		{
			new UnityEngine.Camera();
		}
		
		// UnityEngine.Camera.fieldOfView
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_fieldOfView()
		{
			global::UnityEngine.Camera target = default(global::UnityEngine.Camera);
			float accessor = target.fieldOfView;
			target.fieldOfView = default(float);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Camera, float> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Camera, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Camera));
			optimized.SetValue(default(global::UnityEngine.Camera), default(float));
		}
		
		// UnityEngine.Camera.main
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_main()
		{
			global::UnityEngine.Camera accessor = global::UnityEngine.Camera.main;
			global::Ludiq.StaticPropertyAccessor<UnityEngine.Camera> optimized = new global::Ludiq.StaticPropertyAccessor<UnityEngine.Camera>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
		}
		
		// UnityEngine.Camera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera.ScreenPointToRay
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_ScreenPointToRay()
		{
			global::UnityEngine.Camera target = default(global::UnityEngine.Camera);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.ScreenPointToRay(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Camera, UnityEngine.Vector3, UnityEngine.Ray> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Camera, UnityEngine.Vector3, UnityEngine.Ray>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Camera), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera.ScreenToWorldPoint
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_ScreenToWorldPoint()
		{
			global::UnityEngine.Camera target = default(global::UnityEngine.Camera);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.ScreenToWorldPoint(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Camera, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Camera, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Camera), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Canvas..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Canvas_ctor()
		{
			new UnityEngine.Canvas();
		}
		
		// UnityEngine.Canvas.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Canvas_enabled()
		{
			global::UnityEngine.Behaviour target = default(global::UnityEngine.Behaviour);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Behaviour));
			optimized.SetValue(default(global::UnityEngine.Behaviour), default(bool));
		}
		
		// UnityEngine.Canvas.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Canvas_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Canvas.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Canvas_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Canvas.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Canvas_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasGroup..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasGroup_ctor()
		{
			new UnityEngine.CanvasGroup();
		}
		
		// UnityEngine.CanvasGroup.alpha
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasGroup_alpha()
		{
			global::UnityEngine.CanvasGroup target = default(global::UnityEngine.CanvasGroup);
			float accessor = target.alpha;
			target.alpha = default(float);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.CanvasGroup, float> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.CanvasGroup, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.CanvasGroup));
			optimized.SetValue(default(global::UnityEngine.CanvasGroup), default(float));
		}
		
		// UnityEngine.CanvasGroup.blocksRaycasts
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasGroup_blocksRaycasts()
		{
			global::UnityEngine.CanvasGroup target = default(global::UnityEngine.CanvasGroup);
			bool accessor = target.blocksRaycasts;
			target.blocksRaycasts = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.CanvasGroup, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.CanvasGroup, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.CanvasGroup));
			optimized.SetValue(default(global::UnityEngine.CanvasGroup), default(bool));
		}
		
		// UnityEngine.CanvasGroup.interactable
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasGroup_interactable()
		{
			global::UnityEngine.CanvasGroup target = default(global::UnityEngine.CanvasGroup);
			bool accessor = target.interactable;
			target.interactable = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.CanvasGroup, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.CanvasGroup, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.CanvasGroup));
			optimized.SetValue(default(global::UnityEngine.CanvasGroup), default(bool));
		}
		
		// UnityEngine.CanvasGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CanvasRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CanvasRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CapsuleCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CapsuleCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterController.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterController_enabled()
		{
			global::UnityEngine.Collider target = default(global::UnityEngine.Collider);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Collider));
			optimized.SetValue(default(global::UnityEngine.Collider), default(bool));
		}
		
		// UnityEngine.CharacterController.isGrounded
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterController_isGrounded()
		{
			global::UnityEngine.CharacterController target = default(global::UnityEngine.CharacterController);
			bool accessor = target.isGrounded;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.CharacterController, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.CharacterController, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.CharacterController));
		}
		
		// UnityEngine.CharacterController.Move
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterController_Move()
		{
			global::UnityEngine.CharacterController target = default(global::UnityEngine.CharacterController);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.Move(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.CharacterController, UnityEngine.Vector3, UnityEngine.CollisionFlags> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.CharacterController, UnityEngine.Vector3, UnityEngine.CollisionFlags>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.CharacterController), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterController.velocity
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterController_velocity()
		{
			global::UnityEngine.CharacterController target = default(global::UnityEngine.CharacterController);
			global::UnityEngine.Vector3 accessor = target.velocity;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.CharacterController, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.CharacterController, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.CharacterController));
		}
		
		// UnityEngine.CharacterJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CharacterJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CharacterJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CircleCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CircleCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CircleCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CircleCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CircleCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CircleCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cloth.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cloth_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cloth.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cloth_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cloth.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cloth_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider.attachedRigidbody
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_attachedRigidbody()
		{
			global::UnityEngine.Collider target = default(global::UnityEngine.Collider);
			global::UnityEngine.Rigidbody accessor = target.attachedRigidbody;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, UnityEngine.Rigidbody> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, UnityEngine.Rigidbody>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Collider));
		}
		
		// UnityEngine.Collider.bounds
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_bounds()
		{
			global::UnityEngine.Collider target = default(global::UnityEngine.Collider);
			global::UnityEngine.Bounds accessor = target.bounds;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, UnityEngine.Bounds> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, UnityEngine.Bounds>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Collider));
		}
		
		// UnityEngine.Collider.contactOffset
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_contactOffset()
		{
			global::UnityEngine.Collider target = default(global::UnityEngine.Collider);
			float accessor = target.contactOffset;
			target.contactOffset = default(float);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, float> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Collider));
			optimized.SetValue(default(global::UnityEngine.Collider), default(float));
		}
		
		// UnityEngine.Collider.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_enabled()
		{
			global::UnityEngine.Collider target = default(global::UnityEngine.Collider);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Collider));
			optimized.SetValue(default(global::UnityEngine.Collider), default(bool));
		}
		
		// UnityEngine.Collider.gameObject
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_gameObject()
		{
			global::UnityEngine.Component target = default(global::UnityEngine.Component);
			global::UnityEngine.GameObject accessor = target.gameObject;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Component, UnityEngine.GameObject> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Component, UnityEngine.GameObject>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Component));
		}
		
		// UnityEngine.Collider.hideFlags
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_hideFlags()
		{
			global::UnityEngine.Object target = default(global::UnityEngine.Object);
			global::UnityEngine.HideFlags accessor = target.hideFlags;
			target.hideFlags = default(global::UnityEngine.HideFlags);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Object, UnityEngine.HideFlags> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Object, UnityEngine.HideFlags>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Object));
			optimized.SetValue(default(global::UnityEngine.Object), default(global::UnityEngine.HideFlags));
		}
		
		// UnityEngine.Collider.isTrigger
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_isTrigger()
		{
			global::UnityEngine.Collider target = default(global::UnityEngine.Collider);
			bool accessor = target.isTrigger;
			target.isTrigger = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Collider));
			optimized.SetValue(default(global::UnityEngine.Collider), default(bool));
		}
		
		// UnityEngine.Collider.material
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_material()
		{
			global::UnityEngine.Collider target = default(global::UnityEngine.Collider);
			global::UnityEngine.PhysicMaterial accessor = target.material;
			target.material = default(global::UnityEngine.PhysicMaterial);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, UnityEngine.PhysicMaterial> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, UnityEngine.PhysicMaterial>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Collider));
			optimized.SetValue(default(global::UnityEngine.Collider), default(global::UnityEngine.PhysicMaterial));
		}
		
		// UnityEngine.Collider.name
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_name()
		{
			global::UnityEngine.Object target = default(global::UnityEngine.Object);
			string accessor = target.name;
			target.name = default(string);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Object, string> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Object, string>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Object));
			optimized.SetValue(default(global::UnityEngine.Object), default(string));
		}
		
		// UnityEngine.Collider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider.sharedMaterial
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_sharedMaterial()
		{
			global::UnityEngine.Collider target = default(global::UnityEngine.Collider);
			global::UnityEngine.PhysicMaterial accessor = target.sharedMaterial;
			target.sharedMaterial = default(global::UnityEngine.PhysicMaterial);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, UnityEngine.PhysicMaterial> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, UnityEngine.PhysicMaterial>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Collider));
			optimized.SetValue(default(global::UnityEngine.Collider), default(global::UnityEngine.PhysicMaterial));
		}
		
		// UnityEngine.Collider.tag
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_tag()
		{
			global::UnityEngine.Component target = default(global::UnityEngine.Component);
			string accessor = target.tag;
			target.tag = default(string);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Component, string> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Component, string>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Component));
			optimized.SetValue(default(global::UnityEngine.Component), default(string));
		}
		
		// UnityEngine.Collider.transform
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider_transform()
		{
			global::UnityEngine.Component target = default(global::UnityEngine.Component);
			global::UnityEngine.Transform accessor = target.transform;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Component, UnityEngine.Transform> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Component, UnityEngine.Transform>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Component));
		}
		
		// UnityEngine.Collider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Collider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Collider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Addition()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 + arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Division()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			float arg1 = default(float);
			UnityEngine.Color @operator = (arg0 / arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Equality()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Implicit()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			UnityEngine.Vector4 conversion = ((UnityEngine.Vector4)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Implicit_0()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			UnityEngine.Color conversion = ((UnityEngine.Color)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Inequality()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Multiply()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Multiply_0()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			float arg1 = default(float);
			UnityEngine.Color @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Multiply_1()
		{
			float arg0 = default(float);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Color, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Subtraction()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 - arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.gameObject
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_gameObject()
		{
			global::UnityEngine.Component target = default(global::UnityEngine.Component);
			global::UnityEngine.GameObject accessor = target.gameObject;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Component, UnityEngine.GameObject> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Component, UnityEngine.GameObject>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Component));
		}
		
		// UnityEngine.Component.GetComponent
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_GetComponent()
		{
			global::UnityEngine.Component target = default(global::UnityEngine.Component);
			global::System.Type arg0 = default(global::System.Type);
			target.GetComponent(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Component, System.Type, UnityEngine.Component> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Component, System.Type, UnityEngine.Component>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Component), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CompositeCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CompositeCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CompositeCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CompositeCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CompositeCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CompositeCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ComputeShader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ComputeShader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ComputeShader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ComputeShader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ComputeShader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ComputeShader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConfigurableJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConfigurableJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConfigurableJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConfigurableJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConfigurableJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConfigurableJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ConstantForce2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ConstantForce2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cubemap.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cubemap_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cubemap.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cubemap_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cubemap.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cubemap_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CubemapArray.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CubemapArray_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CubemapArray.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CubemapArray_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CubemapArray.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CubemapArray_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomRenderTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomRenderTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomRenderTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomRenderTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomRenderTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomRenderTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Debug.DrawRay
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Debug_DrawRay()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Color arg2 = default(global::UnityEngine.Color);
			global::UnityEngine.Debug.DrawRay(arg0, arg1, arg2);
			global::Ludiq.StaticActionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color> optimized = new global::Ludiq.StaticActionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.DistanceJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_DistanceJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.DistanceJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_DistanceJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.DistanceJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_DistanceJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EdgeCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EdgeCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EdgeCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EdgeCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EdgeCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EdgeCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Effector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Effector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Effector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Effector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Effector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Effector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInput.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInput_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInput.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInput_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInput.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInput_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventSystem.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventSystem_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventSystem.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventSystem_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventSystem.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventSystem_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventTrigger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventTrigger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventTrigger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventTrigger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventTrigger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventTrigger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.Physics2DRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.Physics2DRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.Physics2DRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PhysicsRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PhysicsRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PhysicsRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.StandaloneInputModule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.StandaloneInputModule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.StandaloneInputModule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Experimental.Rendering.RayTracingShader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Experimental.Rendering.RayTracingShader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Experimental.Rendering.RayTracingShader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FixedJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FixedJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Flare.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Flare_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Flare.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Flare_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Flare.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Flare_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FlareLayer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FlareLayer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FlareLayer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FlareLayer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FlareLayer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FlareLayer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Font.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Font_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Font.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Font_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Font.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Font_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FrictionJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FrictionJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FrictionJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FrictionJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FrictionJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FrictionJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_ctor()
		{
			new UnityEngine.GameObject();
		}
		
		// UnityEngine.GameObject.activeSelf
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_activeSelf()
		{
			global::UnityEngine.GameObject target = default(global::UnityEngine.GameObject);
			bool accessor = target.activeSelf;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.GameObject, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.GameObject, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.GameObject));
		}
		
		// UnityEngine.GameObject.CompareTag
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_CompareTag()
		{
			global::UnityEngine.GameObject target = default(global::UnityEngine.GameObject);
			string arg0 = default(string);
			target.CompareTag(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.GameObject, string, bool> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.GameObject, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.GameObject), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.Destroy
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_Destroy()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object.Destroy(arg0);
			global::Ludiq.StaticActionInvoker<UnityEngine.Object> optimized = new global::Ludiq.StaticActionInvoker<UnityEngine.Object>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.Destroy
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_Destroy_0()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			float arg1 = default(float);
			global::UnityEngine.Object.Destroy(arg0, arg1);
			global::Ludiq.StaticActionInvoker<UnityEngine.Object, float> optimized = new global::Ludiq.StaticActionInvoker<UnityEngine.Object, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.FindGameObjectWithTag
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_FindGameObjectWithTag()
		{
			string arg0 = default(string);
			global::UnityEngine.GameObject.FindGameObjectWithTag(arg0);
			global::Ludiq.StaticFunctionInvoker<string, UnityEngine.GameObject> optimized = new global::Ludiq.StaticFunctionInvoker<string, UnityEngine.GameObject>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.FindWithTag
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_FindWithTag()
		{
			string arg0 = default(string);
			global::UnityEngine.GameObject.FindWithTag(arg0);
			global::Ludiq.StaticFunctionInvoker<string, UnityEngine.GameObject> optimized = new global::Ludiq.StaticFunctionInvoker<string, UnityEngine.GameObject>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.gameObject
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_gameObject()
		{
			global::UnityEngine.GameObject target = default(global::UnityEngine.GameObject);
			global::UnityEngine.GameObject accessor = target.gameObject;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.GameObject, UnityEngine.GameObject> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.GameObject, UnityEngine.GameObject>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.GameObject));
		}
		
		// UnityEngine.GameObject.Instantiate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_Instantiate()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object.Instantiate(arg0);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.Instantiate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_Instantiate_0()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Quaternion arg2 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Object.Instantiate(arg0, arg1, arg2);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Object> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Object>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.layer
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_layer()
		{
			global::UnityEngine.GameObject target = default(global::UnityEngine.GameObject);
			int accessor = target.layer;
			target.layer = default(int);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.GameObject, int> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.GameObject, int>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.GameObject));
			optimized.SetValue(default(global::UnityEngine.GameObject), default(int));
		}
		
		// UnityEngine.GameObject.name
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_name()
		{
			global::UnityEngine.Object target = default(global::UnityEngine.Object);
			string accessor = target.name;
			target.name = default(string);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Object, string> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Object, string>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Object));
			optimized.SetValue(default(global::UnityEngine.Object), default(string));
		}
		
		// UnityEngine.GameObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.SetActive
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_SetActive()
		{
			global::UnityEngine.GameObject target = default(global::UnityEngine.GameObject);
			bool arg0 = default(bool);
			target.SetActive(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.GameObject, bool> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.GameObject, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.GameObject), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.tag
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_tag()
		{
			global::UnityEngine.GameObject target = default(global::UnityEngine.GameObject);
			string accessor = target.tag;
			target.tag = default(string);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.GameObject, string> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.GameObject, string>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.GameObject));
			optimized.SetValue(default(global::UnityEngine.GameObject), default(string));
		}
		
		// UnityEngine.GUISkin.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GUISkin_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GUISkin.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GUISkin_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GUISkin.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GUISkin_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Gyroscope.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Gyroscope_enabled()
		{
			global::UnityEngine.Gyroscope target = default(global::UnityEngine.Gyroscope);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Gyroscope, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Gyroscope, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Gyroscope));
			optimized.SetValue(default(global::UnityEngine.Gyroscope), default(bool));
		}
		
		// UnityEngine.Gyroscope.rotationRateUnbiased
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Gyroscope_rotationRateUnbiased()
		{
			global::UnityEngine.Gyroscope target = default(global::UnityEngine.Gyroscope);
			global::UnityEngine.Vector3 accessor = target.rotationRateUnbiased;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Gyroscope, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Gyroscope, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Gyroscope));
		}
		
		// UnityEngine.HingeJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.HingeJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_HingeJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Input.acceleration
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Input_acceleration()
		{
			global::UnityEngine.Vector3 accessor = global::UnityEngine.Input.acceleration;
			global::Ludiq.StaticPropertyAccessor<UnityEngine.Vector3> optimized = new global::Ludiq.StaticPropertyAccessor<UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
		}
		
		// UnityEngine.Input.GetTouch
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Input_GetTouch()
		{
			int arg0 = default(int);
			global::UnityEngine.Input.GetTouch(arg0);
			global::Ludiq.StaticFunctionInvoker<int, UnityEngine.Touch> optimized = new global::Ludiq.StaticFunctionInvoker<int, UnityEngine.Touch>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Input.gyro
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Input_gyro()
		{
			global::UnityEngine.Gyroscope accessor = global::UnityEngine.Input.gyro;
			global::Ludiq.StaticPropertyAccessor<UnityEngine.Gyroscope> optimized = new global::Ludiq.StaticPropertyAccessor<UnityEngine.Gyroscope>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
		}
		
		// UnityEngine.Input.mousePosition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Input_mousePosition()
		{
			global::UnityEngine.Vector3 accessor = global::UnityEngine.Input.mousePosition;
			global::Ludiq.StaticPropertyAccessor<UnityEngine.Vector3> optimized = new global::Ludiq.StaticPropertyAccessor<UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
		}
		
		// UnityEngine.Input.touchCount
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Input_touchCount()
		{
			int accessor = global::UnityEngine.Input.touchCount;
			global::Ludiq.StaticPropertyAccessor<int> optimized = new global::Ludiq.StaticPropertyAccessor<int>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
		}
		
		// UnityEngine.Joint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Joint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Joint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LayerMask.NameToLayer
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LayerMask_NameToLayer()
		{
			string arg0 = default(string);
			global::UnityEngine.LayerMask.NameToLayer(arg0);
			global::Ludiq.StaticFunctionInvoker<string, int> optimized = new global::Ludiq.StaticFunctionInvoker<string, int>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LayerMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LayerMask_op_Implicit()
		{
			global::UnityEngine.LayerMask arg0 = default(global::UnityEngine.LayerMask);
			int conversion = ((int)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.LayerMask, int> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.LayerMask, int>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LayerMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LayerMask_op_Implicit_0()
		{
			int arg0 = default(int);
			UnityEngine.LayerMask conversion = ((UnityEngine.LayerMask)(arg0));
			global::Ludiq.StaticFunctionInvoker<int, UnityEngine.LayerMask> optimized = new global::Ludiq.StaticFunctionInvoker<int, UnityEngine.LayerMask>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LensFlare.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LensFlare_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LensFlare.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LensFlare_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LensFlare.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LensFlare_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Light.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Light_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Light.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Light_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Light.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Light_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightmapSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightmapSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightmapSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightmapSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightmapSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightmapSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeProxyVolume.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeProxyVolume_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeProxyVolume.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeProxyVolume_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeProxyVolume.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeProxyVolume_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbes.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbes_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbes.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbes_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbes.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbes_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LineRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LineRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LineRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LineRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LineRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LineRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LineRenderer.SetPosition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LineRenderer_SetPosition()
		{
			global::UnityEngine.LineRenderer target = default(global::UnityEngine.LineRenderer);
			int arg0 = default(int);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			target.SetPosition(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.LineRenderer, int, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.LineRenderer, int, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.LineRenderer), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LODGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LODGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LODGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LODGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LODGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LODGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Material.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Material.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Material.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mathf.Clamp
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mathf_Clamp()
		{
			int arg0 = default(int);
			int arg1 = default(int);
			int arg2 = default(int);
			global::UnityEngine.Mathf.Clamp(arg0, arg1, arg2);
			global::Ludiq.StaticFunctionInvoker<int, int, int, int> optimized = new global::Ludiq.StaticFunctionInvoker<int, int, int, int>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mathf.Clamp
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mathf_Clamp_0()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			float arg2 = default(float);
			global::UnityEngine.Mathf.Clamp(arg0, arg1, arg2);
			global::Ludiq.StaticFunctionInvoker<float, float, float, float> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, float, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mathf.RoundToInt
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mathf_RoundToInt()
		{
			float arg0 = default(float);
			global::UnityEngine.Mathf.RoundToInt(arg0);
			global::Ludiq.StaticFunctionInvoker<float, int> optimized = new global::Ludiq.StaticFunctionInvoker<float, int>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Equality()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Matrix4x4 arg1 = default(global::UnityEngine.Matrix4x4);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Inequality()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Matrix4x4 arg1 = default(global::UnityEngine.Matrix4x4);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Multiply()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Matrix4x4 arg1 = default(global::UnityEngine.Matrix4x4);
			UnityEngine.Matrix4x4 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, UnityEngine.Matrix4x4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, UnityEngine.Matrix4x4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Multiply_0()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshCollider..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshCollider_ctor()
		{
			new UnityEngine.MeshCollider();
		}
		
		// UnityEngine.MeshCollider.convex
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshCollider_convex()
		{
			global::UnityEngine.MeshCollider target = default(global::UnityEngine.MeshCollider);
			bool accessor = target.convex;
			target.convex = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.MeshCollider, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.MeshCollider, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.MeshCollider));
			optimized.SetValue(default(global::UnityEngine.MeshCollider), default(bool));
		}
		
		// UnityEngine.MeshCollider.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshCollider_enabled()
		{
			global::UnityEngine.Collider target = default(global::UnityEngine.Collider);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Collider));
			optimized.SetValue(default(global::UnityEngine.Collider), default(bool));
		}
		
		// UnityEngine.MeshCollider.isTrigger
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshCollider_isTrigger()
		{
			global::UnityEngine.Collider target = default(global::UnityEngine.Collider);
			bool accessor = target.isTrigger;
			target.isTrigger = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Collider, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Collider));
			optimized.SetValue(default(global::UnityEngine.Collider), default(bool));
		}
		
		// UnityEngine.MeshCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MonoBehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MonoBehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MonoBehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MonoBehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MonoBehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MonoBehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MonoBehaviour.StopAllCoroutines
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MonoBehaviour_StopAllCoroutines()
		{
			global::UnityEngine.MonoBehaviour target = default(global::UnityEngine.MonoBehaviour);
			target.StopAllCoroutines();
			global::Ludiq.InstanceActionInvoker<UnityEngine.MonoBehaviour> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.MonoBehaviour>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.MonoBehaviour));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Motion.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Motion_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Motion.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Motion_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Motion.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Motion_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_ctor()
		{
			new UnityEngine.Object();
		}
		
		// UnityEngine.Object.Destroy
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_Destroy()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object.Destroy(arg0);
			global::Ludiq.StaticActionInvoker<UnityEngine.Object> optimized = new global::Ludiq.StaticActionInvoker<UnityEngine.Object>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object.Destroy
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_Destroy_0()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			float arg1 = default(float);
			global::UnityEngine.Object.Destroy(arg0, arg1);
			global::Ludiq.StaticActionInvoker<UnityEngine.Object, float> optimized = new global::Ludiq.StaticActionInvoker<UnityEngine.Object, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object.Instantiate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_Instantiate()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object.Instantiate(arg0);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object.Instantiate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_Instantiate_0()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Quaternion arg2 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Object.Instantiate(arg0, arg1, arg2);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Object> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Object>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionArea.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionArea_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionArea.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionArea_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionArea.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionArea_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionPortal.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionPortal_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionPortal.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionPortal_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionPortal.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionPortal_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_ctor()
		{
			new UnityEngine.ParticleSystem();
		}
		
		// UnityEngine.ParticleSystem.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem.Play
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_Play()
		{
			global::UnityEngine.ParticleSystem target = default(global::UnityEngine.ParticleSystem);
			bool arg0 = default(bool);
			target.Play(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.ParticleSystem, bool> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.ParticleSystem, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.ParticleSystem), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem.Play
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_Play_0()
		{
			global::UnityEngine.ParticleSystem target = default(global::UnityEngine.ParticleSystem);
			target.Play();
			global::Ludiq.InstanceActionInvoker<UnityEngine.ParticleSystem> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.ParticleSystem>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.ParticleSystem));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem.Stop
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_Stop()
		{
			global::UnityEngine.ParticleSystem target = default(global::UnityEngine.ParticleSystem);
			bool arg0 = default(bool);
			global::UnityEngine.ParticleSystemStopBehavior arg1 = default(global::UnityEngine.ParticleSystemStopBehavior);
			target.Stop(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.ParticleSystem, bool, UnityEngine.ParticleSystemStopBehavior> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.ParticleSystem, bool, UnityEngine.ParticleSystemStopBehavior>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.ParticleSystem), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystem.Stop
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystem_Stop_0()
		{
			global::UnityEngine.ParticleSystem target = default(global::UnityEngine.ParticleSystem);
			target.Stop();
			global::Ludiq.InstanceActionInvoker<UnityEngine.ParticleSystem> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.ParticleSystem>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.ParticleSystem));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemForceField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemForceField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemForceField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemForceField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemForceField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemForceField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ParticleSystemRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ParticleSystemRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicMaterial.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicMaterial_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicMaterial.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicMaterial_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicMaterial.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicMaterial_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Physics.BoxCast
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Physics_BoxCast()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg2 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Quaternion arg3 = default(global::UnityEngine.Quaternion);
			float arg4 = default(float);
			int arg5 = default(int);
			global::UnityEngine.Physics.BoxCast(arg0, arg1, arg2, arg3, arg4, arg5);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2, arg3, arg4, arg5);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Physics.gravity
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Physics_gravity()
		{
			global::UnityEngine.Vector3 accessor = global::UnityEngine.Physics.gravity;
			global::UnityEngine.Physics.gravity = default(global::UnityEngine.Vector3);
			global::Ludiq.StaticPropertyAccessor<UnityEngine.Vector3> optimized = new global::Ludiq.StaticPropertyAccessor<UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
			optimized.SetValue(null, default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Physics.Raycast
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Physics_Raycast()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			global::UnityEngine.RaycastHit arg2 = default(global::UnityEngine.RaycastHit);
			float arg3 = default(float);
			int arg4 = default(int);
			global::UnityEngine.Physics.Raycast(arg0, arg1, out arg2, arg3, arg4);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Physics.Raycast
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Physics_Raycast_0()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			global::UnityEngine.RaycastHit arg2 = default(global::UnityEngine.RaycastHit);
			global::UnityEngine.Physics.Raycast(arg0, arg1, out arg2);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Physics.Raycast
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Physics_Raycast_1()
		{
			global::UnityEngine.Ray arg0 = default(global::UnityEngine.Ray);
			global::UnityEngine.RaycastHit arg1 = default(global::UnityEngine.RaycastHit);
			float arg2 = default(float);
			int arg3 = default(int);
			global::UnityEngine.Physics.Raycast(arg0, out arg1, arg2, arg3);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Physics.Raycast
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Physics_Raycast_2()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			float arg2 = default(float);
			int arg3 = default(int);
			global::UnityEngine.QueryTriggerInteraction arg4 = default(global::UnityEngine.QueryTriggerInteraction);
			global::UnityEngine.Physics.Raycast(arg0, arg1, arg2, arg3, arg4);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, float, int, UnityEngine.QueryTriggerInteraction, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, float, int, UnityEngine.QueryTriggerInteraction, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2, arg3, arg4);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Physics.SphereCast
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Physics_SphereCast()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			float arg1 = default(float);
			global::UnityEngine.Vector3 arg2 = default(global::UnityEngine.Vector3);
			global::UnityEngine.RaycastHit arg3 = default(global::UnityEngine.RaycastHit);
			float arg4 = default(float);
			int arg5 = default(int);
			global::UnityEngine.Physics.SphereCast(arg0, arg1, arg2, out arg3, arg4, arg5);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsMaterial2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsMaterial2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsMaterial2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsMaterial2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsMaterial2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsMaterial2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsUpdateBehaviour2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsUpdateBehaviour2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PhysicsUpdateBehaviour2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PlatformEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PlatformEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PlatformEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PlatformEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PlatformEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PlatformEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableDirector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableDirector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableDirector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableDirector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableDirector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableDirector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PointEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PointEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PointEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PointEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PointEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PointEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PolygonCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PolygonCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PolygonCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PolygonCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.PolygonCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_PolygonCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Projector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Projector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Projector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Projector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Projector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Projector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.QualitySettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_QualitySettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.QualitySettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_QualitySettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.QualitySettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_QualitySettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.Euler
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_Euler()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			float arg2 = default(float);
			global::UnityEngine.Quaternion.Euler(arg0, arg1, arg2);
			global::Ludiq.StaticFunctionInvoker<float, float, float, UnityEngine.Quaternion> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, float, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.Euler
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_Euler_0()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Quaternion.Euler(arg0);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Quaternion> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.eulerAngles
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_eulerAngles()
		{
			global::UnityEngine.Quaternion target = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Vector3 accessor = target.eulerAngles;
			target.eulerAngles = default(global::UnityEngine.Vector3);
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Quaternion));
			optimized.SetValue(default(global::UnityEngine.Quaternion), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Quaternion.FromToRotation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_FromToRotation()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Quaternion.FromToRotation(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Quaternion> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.LookRotation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_LookRotation()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Quaternion.LookRotation(arg0);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Quaternion> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Equality()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Inequality()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Multiply()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			UnityEngine.Quaternion @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, UnityEngine.Quaternion> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Multiply_0()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.Slerp
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_Slerp()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			float arg2 = default(float);
			global::UnityEngine.Quaternion.Slerp(arg0, arg1, arg2);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, float, UnityEngine.Quaternion> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, float, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Random.insideUnitCircle
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Random_insideUnitCircle()
		{
			global::UnityEngine.Vector2 accessor = global::UnityEngine.Random.insideUnitCircle;
			global::Ludiq.StaticPropertyAccessor<UnityEngine.Vector2> optimized = new global::Ludiq.StaticPropertyAccessor<UnityEngine.Vector2>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
		}
		
		// UnityEngine.Random.Range
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Random_Range()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			global::UnityEngine.Random.Range(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, float> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Random.Range
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Random_Range_0()
		{
			int arg0 = default(int);
			int arg1 = default(int);
			global::UnityEngine.Random.Range(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<int, int, int> optimized = new global::Ludiq.StaticFunctionInvoker<int, int, int>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RaycastHit.barycentricCoordinate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RaycastHit_barycentricCoordinate()
		{
			global::UnityEngine.RaycastHit target = default(global::UnityEngine.RaycastHit);
			global::UnityEngine.Vector3 accessor = target.barycentricCoordinate;
			target.barycentricCoordinate = default(global::UnityEngine.Vector3);
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.RaycastHit));
			optimized.SetValue(default(global::UnityEngine.RaycastHit), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.RaycastHit.collider
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RaycastHit_collider()
		{
			global::UnityEngine.RaycastHit target = default(global::UnityEngine.RaycastHit);
			global::UnityEngine.Collider accessor = target.collider;
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.RaycastHit));
		}
		
		// UnityEngine.RaycastHit.distance
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RaycastHit_distance()
		{
			global::UnityEngine.RaycastHit target = default(global::UnityEngine.RaycastHit);
			float accessor = target.distance;
			target.distance = default(float);
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.RaycastHit));
			optimized.SetValue(default(global::UnityEngine.RaycastHit), default(float));
		}
		
		// UnityEngine.RaycastHit.lightmapCoord
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RaycastHit_lightmapCoord()
		{
			global::UnityEngine.RaycastHit target = default(global::UnityEngine.RaycastHit);
			global::UnityEngine.Vector2 accessor = target.lightmapCoord;
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.RaycastHit));
		}
		
		// UnityEngine.RaycastHit.normal
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RaycastHit_normal()
		{
			global::UnityEngine.RaycastHit target = default(global::UnityEngine.RaycastHit);
			global::UnityEngine.Vector3 accessor = target.normal;
			target.normal = default(global::UnityEngine.Vector3);
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.RaycastHit));
			optimized.SetValue(default(global::UnityEngine.RaycastHit), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.RaycastHit.point
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RaycastHit_point()
		{
			global::UnityEngine.RaycastHit target = default(global::UnityEngine.RaycastHit);
			global::UnityEngine.Vector3 accessor = target.point;
			target.point = default(global::UnityEngine.Vector3);
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.RaycastHit));
			optimized.SetValue(default(global::UnityEngine.RaycastHit), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.RaycastHit.rigidbody
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RaycastHit_rigidbody()
		{
			global::UnityEngine.RaycastHit target = default(global::UnityEngine.RaycastHit);
			global::UnityEngine.Rigidbody accessor = target.rigidbody;
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.RaycastHit));
		}
		
		// UnityEngine.RaycastHit.textureCoord
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RaycastHit_textureCoord()
		{
			global::UnityEngine.RaycastHit target = default(global::UnityEngine.RaycastHit);
			global::UnityEngine.Vector2 accessor = target.textureCoord;
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.RaycastHit));
		}
		
		// UnityEngine.RaycastHit.textureCoord2
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RaycastHit_textureCoord2()
		{
			global::UnityEngine.RaycastHit target = default(global::UnityEngine.RaycastHit);
			global::UnityEngine.Vector2 accessor = target.textureCoord2;
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.RaycastHit));
		}
		
		// UnityEngine.RaycastHit.transform
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RaycastHit_transform()
		{
			global::UnityEngine.RaycastHit target = default(global::UnityEngine.RaycastHit);
			global::UnityEngine.Transform accessor = target.transform;
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.RaycastHit));
		}
		
		// UnityEngine.RaycastHit.triangleIndex
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RaycastHit_triangleIndex()
		{
			global::UnityEngine.RaycastHit target = default(global::UnityEngine.RaycastHit);
			int accessor = target.triangleIndex;
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.RaycastHit));
		}
		
		// UnityEngine.RaycastHit2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RaycastHit2D_op_Implicit()
		{
			global::UnityEngine.RaycastHit2D arg0 = default(global::UnityEngine.RaycastHit2D);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.RaycastHit2D, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.RaycastHit2D, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rect_op_Equality()
		{
			global::UnityEngine.Rect arg0 = default(global::UnityEngine.Rect);
			global::UnityEngine.Rect arg1 = default(global::UnityEngine.Rect);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rect_op_Inequality()
		{
			global::UnityEngine.Rect arg0 = default(global::UnityEngine.Rect);
			global::UnityEngine.Rect arg1 = default(global::UnityEngine.Rect);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RectTransform.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RectTransform_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RectTransform.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RectTransform_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RectTransform.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RectTransform_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ReflectionProbe.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ReflectionProbe_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ReflectionProbe.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ReflectionProbe_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ReflectionProbe.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ReflectionProbe_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RelativeJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RelativeJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RelativeJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RelativeJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RelativeJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RelativeJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Renderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Renderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Renderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Renderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Renderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Renderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.GraphicsSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.GraphicsSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.GraphicsSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.SortingGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_SortingGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.SortingGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_SortingGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.SortingGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_SortingGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.AddForce
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_AddForce()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.ForceMode arg1 = default(global::UnityEngine.ForceMode);
			target.AddForce(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Rigidbody, UnityEngine.Vector3, UnityEngine.ForceMode> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Rigidbody, UnityEngine.Vector3, UnityEngine.ForceMode>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Rigidbody), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.AddForce
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_AddForce_0()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			float arg0 = default(float);
			float arg1 = default(float);
			float arg2 = default(float);
			global::UnityEngine.ForceMode arg3 = default(global::UnityEngine.ForceMode);
			target.AddForce(arg0, arg1, arg2, arg3);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Rigidbody, float, float, float, UnityEngine.ForceMode> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Rigidbody, float, float, float, UnityEngine.ForceMode>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Rigidbody), arg0, arg1, arg2, arg3);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.AddForce
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_AddForce_1()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.AddForce(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Rigidbody, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Rigidbody, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Rigidbody), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.AddRelativeForce
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_AddRelativeForce()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.ForceMode arg1 = default(global::UnityEngine.ForceMode);
			target.AddRelativeForce(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Rigidbody, UnityEngine.Vector3, UnityEngine.ForceMode> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Rigidbody, UnityEngine.Vector3, UnityEngine.ForceMode>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Rigidbody), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.AddRelativeForce
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_AddRelativeForce_0()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			float arg0 = default(float);
			float arg1 = default(float);
			float arg2 = default(float);
			global::UnityEngine.ForceMode arg3 = default(global::UnityEngine.ForceMode);
			target.AddRelativeForce(arg0, arg1, arg2, arg3);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Rigidbody, float, float, float, UnityEngine.ForceMode> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Rigidbody, float, float, float, UnityEngine.ForceMode>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Rigidbody), arg0, arg1, arg2, arg3);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.angularVelocity
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_angularVelocity()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			global::UnityEngine.Vector3 accessor = target.angularVelocity;
			target.angularVelocity = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Rigidbody));
			optimized.SetValue(default(global::UnityEngine.Rigidbody), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Rigidbody.centerOfMass
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_centerOfMass()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			global::UnityEngine.Vector3 accessor = target.centerOfMass;
			target.centerOfMass = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Rigidbody));
			optimized.SetValue(default(global::UnityEngine.Rigidbody), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Rigidbody.freezeRotation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_freezeRotation()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			bool accessor = target.freezeRotation;
			target.freezeRotation = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Rigidbody));
			optimized.SetValue(default(global::UnityEngine.Rigidbody), default(bool));
		}
		
		// UnityEngine.Rigidbody.GetRelativePointVelocity
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_GetRelativePointVelocity()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.GetRelativePointVelocity(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Rigidbody, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Rigidbody, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Rigidbody), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.isKinematic
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_isKinematic()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			bool accessor = target.isKinematic;
			target.isKinematic = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Rigidbody));
			optimized.SetValue(default(global::UnityEngine.Rigidbody), default(bool));
		}
		
		// UnityEngine.Rigidbody.mass
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_mass()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			float accessor = target.mass;
			target.mass = default(float);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, float> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Rigidbody));
			optimized.SetValue(default(global::UnityEngine.Rigidbody), default(float));
		}
		
		// UnityEngine.Rigidbody.MovePosition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_MovePosition()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.MovePosition(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Rigidbody, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Rigidbody, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Rigidbody), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody.position
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_position()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			global::UnityEngine.Vector3 accessor = target.position;
			target.position = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Rigidbody));
			optimized.SetValue(default(global::UnityEngine.Rigidbody), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Rigidbody.rotation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_rotation()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			global::UnityEngine.Quaternion accessor = target.rotation;
			target.rotation = default(global::UnityEngine.Quaternion);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, UnityEngine.Quaternion> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, UnityEngine.Quaternion>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Rigidbody));
			optimized.SetValue(default(global::UnityEngine.Rigidbody), default(global::UnityEngine.Quaternion));
		}
		
		// UnityEngine.Rigidbody.useGravity
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_useGravity()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			bool accessor = target.useGravity;
			target.useGravity = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Rigidbody));
			optimized.SetValue(default(global::UnityEngine.Rigidbody), default(bool));
		}
		
		// UnityEngine.Rigidbody.velocity
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody_velocity()
		{
			global::UnityEngine.Rigidbody target = default(global::UnityEngine.Rigidbody);
			global::UnityEngine.Vector3 accessor = target.velocity;
			target.velocity = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Rigidbody, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Rigidbody));
			optimized.SetValue(default(global::UnityEngine.Rigidbody), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Rigidbody2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rigidbody2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rigidbody2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RuntimeAnimatorController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RuntimeAnimatorController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RuntimeAnimatorController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RuntimeAnimatorController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RuntimeAnimatorController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RuntimeAnimatorController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SceneManagement.Scene.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SceneManagement_Scene_op_Equality()
		{
			global::UnityEngine.SceneManagement.Scene arg0 = default(global::UnityEngine.SceneManagement.Scene);
			global::UnityEngine.SceneManagement.Scene arg1 = default(global::UnityEngine.SceneManagement.Scene);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SceneManagement.Scene.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SceneManagement_Scene_op_Inequality()
		{
			global::UnityEngine.SceneManagement.Scene arg0 = default(global::UnityEngine.SceneManagement.Scene);
			global::UnityEngine.SceneManagement.Scene arg1 = default(global::UnityEngine.SceneManagement.Scene);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SceneManagement.SceneManager.LoadScene
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SceneManagement_SceneManager_LoadScene()
		{
			string arg0 = default(string);
			global::UnityEngine.SceneManagement.SceneManager.LoadScene(arg0);
			global::Ludiq.StaticActionInvoker<string> optimized = new global::Ludiq.StaticActionInvoker<string>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SceneManagement.SceneManager.LoadScene
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SceneManagement_SceneManager_LoadScene_0()
		{
			int arg0 = default(int);
			global::UnityEngine.SceneManagement.SceneManager.LoadScene(arg0);
			global::Ludiq.StaticActionInvoker<int> optimized = new global::Ludiq.StaticActionInvoker<int>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ScriptableObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ScriptableObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ScriptableObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ScriptableObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ScriptableObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ScriptableObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Shader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Shader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Shader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Shader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Shader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Shader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ShaderVariantCollection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ShaderVariantCollection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ShaderVariantCollection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ShaderVariantCollection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ShaderVariantCollection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ShaderVariantCollection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SkinnedMeshRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SkinnedMeshRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SkinnedMeshRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SkinnedMeshRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SkinnedMeshRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SkinnedMeshRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Skybox.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Skybox_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Skybox.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Skybox_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Skybox.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Skybox_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SliderJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SliderJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SliderJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SliderJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SliderJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SliderJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SparseTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SparseTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SparseTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SparseTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SparseTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SparseTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SphereCollider..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SphereCollider_ctor()
		{
			new UnityEngine.SphereCollider();
		}
		
		// UnityEngine.SphereCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SphereCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SphereCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SphereCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SphereCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SphereCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpringJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpringJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Sprite.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Sprite_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Sprite.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Sprite_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Sprite.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Sprite_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteMask.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteMask_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteMask_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteMask.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteMask_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteRenderer..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_ctor()
		{
			new UnityEngine.SpriteRenderer();
		}
		
		// UnityEngine.SpriteRenderer.color
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_color()
		{
			global::UnityEngine.SpriteRenderer target = default(global::UnityEngine.SpriteRenderer);
			global::UnityEngine.Color accessor = target.color;
			target.color = default(global::UnityEngine.Color);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.SpriteRenderer, UnityEngine.Color> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.SpriteRenderer, UnityEngine.Color>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.SpriteRenderer));
			optimized.SetValue(default(global::UnityEngine.SpriteRenderer), default(global::UnityEngine.Color));
		}
		
		// UnityEngine.SpriteRenderer.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_enabled()
		{
			global::UnityEngine.Renderer target = default(global::UnityEngine.Renderer);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Renderer, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Renderer, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Renderer));
			optimized.SetValue(default(global::UnityEngine.Renderer), default(bool));
		}
		
		// UnityEngine.SpriteRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteRenderer.sprite
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_sprite()
		{
			global::UnityEngine.SpriteRenderer target = default(global::UnityEngine.SpriteRenderer);
			global::UnityEngine.Sprite accessor = target.sprite;
			target.sprite = default(global::UnityEngine.Sprite);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.SpriteRenderer, UnityEngine.Sprite> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.SpriteRenderer, UnityEngine.Sprite>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.SpriteRenderer));
			optimized.SetValue(default(global::UnityEngine.SpriteRenderer), default(global::UnityEngine.Sprite));
		}
		
		// UnityEngine.SurfaceEffector2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SurfaceEffector2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SurfaceEffector2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SurfaceEffector2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SurfaceEffector2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SurfaceEffector2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TargetJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TargetJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TargetJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TargetJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TargetJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TargetJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Terrain.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Terrain_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Terrain.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Terrain_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Terrain.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Terrain_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainData.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainData_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainData.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainData_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainData.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainData_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainLayer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainLayer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainLayer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainLayer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TerrainLayer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TerrainLayer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextMesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextMesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextMesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextMesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextMesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextMesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2DArray.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2DArray_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2DArray.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2DArray_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2DArray.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2DArray_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture3D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture3D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture3D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture3D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture3D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture3D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tilemap.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tilemap_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tilemap.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tilemap_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.Tilemap.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_Tilemap_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapCollider2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapCollider2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapCollider2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tilemaps.TilemapRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Time.deltaTime
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Time_deltaTime()
		{
			float accessor = global::UnityEngine.Time.deltaTime;
			global::Ludiq.StaticPropertyAccessor<float> optimized = new global::Ludiq.StaticPropertyAccessor<float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
		}
		
		// UnityEngine.Time.fixedDeltaTime
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Time_fixedDeltaTime()
		{
			float accessor = global::UnityEngine.Time.fixedDeltaTime;
			global::UnityEngine.Time.fixedDeltaTime = default(float);
			global::Ludiq.StaticPropertyAccessor<float> optimized = new global::Ludiq.StaticPropertyAccessor<float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
			optimized.SetValue(null, default(float));
		}
		
		// UnityEngine.Time.timeScale
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Time_timeScale()
		{
			float accessor = global::UnityEngine.Time.timeScale;
			global::UnityEngine.Time.timeScale = default(float);
			global::Ludiq.StaticPropertyAccessor<float> optimized = new global::Ludiq.StaticPropertyAccessor<float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
			optimized.SetValue(null, default(float));
		}
		
		// UnityEngine.Touch.deltaPosition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Touch_deltaPosition()
		{
			global::UnityEngine.Touch target = default(global::UnityEngine.Touch);
			global::UnityEngine.Vector2 accessor = target.deltaPosition;
			target.deltaPosition = default(global::UnityEngine.Vector2);
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Touch));
			optimized.SetValue(default(global::UnityEngine.Touch), default(global::UnityEngine.Vector2));
		}
		
		// UnityEngine.Touch.phase
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Touch_phase()
		{
			global::UnityEngine.Touch target = default(global::UnityEngine.Touch);
			global::UnityEngine.TouchPhase accessor = target.phase;
			target.phase = default(global::UnityEngine.TouchPhase);
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Touch));
			optimized.SetValue(default(global::UnityEngine.Touch), default(global::UnityEngine.TouchPhase));
		}
		
		// UnityEngine.TrailRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TrailRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TrailRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TrailRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TrailRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TrailRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.eulerAngles
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_eulerAngles()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 accessor = target.eulerAngles;
			target.eulerAngles = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Transform.forward
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_forward()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 accessor = target.forward;
			target.forward = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Transform.localEulerAngles
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_localEulerAngles()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 accessor = target.localEulerAngles;
			target.localEulerAngles = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Transform.localRotation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_localRotation()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Quaternion accessor = target.localRotation;
			target.localRotation = default(global::UnityEngine.Quaternion);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Quaternion> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Quaternion>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Quaternion));
		}
		
		// UnityEngine.Transform.LookAt
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_LookAt()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Transform arg0 = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			target.LookAt(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.LookAt
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_LookAt_0()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Transform arg0 = default(global::UnityEngine.Transform);
			target.LookAt(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Transform> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Transform>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.LookAt
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_LookAt_1()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.LookAt(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.parent
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_parent()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Transform accessor = target.parent;
			target.parent = default(global::UnityEngine.Transform);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Transform> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Transform>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Transform));
		}
		
		// UnityEngine.Transform.position
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_position()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 accessor = target.position;
			target.position = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Transform.Rotate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_Rotate()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			float arg0 = default(float);
			float arg1 = default(float);
			float arg2 = default(float);
			global::UnityEngine.Space arg3 = default(global::UnityEngine.Space);
			target.Rotate(arg0, arg1, arg2, arg3);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, float, float, float, UnityEngine.Space> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, float, float, float, UnityEngine.Space>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0, arg1, arg2, arg3);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.Rotate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_Rotate_0()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			float arg1 = default(float);
			target.Rotate(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3, float> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.Rotate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_Rotate_1()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.Rotate(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.rotation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_rotation()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Quaternion accessor = target.rotation;
			target.rotation = default(global::UnityEngine.Quaternion);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Quaternion> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Quaternion>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Quaternion));
		}
		
		// UnityEngine.Transform.SetPositionAndRotation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_SetPositionAndRotation()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			target.SetPositionAndRotation(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Quaternion> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.transform
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_transform()
		{
			global::UnityEngine.Component target = default(global::UnityEngine.Component);
			global::UnityEngine.Transform accessor = target.transform;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Component, UnityEngine.Transform> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Component, UnityEngine.Transform>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Component));
		}
		
		// UnityEngine.Transform.TransformDirection
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_TransformDirection()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.TransformDirection(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.TransformVector
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_TransformVector()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.TransformVector(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.Translate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_Translate()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			float arg0 = default(float);
			float arg1 = default(float);
			float arg2 = default(float);
			global::UnityEngine.Space arg3 = default(global::UnityEngine.Space);
			target.Translate(arg0, arg1, arg2, arg3);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, float, float, float, UnityEngine.Space> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, float, float, float, UnityEngine.Space>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0, arg1, arg2, arg3);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.Translate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_Translate_0()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Space arg1 = default(global::UnityEngine.Space);
			target.Translate(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Space> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3, UnityEngine.Space>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.Translate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_Translate_1()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			target.Translate(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.Translate
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_Translate_2()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			float arg0 = default(float);
			float arg1 = default(float);
			float arg2 = default(float);
			target.Translate(arg0, arg1, arg2);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, float, float, float> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Transform, float, float, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Transform), arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.up
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_up()
		{
			global::UnityEngine.Transform target = default(global::UnityEngine.Transform);
			global::UnityEngine.Vector3 accessor = target.up;
			target.up = default(global::UnityEngine.Vector3);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Transform, UnityEngine.Vector3>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Transform));
			optimized.SetValue(default(global::UnityEngine.Transform), default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Tree.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tree_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tree.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tree_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Tree.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Tree_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.SpriteAtlas.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_SpriteAtlas_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.SpriteAtlas.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_SpriteAtlas_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.SpriteAtlas.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_SpriteAtlas_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.AspectRatioFitter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_AspectRatioFitter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.AspectRatioFitter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_AspectRatioFitter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.AspectRatioFitter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_AspectRatioFitter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Button.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Button_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Button.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Button_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Button.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Button_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.CanvasScaler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_CanvasScaler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.CanvasScaler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_CanvasScaler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.CanvasScaler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_CanvasScaler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ContentSizeFitter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ContentSizeFitter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ContentSizeFitter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ContentSizeFitter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ContentSizeFitter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ContentSizeFitter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Dropdown.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Dropdown_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Dropdown.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Dropdown_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Dropdown.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Dropdown_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GraphicRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GraphicRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GraphicRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GraphicRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GraphicRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GraphicRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GridLayoutGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GridLayoutGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GridLayoutGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GridLayoutGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GridLayoutGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GridLayoutGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalLayoutGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalLayoutGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalLayoutGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Image.color
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_color()
		{
			global::UnityEngine.UI.Graphic target = default(global::UnityEngine.UI.Graphic);
			global::UnityEngine.Color accessor = target.color;
			target.color = default(global::UnityEngine.Color);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.Graphic, UnityEngine.Color> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.Graphic, UnityEngine.Color>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.UI.Graphic));
			optimized.SetValue(default(global::UnityEngine.UI.Graphic), default(global::UnityEngine.Color));
		}
		
		// UnityEngine.UI.Image.fillAmount
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_fillAmount()
		{
			global::UnityEngine.UI.Image target = default(global::UnityEngine.UI.Image);
			float accessor = target.fillAmount;
			target.fillAmount = default(float);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.Image, float> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.Image, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.UI.Image));
			optimized.SetValue(default(global::UnityEngine.UI.Image), default(float));
		}
		
		// UnityEngine.UI.Image.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Image.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Image.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Image.sprite
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_sprite()
		{
			global::UnityEngine.UI.Image target = default(global::UnityEngine.UI.Image);
			global::UnityEngine.Sprite accessor = target.sprite;
			target.sprite = default(global::UnityEngine.Sprite);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.Image, UnityEngine.Sprite> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.Image, UnityEngine.Sprite>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.UI.Image));
			optimized.SetValue(default(global::UnityEngine.UI.Image), default(global::UnityEngine.Sprite));
		}
		
		// UnityEngine.UI.InputField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_InputField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.InputField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_InputField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.InputField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_InputField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.InputField.text
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_InputField_text()
		{
			global::UnityEngine.UI.InputField target = default(global::UnityEngine.UI.InputField);
			string accessor = target.text;
			target.text = default(string);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.InputField, string> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.InputField, string>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.UI.InputField));
			optimized.SetValue(default(global::UnityEngine.UI.InputField), default(string));
		}
		
		// UnityEngine.UI.LayoutElement.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutElement_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.LayoutElement.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutElement_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.LayoutElement.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutElement_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Mask.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Mask_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Mask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Mask_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Mask.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Mask_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Outline.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Outline_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Outline.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Outline_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Outline.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Outline_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.PositionAsUV1.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_PositionAsUV1_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.PositionAsUV1.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_PositionAsUV1_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.PositionAsUV1.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_PositionAsUV1_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RawImage.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RawImage_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RawImage.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RawImage_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RawImage.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RawImage_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RectMask2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RectMask2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RectMask2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RectMask2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RectMask2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RectMask2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Scrollbar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Scrollbar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Scrollbar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Scrollbar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Scrollbar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Scrollbar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ScrollRect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ScrollRect_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ScrollRect.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ScrollRect_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ScrollRect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ScrollRect_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Selectable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Selectable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Selectable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Selectable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Selectable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Selectable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Shadow.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Shadow_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Shadow.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Shadow_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Shadow.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Shadow_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Slider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Slider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Slider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Text.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Text_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Text.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Text_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Text.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Text_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Text.text
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Text_text()
		{
			global::UnityEngine.UI.Text target = default(global::UnityEngine.UI.Text);
			string accessor = target.text;
			target.text = default(string);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.Text, string> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.Text, string>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.UI.Text));
			optimized.SetValue(default(global::UnityEngine.UI.Text), default(string));
		}
		
		// UnityEngine.UI.Toggle.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Toggle_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Toggle.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Toggle_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Toggle.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Toggle_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ToggleGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ToggleGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ToggleGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ToggleGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ToggleGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ToggleGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.VerticalLayoutGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.VerticalLayoutGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.VerticalLayoutGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.StyleSheet.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_StyleSheet_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.StyleSheet.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_StyleSheet_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.StyleSheet.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_StyleSheet_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VectorImage.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VectorImage_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VectorImage.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VectorImage_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VectorImage.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VectorImage_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VisualTreeAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VisualTreeAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UIElements.VisualTreeAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Addition()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 + arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Division()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 / arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Division_0()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			float arg1 = default(float);
			UnityEngine.Vector2 @operator = (arg0 / arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Equality()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Implicit()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector2 conversion = ((UnityEngine.Vector2)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Implicit_0()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector3 conversion = ((UnityEngine.Vector3)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Inequality()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Multiply()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Multiply_0()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			float arg1 = default(float);
			UnityEngine.Vector2 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Multiply_1()
		{
			float arg0 = default(float);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Subtraction()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 - arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_UnaryNegation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_UnaryNegation()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.x
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_x()
		{
			global::UnityEngine.Vector2 target = default(global::UnityEngine.Vector2);
			float accessor = target.x;
			target.x = default(float);
			global::Ludiq.ReflectionFieldAccessor optimized = new global::Ludiq.ReflectionFieldAccessor(default(global::System.Reflection.FieldInfo));
			optimized.GetValue(default(global::UnityEngine.Vector2));
			optimized.SetValue(default(global::UnityEngine.Vector2), default(float));
		}
		
		// UnityEngine.Vector2.y
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_y()
		{
			global::UnityEngine.Vector2 target = default(global::UnityEngine.Vector2);
			float accessor = target.y;
			target.y = default(float);
			global::Ludiq.ReflectionFieldAccessor optimized = new global::Ludiq.ReflectionFieldAccessor(default(global::System.Reflection.FieldInfo));
			optimized.GetValue(default(global::UnityEngine.Vector2));
			optimized.SetValue(default(global::UnityEngine.Vector2), default(float));
		}
		
		// UnityEngine.Vector3..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_ctor()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			float arg2 = default(float);
			new UnityEngine.Vector3(arg0, arg1, arg2);
		}
		
		// UnityEngine.Vector3.Distance
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_Distance()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3.Distance(arg0, arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, float> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.Magnitude
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_Magnitude()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3.Magnitude(arg0);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, float> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, float>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.normalized
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_normalized()
		{
			global::UnityEngine.Vector3 target = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 accessor = target.normalized;
			global::Ludiq.ReflectionPropertyAccessor optimized = new global::Ludiq.ReflectionPropertyAccessor(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Vector3));
		}
		
		// UnityEngine.Vector3.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Addition()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 + arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Division()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			float arg1 = default(float);
			UnityEngine.Vector3 @operator = (arg0 / arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Equality()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Inequality()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Multiply()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			float arg1 = default(float);
			UnityEngine.Vector3 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Multiply_0()
		{
			float arg0 = default(float);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Subtraction()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 - arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_UnaryNegation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_UnaryNegation()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.Set
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_Set()
		{
			global::UnityEngine.Vector3 target = default(global::UnityEngine.Vector3);
			float arg0 = default(float);
			float arg1 = default(float);
			float arg2 = default(float);
			target.Set(arg0, arg1, arg2);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Vector3), arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.Slerp
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_Slerp()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			float arg2 = default(float);
			global::UnityEngine.Vector3.Slerp(arg0, arg1, arg2);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, float, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, float, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1, arg2);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.x
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_x()
		{
			global::UnityEngine.Vector3 target = default(global::UnityEngine.Vector3);
			float accessor = target.x;
			target.x = default(float);
			global::Ludiq.ReflectionFieldAccessor optimized = new global::Ludiq.ReflectionFieldAccessor(default(global::System.Reflection.FieldInfo));
			optimized.GetValue(default(global::UnityEngine.Vector3));
			optimized.SetValue(default(global::UnityEngine.Vector3), default(float));
		}
		
		// UnityEngine.Vector3.y
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_y()
		{
			global::UnityEngine.Vector3 target = default(global::UnityEngine.Vector3);
			float accessor = target.y;
			target.y = default(float);
			global::Ludiq.ReflectionFieldAccessor optimized = new global::Ludiq.ReflectionFieldAccessor(default(global::System.Reflection.FieldInfo));
			optimized.GetValue(default(global::UnityEngine.Vector3));
			optimized.SetValue(default(global::UnityEngine.Vector3), default(float));
		}
		
		// UnityEngine.Vector3.z
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_z()
		{
			global::UnityEngine.Vector3 target = default(global::UnityEngine.Vector3);
			float accessor = target.z;
			target.z = default(float);
			global::Ludiq.ReflectionFieldAccessor optimized = new global::Ludiq.ReflectionFieldAccessor(default(global::System.Reflection.FieldInfo));
			optimized.GetValue(default(global::UnityEngine.Vector3));
			optimized.SetValue(default(global::UnityEngine.Vector3), default(float));
		}
		
		// UnityEngine.Vector4.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Addition()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 + arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Division()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			float arg1 = default(float);
			UnityEngine.Vector4 @operator = (arg0 / arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Equality()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Implicit()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector4 conversion = ((UnityEngine.Vector4)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Implicit_0()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector3 conversion = ((UnityEngine.Vector3)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Implicit_1()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector4 conversion = ((UnityEngine.Vector4)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Inequality()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Multiply()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			float arg1 = default(float);
			UnityEngine.Vector4 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Multiply_0()
		{
			float arg0 = default(float);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Subtraction()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 - arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_UnaryNegation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_UnaryNegation()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoClip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoClip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoClip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoClip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoClip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoClip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoPlayer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoPlayer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoPlayer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoPlayer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Video.VideoPlayer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Video_VideoPlayer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WebCamTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WebCamTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WebCamTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WebCamTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WebCamTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WebCamTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelCollider..ctor
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_ctor()
		{
			new UnityEngine.WheelCollider();
		}
		
		// UnityEngine.WheelCollider.brakeTorque
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_brakeTorque()
		{
			global::UnityEngine.WheelCollider target = default(global::UnityEngine.WheelCollider);
			float accessor = target.brakeTorque;
			target.brakeTorque = default(float);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.WheelCollider, float> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.WheelCollider, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.WheelCollider));
			optimized.SetValue(default(global::UnityEngine.WheelCollider), default(float));
		}
		
		// UnityEngine.WheelCollider.GetWorldPose
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_GetWorldPose()
		{
			global::UnityEngine.WheelCollider target = default(global::UnityEngine.WheelCollider);
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			target.GetWorldPose(out arg0, out arg1);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelCollider.motorTorque
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_motorTorque()
		{
			global::UnityEngine.WheelCollider target = default(global::UnityEngine.WheelCollider);
			float accessor = target.motorTorque;
			target.motorTorque = default(float);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.WheelCollider, float> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.WheelCollider, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.WheelCollider));
			optimized.SetValue(default(global::UnityEngine.WheelCollider), default(float));
		}
		
		// UnityEngine.WheelCollider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelCollider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelCollider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelCollider.rpm
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_rpm()
		{
			global::UnityEngine.WheelCollider target = default(global::UnityEngine.WheelCollider);
			float accessor = target.rpm;
			global::Ludiq.InstancePropertyAccessor<UnityEngine.WheelCollider, float> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.WheelCollider, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.WheelCollider));
		}
		
		// UnityEngine.WheelCollider.steerAngle
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelCollider_steerAngle()
		{
			global::UnityEngine.WheelCollider target = default(global::UnityEngine.WheelCollider);
			float accessor = target.steerAngle;
			target.steerAngle = default(float);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.WheelCollider, float> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.WheelCollider, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.WheelCollider));
			optimized.SetValue(default(global::UnityEngine.WheelCollider), default(float));
		}
		
		// UnityEngine.WheelJoint2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelJoint2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelJoint2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelJoint2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WheelJoint2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WheelJoint2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WindZone.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WindZone_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WindZone.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WindZone_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WindZone.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WindZone_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.XR.WSA.WorldAnchor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_XR_WSA_WorldAnchor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.XR.WSA.WorldAnchor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_XR_WSA_WorldAnchor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.XR.WSA.WorldAnchor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_XR_WSA_WorldAnchor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets._2D.Camera2DFollow.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_2D_Camera2DFollow_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets._2D.Camera2DFollow.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_2D_Camera2DFollow_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets._2D.Camera2DFollow.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_2D_Camera2DFollow_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets._2D.CameraFollow.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_2D_CameraFollow_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets._2D.CameraFollow.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_2D_CameraFollow_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets._2D.CameraFollow.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_2D_CameraFollow_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets._2D.Platformer2DUserControl.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_2D_Platformer2DUserControl_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets._2D.Platformer2DUserControl.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_2D_Platformer2DUserControl_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets._2D.Platformer2DUserControl.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_2D_Platformer2DUserControl_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets._2D.PlatformerCharacter2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_2D_PlatformerCharacter2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets._2D.PlatformerCharacter2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_2D_PlatformerCharacter2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets._2D.PlatformerCharacter2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_2D_PlatformerCharacter2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets._2D.Restarter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_2D_Restarter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets._2D.Restarter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_2D_Restarter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets._2D.Restarter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_2D_Restarter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.AutoCam.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_AutoCam_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.AutoCam.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_AutoCam_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.AutoCam.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_AutoCam_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.FreeLookCam.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_FreeLookCam_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.FreeLookCam.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_FreeLookCam_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.FreeLookCam.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_FreeLookCam_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.HandHeldCam.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_HandHeldCam_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.HandHeldCam.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_HandHeldCam_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.HandHeldCam.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_HandHeldCam_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.LookatTarget.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_LookatTarget_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.LookatTarget.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_LookatTarget_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.LookatTarget.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_LookatTarget_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.ProtectCameraFromWallClip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_ProtectCameraFromWallClip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.ProtectCameraFromWallClip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_ProtectCameraFromWallClip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.ProtectCameraFromWallClip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_ProtectCameraFromWallClip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.TargetFieldOfView.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_TargetFieldOfView_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.TargetFieldOfView.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_TargetFieldOfView_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Cameras.TargetFieldOfView.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Cameras_TargetFieldOfView_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.FirstPerson.FirstPersonController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_FirstPerson_FirstPersonController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.FirstPerson.FirstPersonController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_FirstPerson_FirstPersonController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.FirstPerson.FirstPersonController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_FirstPerson_FirstPersonController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.FirstPerson.HeadBob.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_FirstPerson_HeadBob_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.FirstPerson.HeadBob.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_FirstPerson_HeadBob_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.FirstPerson.HeadBob.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_FirstPerson_HeadBob_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_FirstPerson_RigidbodyFirstPersonController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_FirstPerson_RigidbodyFirstPersonController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.FirstPerson.RigidbodyFirstPersonController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_FirstPerson_RigidbodyFirstPersonController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.ThirdPerson.AICharacterControl.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_ThirdPerson_AICharacterControl_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.ThirdPerson.AICharacterControl.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_ThirdPerson_AICharacterControl_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.ThirdPerson.AICharacterControl.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_ThirdPerson_AICharacterControl_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_ThirdPerson_ThirdPersonCharacter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_ThirdPerson_ThirdPersonCharacter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.ThirdPerson.ThirdPersonCharacter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_ThirdPerson_ThirdPersonCharacter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.ThirdPerson.ThirdPersonUserControl.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_ThirdPerson_ThirdPersonUserControl_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.ThirdPerson.ThirdPersonUserControl.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_ThirdPerson_ThirdPersonUserControl_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Characters.ThirdPerson.ThirdPersonUserControl.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Characters_ThirdPerson_ThirdPersonUserControl_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.AxisTouchButton.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_AxisTouchButton_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.AxisTouchButton.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_AxisTouchButton_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.AxisTouchButton.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_AxisTouchButton_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.ButtonHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_ButtonHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.ButtonHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_ButtonHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.ButtonHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_ButtonHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.InputAxisScrollbar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_InputAxisScrollbar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.InputAxisScrollbar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_InputAxisScrollbar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.InputAxisScrollbar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_InputAxisScrollbar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.Joystick.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_Joystick_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.Joystick.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_Joystick_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.Joystick.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_Joystick_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.MobileControlRig.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_MobileControlRig_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.MobileControlRig.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_MobileControlRig_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.MobileControlRig.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_MobileControlRig_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.TiltInput.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_TiltInput_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.TiltInput.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_TiltInput_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.TiltInput.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_TiltInput_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.TouchPad.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_TouchPad_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.TouchPad.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_TouchPad_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.CrossPlatformInput.TouchPad.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_CrossPlatformInput_TouchPad_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.AfterburnerPhysicsForce.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_AfterburnerPhysicsForce_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.AfterburnerPhysicsForce.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_AfterburnerPhysicsForce_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.AfterburnerPhysicsForce.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_AfterburnerPhysicsForce_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.ExplosionFireAndDebris.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_ExplosionFireAndDebris_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.ExplosionFireAndDebris.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_ExplosionFireAndDebris_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.ExplosionFireAndDebris.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_ExplosionFireAndDebris_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.ExplosionPhysicsForce.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_ExplosionPhysicsForce_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.ExplosionPhysicsForce.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_ExplosionPhysicsForce_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.ExplosionPhysicsForce.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_ExplosionPhysicsForce_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.Explosive.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_Explosive_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.Explosive.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_Explosive_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.Explosive.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_Explosive_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.ExtinguishableParticleSystem.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_ExtinguishableParticleSystem_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.ExtinguishableParticleSystem.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_ExtinguishableParticleSystem_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.ExtinguishableParticleSystem.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_ExtinguishableParticleSystem_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.FireLight.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_FireLight_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.FireLight.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_FireLight_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.FireLight.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_FireLight_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.Hose.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_Hose_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.Hose.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_Hose_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.Hose.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_Hose_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.ParticleSystemMultiplier.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_ParticleSystemMultiplier_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.ParticleSystemMultiplier.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_ParticleSystemMultiplier_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.ParticleSystemMultiplier.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_ParticleSystemMultiplier_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.SmokeParticles.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_SmokeParticles_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.SmokeParticles.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_SmokeParticles_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.SmokeParticles.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_SmokeParticles_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.WaterHoseParticles.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_WaterHoseParticles_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.WaterHoseParticles.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_WaterHoseParticles_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Effects.WaterHoseParticles.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Effects_WaterHoseParticles_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.SceneUtils.ParticleSceneControls.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_SceneUtils_ParticleSceneControls_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.SceneUtils.ParticleSceneControls.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_SceneUtils_ParticleSceneControls_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.SceneUtils.ParticleSceneControls.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_SceneUtils_ParticleSceneControls_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.SceneUtils.PlaceTargetWithMouse.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_SceneUtils_PlaceTargetWithMouse_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.SceneUtils.PlaceTargetWithMouse.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_SceneUtils_PlaceTargetWithMouse_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.SceneUtils.PlaceTargetWithMouse.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_SceneUtils_PlaceTargetWithMouse_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.SceneUtils.SlowMoButton.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_SceneUtils_SlowMoButton_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.SceneUtils.SlowMoButton.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_SceneUtils_SlowMoButton_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.SceneUtils.SlowMoButton.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_SceneUtils_SlowMoButton_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.ActivateTrigger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_ActivateTrigger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.ActivateTrigger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_ActivateTrigger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.ActivateTrigger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_ActivateTrigger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.AutoMobileShaderSwitch.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_AutoMobileShaderSwitch_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.AutoMobileShaderSwitch.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_AutoMobileShaderSwitch_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.AutoMobileShaderSwitch.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_AutoMobileShaderSwitch_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.AutoMoveAndRotate.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_AutoMoveAndRotate_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.AutoMoveAndRotate.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_AutoMoveAndRotate_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.AutoMoveAndRotate.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_AutoMoveAndRotate_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.DragRigidbody.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_DragRigidbody_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.DragRigidbody.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_DragRigidbody_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.DragRigidbody.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_DragRigidbody_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.DynamicShadowSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_DynamicShadowSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.DynamicShadowSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_DynamicShadowSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.DynamicShadowSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_DynamicShadowSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.FollowTarget.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_FollowTarget_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.FollowTarget.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_FollowTarget_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.FollowTarget.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_FollowTarget_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.FPSCounter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_FPSCounter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.FPSCounter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_FPSCounter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.FPSCounter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_FPSCounter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.ObjectResetter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_ObjectResetter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.ObjectResetter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_ObjectResetter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.ObjectResetter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_ObjectResetter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.ParticleSystemDestroyer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_ParticleSystemDestroyer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.ParticleSystemDestroyer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_ParticleSystemDestroyer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.ParticleSystemDestroyer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_ParticleSystemDestroyer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.PlatformSpecificContent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_PlatformSpecificContent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.PlatformSpecificContent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_PlatformSpecificContent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.PlatformSpecificContent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_PlatformSpecificContent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.SimpleActivatorMenu.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_SimpleActivatorMenu_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.SimpleActivatorMenu.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_SimpleActivatorMenu_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.SimpleActivatorMenu.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_SimpleActivatorMenu_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.SimpleMouseRotator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_SimpleMouseRotator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.SimpleMouseRotator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_SimpleMouseRotator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.SimpleMouseRotator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_SimpleMouseRotator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.SmoothFollow.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_SmoothFollow_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.SmoothFollow.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_SmoothFollow_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.SmoothFollow.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_SmoothFollow_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.TimedObjectActivator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_TimedObjectActivator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.TimedObjectActivator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_TimedObjectActivator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.TimedObjectActivator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_TimedObjectActivator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.TimedObjectDestructor.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_TimedObjectDestructor_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.TimedObjectDestructor.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_TimedObjectDestructor_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.TimedObjectDestructor.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_TimedObjectDestructor_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.WaypointCircuit.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_WaypointCircuit_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.WaypointCircuit.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_WaypointCircuit_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.WaypointCircuit.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_WaypointCircuit_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.WaypointCircuit.waypointList
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_WaypointCircuit_waypointList()
		{
			global::UnityStandardAssets.Utility.WaypointCircuit target = default(global::UnityStandardAssets.Utility.WaypointCircuit);
			global::UnityStandardAssets.Utility.WaypointCircuit.WaypointList accessor = target.waypointList;
			target.waypointList = default(global::UnityStandardAssets.Utility.WaypointCircuit.WaypointList);
			global::Ludiq.InstanceFieldAccessor<UnityStandardAssets.Utility.WaypointCircuit, UnityStandardAssets.Utility.WaypointCircuit.WaypointList> optimized = new global::Ludiq.InstanceFieldAccessor<UnityStandardAssets.Utility.WaypointCircuit, UnityStandardAssets.Utility.WaypointCircuit.WaypointList>(default(global::System.Reflection.FieldInfo));
			optimized.GetValue(default(global::UnityStandardAssets.Utility.WaypointCircuit));
			optimized.SetValue(default(global::UnityStandardAssets.Utility.WaypointCircuit), default(global::UnityStandardAssets.Utility.WaypointCircuit.WaypointList));
		}
		
		// UnityStandardAssets.Utility.WaypointProgressTracker.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_WaypointProgressTracker_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.WaypointProgressTracker.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_WaypointProgressTracker_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.WaypointProgressTracker.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_WaypointProgressTracker_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Utility.WaypointProgressTracker.Reset
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Utility_WaypointProgressTracker_Reset()
		{
			global::UnityStandardAssets.Utility.WaypointProgressTracker target = default(global::UnityStandardAssets.Utility.WaypointProgressTracker);
			target.Reset();
			global::Ludiq.InstanceActionInvoker<UnityStandardAssets.Utility.WaypointProgressTracker> optimized = new global::Ludiq.InstanceActionInvoker<UnityStandardAssets.Utility.WaypointProgressTracker>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityStandardAssets.Utility.WaypointProgressTracker));
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAiControl.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneAiControl_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAiControl.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneAiControl_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAiControl.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneAiControl_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAudio.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneAudio_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAudio.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneAudio_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneAudio.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneAudio_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneControlSurfaceAnimator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneControlSurfaceAnimator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneControlSurfaceAnimator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneControlSurfaceAnimator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplanePropellerAnimator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplanePropellerAnimator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplanePropellerAnimator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplanePropellerAnimator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplanePropellerAnimator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplanePropellerAnimator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl2Axis.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneUserControl2Axis_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl2Axis.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneUserControl2Axis_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl2Axis.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneUserControl2Axis_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl4Axis.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneUserControl4Axis_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl4Axis.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneUserControl4Axis_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.AeroplaneUserControl4Axis.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_AeroplaneUserControl4Axis_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.JetParticleEffect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_JetParticleEffect_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.JetParticleEffect.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_JetParticleEffect_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.JetParticleEffect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_JetParticleEffect_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.LandingGear.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_LandingGear_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.LandingGear.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_LandingGear_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Aeroplane.LandingGear.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Aeroplane_LandingGear_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Ball.Ball.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Ball_Ball_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Ball.Ball.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Ball_Ball_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Ball.Ball.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Ball_Ball_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Ball.BallUserControl.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Ball_BallUserControl_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Ball.BallUserControl.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Ball_BallUserControl_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Ball.BallUserControl.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Ball_BallUserControl_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.BrakeLight.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_BrakeLight_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.BrakeLight.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_BrakeLight_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.BrakeLight.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_BrakeLight_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.CarAIControl.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_CarAIControl_enabled()
		{
			global::UnityEngine.Behaviour target = default(global::UnityEngine.Behaviour);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Behaviour));
			optimized.SetValue(default(global::UnityEngine.Behaviour), default(bool));
		}
		
		// UnityStandardAssets.Vehicles.Car.CarAIControl.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_CarAIControl_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.CarAIControl.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_CarAIControl_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.CarAIControl.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_CarAIControl_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.CarAudio.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_CarAudio_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.CarAudio.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_CarAudio_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.CarAudio.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_CarAudio_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.CarController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_CarController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.CarController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_CarController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.CarController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_CarController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.CarSelfRighting.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_CarSelfRighting_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.CarSelfRighting.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_CarSelfRighting_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.CarSelfRighting.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_CarSelfRighting_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.CarUserControl.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_CarUserControl_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.CarUserControl.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_CarUserControl_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.CarUserControl.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_CarUserControl_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.Mudguard.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_Mudguard_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.Mudguard.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_Mudguard_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.Mudguard.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_Mudguard_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.SkidTrail.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_SkidTrail_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.SkidTrail.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_SkidTrail_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.SkidTrail.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_SkidTrail_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.Suspension.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_Suspension_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.Suspension.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_Suspension_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.Suspension.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_Suspension_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.WheelEffects.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_WheelEffects_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.WheelEffects.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_WheelEffects_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Vehicles.Car.WheelEffects.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Vehicles_Car_WheelEffects_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.Displace.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_Displace_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.Displace.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_Displace_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.Displace.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_Displace_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.GerstnerDisplace.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_GerstnerDisplace_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.GerstnerDisplace.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_GerstnerDisplace_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.GerstnerDisplace.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_GerstnerDisplace_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.PlanarReflection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_PlanarReflection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.PlanarReflection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_PlanarReflection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.PlanarReflection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_PlanarReflection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.SpecularLighting.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_SpecularLighting_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.SpecularLighting.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_SpecularLighting_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.SpecularLighting.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_SpecularLighting_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.Water.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_Water_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.Water.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_Water_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.Water.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_Water_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.WaterBase.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_WaterBase_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.WaterBase.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_WaterBase_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.WaterBase.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_WaterBase_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.WaterBasic.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_WaterBasic_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.WaterBasic.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_WaterBasic_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.WaterBasic.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_WaterBasic_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.WaterTile.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_WaterTile_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.WaterTile.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_WaterTile_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityStandardAssets.Water.WaterTile.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityStandardAssets_Water_WaterTile_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityTemplateProjects.SimpleCameraController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityTemplateProjects_SimpleCameraController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityTemplateProjects.SimpleCameraController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityTemplateProjects_SimpleCameraController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityTemplateProjects.SimpleCameraController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityTemplateProjects_SimpleCameraController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// VariableJoystick.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VariableJoystick_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// VariableJoystick.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VariableJoystick_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// VariableJoystick.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VariableJoystick_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// VariableJoystick.Vertical
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VariableJoystick_Vertical()
		{
			global::Joystick target = default(global::Joystick);
			float accessor = target.Vertical;
			global::Ludiq.InstancePropertyAccessor<Joystick, float> optimized = new global::Ludiq.InstancePropertyAccessor<Joystick, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::Joystick));
		}
		
		// VisualClockController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VisualClockController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// VisualClockController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VisualClockController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// VisualClockController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void VisualClockController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Visyde.V_SMC_Camera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Visyde_V_SMC_Camera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Visyde.V_SMC_Camera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Visyde_V_SMC_Camera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Visyde.V_SMC_Camera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Visyde_V_SMC_Camera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Visyde.V_SMC_Handler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Visyde_V_SMC_Handler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Visyde.V_SMC_Handler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Visyde_V_SMC_Handler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Visyde.V_SMC_Handler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Visyde_V_SMC_Handler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Visyde.V_Text.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Visyde_V_Text_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Visyde.V_Text.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Visyde_V_Text_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Visyde.V_Text.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Visyde_V_Text_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// WayPointsRenamer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void WayPointsRenamer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// WayPointsRenamer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void WayPointsRenamer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// WayPointsRenamer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void WayPointsRenamer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// WheelMeshes.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void WheelMeshes_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// WheelMeshes.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void WheelMeshes_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// WheelMeshes.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void WheelMeshes_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// WpPatrol.enabled
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void WpPatrol_enabled()
		{
			global::UnityEngine.Behaviour target = default(global::UnityEngine.Behaviour);
			bool accessor = target.enabled;
			target.enabled = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.Behaviour, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.Behaviour));
			optimized.SetValue(default(global::UnityEngine.Behaviour), default(bool));
		}
		
		// WpPatrol.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void WpPatrol_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// WpPatrol.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void WpPatrol_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// WpPatrol.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void WpPatrol_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// YineTop.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void YineTop_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// YineTop.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void YineTop_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// YineTop.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void YineTop_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
	}
}
